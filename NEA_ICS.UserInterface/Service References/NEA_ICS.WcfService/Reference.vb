'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace NEA_ICS.WcfService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ReceiveItemDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ReceiveItemDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemQtyOutstandingField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemUnitCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemWarrantyDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TranIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Mode() As String
            Get
                Return Me.ModeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModeField, value) <> true) Then
                    Me.ModeField = value
                    Me.RaisePropertyChanged("Mode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemID() As Integer
            Get
                Return Me.OrderItemIDField
            End Get
            Set
                If (Me.OrderItemIDField.Equals(value) <> true) Then
                    Me.OrderItemIDField = value
                    Me.RaisePropertyChanged("OrderItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemQtyOutstanding() As Decimal
            Get
                Return Me.OrderItemQtyOutstandingField
            End Get
            Set
                If (Me.OrderItemQtyOutstandingField.Equals(value) <> true) Then
                    Me.OrderItemQtyOutstandingField = value
                    Me.RaisePropertyChanged("OrderItemQtyOutstanding")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemUnitCost() As Double
            Get
                Return Me.OrderItemUnitCostField
            End Get
            Set
                If (Me.OrderItemUnitCostField.Equals(value) <> true) Then
                    Me.OrderItemUnitCostField = value
                    Me.RaisePropertyChanged("OrderItemUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemWarrantyDte() As Date
            Get
                Return Me.OrderItemWarrantyDteField
            End Get
            Set
                If (Me.OrderItemWarrantyDteField.Equals(value) <> true) Then
                    Me.OrderItemWarrantyDteField = value
                    Me.RaisePropertyChanged("OrderItemWarrantyDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Qty() As Decimal
            Get
                Return Me.QtyField
            End Get
            Set
                If (Me.QtyField.Equals(value) <> true) Then
                    Me.QtyField = value
                    Me.RaisePropertyChanged("Qty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TranID() As Integer
            Get
                Return Me.TranIDField
            End Get
            Set
                If (Me.TranIDField.Equals(value) <> true) Then
                    Me.TranIDField = value
                    Me.RaisePropertyChanged("TranID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ServiceFault
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DataField As System.Collections.Generic.Dictionary(Of Object, Object)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As System.Guid
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MessageTextField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Data() As System.Collections.Generic.Dictionary(Of Object, Object)
            Get
                Return Me.DataField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DataField, value) <> true) Then
                    Me.DataField = value
                    Me.RaisePropertyChanged("Data")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As System.Guid
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MessageText() As String
            Get
                Return Me.MessageTextField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MessageTextField, value) <> true) Then
                    Me.MessageTextField = value
                    Me.RaisePropertyChanged("MessageText")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Service.ColumnName", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
    Public Enum ServiceColumnName As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        OrderId = 2012
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        OrderGebizPONo = 2013
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        IssueSerialNo = 2035
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        DirectIssueSerialNo = 2046
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AdjustSerialNo = 3004
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AdjustInID = 3012
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AdjustOutID = 3022
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ReceiveList", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ReceiveList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDte() As Date
            Get
                Return Me.OrderDteField
            End Get
            Set
                If (Me.OrderDteField.Equals(value) <> true) Then
                    Me.OrderDteField = value
                    Me.RaisePropertyChanged("OrderDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderID() As String
            Get
                Return Me.OrderIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OrderIDField, value) <> true) Then
                    Me.OrderIDField = value
                    Me.RaisePropertyChanged("OrderID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveDte() As Date
            Get
                Return Me.ReceiveDteField
            End Get
            Set
                If (Me.ReceiveDteField.Equals(value) <> true) Then
                    Me.ReceiveDteField = value
                    Me.RaisePropertyChanged("ReceiveDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveQty() As Decimal
            Get
                Return Me.ReceiveQtyField
            End Get
            Set
                If (Me.ReceiveQtyField.Equals(value) <> true) Then
                    Me.ReceiveQtyField = value
                    Me.RaisePropertyChanged("ReceiveQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="RequestDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class RequestDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApproveByField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApproveDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueByField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestByField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SoughtField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApproveBy() As String
            Get
                Return Me.ApproveByField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ApproveByField, value) <> true) Then
                    Me.ApproveByField = value
                    Me.RaisePropertyChanged("ApproveBy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApproveDte() As Date
            Get
                Return Me.ApproveDteField
            End Get
            Set
                If (Me.ApproveDteField.Equals(value) <> true) Then
                    Me.ApproveDteField = value
                    Me.RaisePropertyChanged("ApproveDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerID() As String
            Get
                Return Me.ConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerIDField, value) <> true) Then
                    Me.ConsumerIDField = value
                    Me.RaisePropertyChanged("ConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueBy() As String
            Get
                Return Me.IssueByField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueByField, value) <> true) Then
                    Me.IssueByField = value
                    Me.RaisePropertyChanged("IssueBy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueDte() As Date
            Get
                Return Me.IssueDteField
            End Get
            Set
                If (Me.IssueDteField.Equals(value) <> true) Then
                    Me.IssueDteField = value
                    Me.RaisePropertyChanged("IssueDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestBy() As String
            Get
                Return Me.RequestByField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestByField, value) <> true) Then
                    Me.RequestByField = value
                    Me.RaisePropertyChanged("RequestBy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestDte() As Date
            Get
                Return Me.RequestDteField
            End Get
            Set
                If (Me.RequestDteField.Equals(value) <> true) Then
                    Me.RequestDteField = value
                    Me.RaisePropertyChanged("RequestDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestID() As String
            Get
                Return Me.RequestIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestIDField, value) <> true) Then
                    Me.RequestIDField = value
                    Me.RaisePropertyChanged("RequestID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SerialNo() As String
            Get
                Return Me.SerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SerialNoField, value) <> true) Then
                    Me.SerialNoField = value
                    Me.RaisePropertyChanged("SerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Sought() As Boolean
            Get
                Return Me.SoughtField
            End Get
            Set
                If (Me.SoughtField.Equals(value) <> true) Then
                    Me.SoughtField = value
                    Me.RaisePropertyChanged("Sought")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Type() As String
            Get
                Return Me.TypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TypeField, value) <> true) Then
                    Me.TypeField = value
                    Me.RaisePropertyChanged("Type")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="IssueItemDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class IssueItemDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BalanceQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestItemIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestItemQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestItemStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TranIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BalanceQty() As Decimal
            Get
                Return Me.BalanceQtyField
            End Get
            Set
                If (Me.BalanceQtyField.Equals(value) <> true) Then
                    Me.BalanceQtyField = value
                    Me.RaisePropertyChanged("BalanceQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Mode() As String
            Get
                Return Me.ModeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModeField, value) <> true) Then
                    Me.ModeField = value
                    Me.RaisePropertyChanged("Mode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Qty() As Decimal
            Get
                Return Me.QtyField
            End Get
            Set
                If (Me.QtyField.Equals(value) <> true) Then
                    Me.QtyField = value
                    Me.RaisePropertyChanged("Qty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestItemID() As Integer
            Get
                Return Me.RequestItemIDField
            End Get
            Set
                If (Me.RequestItemIDField.Equals(value) <> true) Then
                    Me.RequestItemIDField = value
                    Me.RaisePropertyChanged("RequestItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestItemQty() As Decimal
            Get
                Return Me.RequestItemQtyField
            End Get
            Set
                If (Me.RequestItemQtyField.Equals(value) <> true) Then
                    Me.RequestItemQtyField = value
                    Me.RaisePropertyChanged("RequestItemQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestItemStatus() As String
            Get
                Return Me.RequestItemStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestItemStatusField, value) <> true) Then
                    Me.RequestItemStatusField = value
                    Me.RaisePropertyChanged("RequestItemStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TranID() As Integer
            Get
                Return Me.TranIDField
            End Get
            Set
                If (Me.TranIDField.Equals(value) <> true) Then
                    Me.TranIDField = value
                    Me.RaisePropertyChanged("TranID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="IssueList", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class IssueList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueItemIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestByField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerID() As String
            Get
                Return Me.ConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerIDField, value) <> true) Then
                    Me.ConsumerIDField = value
                    Me.RaisePropertyChanged("ConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocNo() As String
            Get
                Return Me.DocNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocNoField, value) <> true) Then
                    Me.DocNoField = value
                    Me.RaisePropertyChanged("DocNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueDte() As Date
            Get
                Return Me.IssueDteField
            End Get
            Set
                If (Me.IssueDteField.Equals(value) <> true) Then
                    Me.IssueDteField = value
                    Me.RaisePropertyChanged("IssueDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueItemID() As Integer
            Get
                Return Me.IssueItemIDField
            End Get
            Set
                If (Me.IssueItemIDField.Equals(value) <> true) Then
                    Me.IssueItemIDField = value
                    Me.RaisePropertyChanged("IssueItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueQty() As Decimal
            Get
                Return Me.IssueQtyField
            End Get
            Set
                If (Me.IssueQtyField.Equals(value) <> true) Then
                    Me.IssueQtyField = value
                    Me.RaisePropertyChanged("IssueQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemStatus() As String
            Get
                Return Me.ItemStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemStatusField, value) <> true) Then
                    Me.ItemStatusField = value
                    Me.RaisePropertyChanged("ItemStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestBy() As String
            Get
                Return Me.RequestByField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestByField, value) <> true) Then
                    Me.RequestByField = value
                    Me.RaisePropertyChanged("RequestBy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SerialNo() As String
            Get
                Return Me.SerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SerialNoField, value) <> true) Then
                    Me.SerialNoField = value
                    Me.RaisePropertyChanged("SerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AdjustDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AdjustDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApproveDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApproveUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocReturnField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InvolveIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReturnDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReturnUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustID() As String
            Get
                Return Me.AdjustIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustIDField, value) <> true) Then
                    Me.AdjustIDField = value
                    Me.RaisePropertyChanged("AdjustID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApproveDte() As Date
            Get
                Return Me.ApproveDteField
            End Get
            Set
                If (Me.ApproveDteField.Equals(value) <> true) Then
                    Me.ApproveDteField = value
                    Me.RaisePropertyChanged("ApproveDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApproveUserID() As String
            Get
                Return Me.ApproveUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ApproveUserIDField, value) <> true) Then
                    Me.ApproveUserIDField = value
                    Me.RaisePropertyChanged("ApproveUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocReturn() As String
            Get
                Return Me.DocReturnField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocReturnField, value) <> true) Then
                    Me.DocReturnField = value
                    Me.RaisePropertyChanged("DocReturn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Dte() As Date
            Get
                Return Me.DteField
            End Get
            Set
                If (Me.DteField.Equals(value) <> true) Then
                    Me.DteField = value
                    Me.RaisePropertyChanged("Dte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property InvolveID() As String
            Get
                Return Me.InvolveIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.InvolveIDField, value) <> true) Then
                    Me.InvolveIDField = value
                    Me.RaisePropertyChanged("InvolveID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveDte() As Date
            Get
                Return Me.ReceiveDteField
            End Get
            Set
                If (Me.ReceiveDteField.Equals(value) <> true) Then
                    Me.ReceiveDteField = value
                    Me.RaisePropertyChanged("ReceiveDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveUserID() As String
            Get
                Return Me.ReceiveUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReceiveUserIDField, value) <> true) Then
                    Me.ReceiveUserIDField = value
                    Me.RaisePropertyChanged("ReceiveUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReturnDte() As Date
            Get
                Return Me.ReturnDteField
            End Get
            Set
                If (Me.ReturnDteField.Equals(value) <> true) Then
                    Me.ReturnDteField = value
                    Me.RaisePropertyChanged("ReturnDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReturnUserID() As String
            Get
                Return Me.ReturnUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReturnUserIDField, value) <> true) Then
                    Me.ReturnUserIDField = value
                    Me.RaisePropertyChanged("ReturnUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SerialNo() As String
            Get
                Return Me.SerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SerialNoField, value) <> true) Then
                    Me.SerialNoField = value
                    Me.RaisePropertyChanged("SerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Type() As String
            Get
                Return Me.TypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TypeField, value) <> true) Then
                    Me.TypeField = value
                    Me.RaisePropertyChanged("Type")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AdjustItemDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AdjustItemDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustItemIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BalanceQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemReturnField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaxLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TranIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustItemID() As Integer
            Get
                Return Me.AdjustItemIDField
            End Get
            Set
                If (Me.AdjustItemIDField.Equals(value) <> true) Then
                    Me.AdjustItemIDField = value
                    Me.RaisePropertyChanged("AdjustItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BalanceQty() As Decimal
            Get
                Return Me.BalanceQtyField
            End Get
            Set
                If (Me.BalanceQtyField.Equals(value) <> true) Then
                    Me.BalanceQtyField = value
                    Me.RaisePropertyChanged("BalanceQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemReturn() As Integer
            Get
                Return Me.ItemReturnField
            End Get
            Set
                If (Me.ItemReturnField.Equals(value) <> true) Then
                    Me.ItemReturnField = value
                    Me.RaisePropertyChanged("ItemReturn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaxLevel() As Decimal
            Get
                Return Me.MaxLevelField
            End Get
            Set
                If (Me.MaxLevelField.Equals(value) <> true) Then
                    Me.MaxLevelField = value
                    Me.RaisePropertyChanged("MaxLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Mode() As String
            Get
                Return Me.ModeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModeField, value) <> true) Then
                    Me.ModeField = value
                    Me.RaisePropertyChanged("Mode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Qty() As Decimal
            Get
                Return Me.QtyField
            End Get
            Set
                If (Me.QtyField.Equals(value) <> true) Then
                    Me.QtyField = value
                    Me.RaisePropertyChanged("Qty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TranID() As Integer
            Get
                Return Me.TranIDField
            End Get
            Set
                If (Me.TranIDField.Equals(value) <> true) Then
                    Me.TranIDField = value
                    Me.RaisePropertyChanged("TranID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AdjustList", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AdjustList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocReturnField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserNameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustDte() As Date
            Get
                Return Me.AdjustDteField
            End Get
            Set
                If (Me.AdjustDteField.Equals(value) <> true) Then
                    Me.AdjustDteField = value
                    Me.RaisePropertyChanged("AdjustDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocNo() As String
            Get
                Return Me.DocNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocNoField, value) <> true) Then
                    Me.DocNoField = value
                    Me.RaisePropertyChanged("DocNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocReturn() As String
            Get
                Return Me.DocReturnField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocReturnField, value) <> true) Then
                    Me.DocReturnField = value
                    Me.RaisePropertyChanged("DocReturn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Qty() As Decimal
            Get
                Return Me.QtyField
            End Get
            Set
                If (Me.QtyField.Equals(value) <> true) Then
                    Me.QtyField = value
                    Me.RaisePropertyChanged("Qty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Type() As String
            Get
                Return Me.TypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TypeField, value) <> true) Then
                    Me.TypeField = value
                    Me.RaisePropertyChanged("Type")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserName() As String
            Get
                Return Me.UserNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserNameField, value) <> true) Then
                    Me.UserNameField = value
                    Me.RaisePropertyChanged("UserName")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AStockItemDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AStockItemDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemAuditIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemImageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemLocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemMaxLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemMinLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemPartNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemReorderLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemStockTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemUserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemAuditID() As Integer
            Get
                Return Me.AStockItemAuditIDField
            End Get
            Set
                If (Me.AStockItemAuditIDField.Equals(value) <> true) Then
                    Me.AStockItemAuditIDField = value
                    Me.RaisePropertyChanged("AStockItemAuditID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemAuditType() As String
            Get
                Return Me.AStockItemAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemAuditTypeField, value) <> true) Then
                    Me.AStockItemAuditTypeField = value
                    Me.RaisePropertyChanged("AStockItemAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemCreateDte() As Date
            Get
                Return Me.AStockItemCreateDteField
            End Get
            Set
                If (Me.AStockItemCreateDteField.Equals(value) <> true) Then
                    Me.AStockItemCreateDteField = value
                    Me.RaisePropertyChanged("AStockItemCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemDescription() As String
            Get
                Return Me.AStockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemDescriptionField, value) <> true) Then
                    Me.AStockItemDescriptionField = value
                    Me.RaisePropertyChanged("AStockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemID() As String
            Get
                Return Me.AStockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemIDField, value) <> true) Then
                    Me.AStockItemIDField = value
                    Me.RaisePropertyChanged("AStockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemImage() As String
            Get
                Return Me.AStockItemImageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemImageField, value) <> true) Then
                    Me.AStockItemImageField = value
                    Me.RaisePropertyChanged("AStockItemImage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemLocation() As String
            Get
                Return Me.AStockItemLocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemLocationField, value) <> true) Then
                    Me.AStockItemLocationField = value
                    Me.RaisePropertyChanged("AStockItemLocation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemMaxLevel() As Decimal
            Get
                Return Me.AStockItemMaxLevelField
            End Get
            Set
                If (Me.AStockItemMaxLevelField.Equals(value) <> true) Then
                    Me.AStockItemMaxLevelField = value
                    Me.RaisePropertyChanged("AStockItemMaxLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemMinLevel() As Decimal
            Get
                Return Me.AStockItemMinLevelField
            End Get
            Set
                If (Me.AStockItemMinLevelField.Equals(value) <> true) Then
                    Me.AStockItemMinLevelField = value
                    Me.RaisePropertyChanged("AStockItemMinLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemPartNo() As String
            Get
                Return Me.AStockItemPartNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemPartNoField, value) <> true) Then
                    Me.AStockItemPartNoField = value
                    Me.RaisePropertyChanged("AStockItemPartNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemReorderLevel() As Decimal
            Get
                Return Me.AStockItemReorderLevelField
            End Get
            Set
                If (Me.AStockItemReorderLevelField.Equals(value) <> true) Then
                    Me.AStockItemReorderLevelField = value
                    Me.RaisePropertyChanged("AStockItemReorderLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemStatus() As String
            Get
                Return Me.AStockItemStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemStatusField, value) <> true) Then
                    Me.AStockItemStatusField = value
                    Me.RaisePropertyChanged("AStockItemStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemStockType() As String
            Get
                Return Me.AStockItemStockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemStockTypeField, value) <> true) Then
                    Me.AStockItemStockTypeField = value
                    Me.RaisePropertyChanged("AStockItemStockType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemStoreID() As String
            Get
                Return Me.AStockItemStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemStoreIDField, value) <> true) Then
                    Me.AStockItemStoreIDField = value
                    Me.RaisePropertyChanged("AStockItemStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemUOM() As String
            Get
                Return Me.AStockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemUOMField, value) <> true) Then
                    Me.AStockItemUOMField = value
                    Me.RaisePropertyChanged("AStockItemUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemUserID() As String
            Get
                Return Me.AStockItemUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemUserIDField, value) <> true) Then
                    Me.AStockItemUserIDField = value
                    Me.RaisePropertyChanged("AStockItemUserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AOrderDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AOrderDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderImageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderItemQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderItemStockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderItemTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderItemUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderSupplierIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AOrderUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemUOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderAuditType() As String
            Get
                Return Me.AOrderAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AOrderAuditTypeField, value) <> true) Then
                    Me.AOrderAuditTypeField = value
                    Me.RaisePropertyChanged("AOrderAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderCreateDte() As Date
            Get
                Return Me.AOrderCreateDteField
            End Get
            Set
                If (Me.AOrderCreateDteField.Equals(value) <> true) Then
                    Me.AOrderCreateDteField = value
                    Me.RaisePropertyChanged("AOrderCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderDte() As Date
            Get
                Return Me.AOrderDteField
            End Get
            Set
                If (Me.AOrderDteField.Equals(value) <> true) Then
                    Me.AOrderDteField = value
                    Me.RaisePropertyChanged("AOrderDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderID() As String
            Get
                Return Me.AOrderIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AOrderIDField, value) <> true) Then
                    Me.AOrderIDField = value
                    Me.RaisePropertyChanged("AOrderID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderImage() As String
            Get
                Return Me.AOrderImageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AOrderImageField, value) <> true) Then
                    Me.AOrderImageField = value
                    Me.RaisePropertyChanged("AOrderImage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderItemQty() As Decimal
            Get
                Return Me.AOrderItemQtyField
            End Get
            Set
                If (Me.AOrderItemQtyField.Equals(value) <> true) Then
                    Me.AOrderItemQtyField = value
                    Me.RaisePropertyChanged("AOrderItemQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderItemStockItemID() As String
            Get
                Return Me.AOrderItemStockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AOrderItemStockItemIDField, value) <> true) Then
                    Me.AOrderItemStockItemIDField = value
                    Me.RaisePropertyChanged("AOrderItemStockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderItemTotalCost() As Decimal
            Get
                Return Me.AOrderItemTotalCostField
            End Get
            Set
                If (Me.AOrderItemTotalCostField.Equals(value) <> true) Then
                    Me.AOrderItemTotalCostField = value
                    Me.RaisePropertyChanged("AOrderItemTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderItemUnitCost() As Decimal
            Get
                Return Me.AOrderItemUnitCostField
            End Get
            Set
                If (Me.AOrderItemUnitCostField.Equals(value) <> true) Then
                    Me.AOrderItemUnitCostField = value
                    Me.RaisePropertyChanged("AOrderItemUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderStoreID() As String
            Get
                Return Me.AOrderStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AOrderStoreIDField, value) <> true) Then
                    Me.AOrderStoreIDField = value
                    Me.RaisePropertyChanged("AOrderStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderSupplierID() As String
            Get
                Return Me.AOrderSupplierIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AOrderSupplierIDField, value) <> true) Then
                    Me.AOrderSupplierIDField = value
                    Me.RaisePropertyChanged("AOrderSupplierID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AOrderUserID() As String
            Get
                Return Me.AOrderUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AOrderUserIDField, value) <> true) Then
                    Me.AOrderUserIDField = value
                    Me.RaisePropertyChanged("AOrderUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemDescription() As String
            Get
                Return Me.AStockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemDescriptionField, value) <> true) Then
                    Me.AStockItemDescriptionField = value
                    Me.RaisePropertyChanged("AStockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemUOM() As String
            Get
                Return Me.AStockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemUOMField, value) <> true) Then
                    Me.AStockItemUOMField = value
                    Me.RaisePropertyChanged("AStockItemUOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AStockTransactionDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AStockTransactionDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockItemUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionDocNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionInvolveIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionRemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionSerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionStockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStockTransactionUserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemDescription() As String
            Get
                Return Me.AStockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemDescriptionField, value) <> true) Then
                    Me.AStockItemDescriptionField = value
                    Me.RaisePropertyChanged("AStockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockItemUOM() As String
            Get
                Return Me.AStockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockItemUOMField, value) <> true) Then
                    Me.AStockItemUOMField = value
                    Me.RaisePropertyChanged("AStockItemUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionAuditType() As String
            Get
                Return Me.AStockTransactionAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionAuditTypeField, value) <> true) Then
                    Me.AStockTransactionAuditTypeField = value
                    Me.RaisePropertyChanged("AStockTransactionAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionCreateDte() As Date
            Get
                Return Me.AStockTransactionCreateDteField
            End Get
            Set
                If (Me.AStockTransactionCreateDteField.Equals(value) <> true) Then
                    Me.AStockTransactionCreateDteField = value
                    Me.RaisePropertyChanged("AStockTransactionCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionDocNo() As String
            Get
                Return Me.AStockTransactionDocNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionDocNoField, value) <> true) Then
                    Me.AStockTransactionDocNoField = value
                    Me.RaisePropertyChanged("AStockTransactionDocNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionDte() As Date
            Get
                Return Me.AStockTransactionDteField
            End Get
            Set
                If (Me.AStockTransactionDteField.Equals(value) <> true) Then
                    Me.AStockTransactionDteField = value
                    Me.RaisePropertyChanged("AStockTransactionDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionInvolveID() As String
            Get
                Return Me.AStockTransactionInvolveIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionInvolveIDField, value) <> true) Then
                    Me.AStockTransactionInvolveIDField = value
                    Me.RaisePropertyChanged("AStockTransactionInvolveID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionQty() As Decimal
            Get
                Return Me.AStockTransactionQtyField
            End Get
            Set
                If (Me.AStockTransactionQtyField.Equals(value) <> true) Then
                    Me.AStockTransactionQtyField = value
                    Me.RaisePropertyChanged("AStockTransactionQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionRemarks() As String
            Get
                Return Me.AStockTransactionRemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionRemarksField, value) <> true) Then
                    Me.AStockTransactionRemarksField = value
                    Me.RaisePropertyChanged("AStockTransactionRemarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionSerialNo() As String
            Get
                Return Me.AStockTransactionSerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionSerialNoField, value) <> true) Then
                    Me.AStockTransactionSerialNoField = value
                    Me.RaisePropertyChanged("AStockTransactionSerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionStockItemID() As String
            Get
                Return Me.AStockTransactionStockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionStockItemIDField, value) <> true) Then
                    Me.AStockTransactionStockItemIDField = value
                    Me.RaisePropertyChanged("AStockTransactionStockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionStoreID() As String
            Get
                Return Me.AStockTransactionStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionStoreIDField, value) <> true) Then
                    Me.AStockTransactionStoreIDField = value
                    Me.RaisePropertyChanged("AStockTransactionStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionTotalCost() As Decimal
            Get
                Return Me.AStockTransactionTotalCostField
            End Get
            Set
                If (Me.AStockTransactionTotalCostField.Equals(value) <> true) Then
                    Me.AStockTransactionTotalCostField = value
                    Me.RaisePropertyChanged("AStockTransactionTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionType() As String
            Get
                Return Me.AStockTransactionTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionTypeField, value) <> true) Then
                    Me.AStockTransactionTypeField = value
                    Me.RaisePropertyChanged("AStockTransactionType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionUnitCost() As Decimal
            Get
                Return Me.AStockTransactionUnitCostField
            End Get
            Set
                If (Me.AStockTransactionUnitCostField.Equals(value) <> true) Then
                    Me.AStockTransactionUnitCostField = value
                    Me.RaisePropertyChanged("AStockTransactionUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStockTransactionUserID() As String
            Get
                Return Me.AStockTransactionUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStockTransactionUserIDField, value) <> true) Then
                    Me.AStockTransactionUserIDField = value
                    Me.RaisePropertyChanged("AStockTransactionUserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AResidueDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AResidueDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemImageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemRemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemTotalValueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTransactionDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTransactionTypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemImage() As String
            Get
                Return Me.StockItemImageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemImageField, value) <> true) Then
                    Me.StockItemImageField = value
                    Me.RaisePropertyChanged("StockItemImage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemQty() As Decimal
            Get
                Return Me.StockItemQtyField
            End Get
            Set
                If (Me.StockItemQtyField.Equals(value) <> true) Then
                    Me.StockItemQtyField = value
                    Me.RaisePropertyChanged("StockItemQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemRemarks() As String
            Get
                Return Me.StockItemRemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemRemarksField, value) <> true) Then
                    Me.StockItemRemarksField = value
                    Me.RaisePropertyChanged("StockItemRemarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemTotalValue() As Decimal
            Get
                Return Me.StockItemTotalValueField
            End Get
            Set
                If (Me.StockItemTotalValueField.Equals(value) <> true) Then
                    Me.StockItemTotalValueField = value
                    Me.RaisePropertyChanged("StockItemTotalValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUOM() As String
            Get
                Return Me.StockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemUOMField, value) <> true) Then
                    Me.StockItemUOMField = value
                    Me.RaisePropertyChanged("StockItemUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTransactionDte() As Date
            Get
                Return Me.StockTransactionDteField
            End Get
            Set
                If (Me.StockTransactionDteField.Equals(value) <> true) Then
                    Me.StockTransactionDteField = value
                    Me.RaisePropertyChanged("StockTransactionDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTransactionType() As String
            Get
                Return Me.StockTransactionTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTransactionTypeField, value) <> true) Then
                    Me.StockTransactionTypeField = value
                    Me.RaisePropertyChanged("StockTransactionType")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ACommon", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ACommon
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonCodeDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonCodeGroupField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonCodeIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonCreateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonUpdateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACommonUpdateUserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonAuditType() As String
            Get
                Return Me.ACommonAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonAuditTypeField, value) <> true) Then
                    Me.ACommonAuditTypeField = value
                    Me.RaisePropertyChanged("ACommonAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonCodeDescription() As String
            Get
                Return Me.ACommonCodeDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonCodeDescriptionField, value) <> true) Then
                    Me.ACommonCodeDescriptionField = value
                    Me.RaisePropertyChanged("ACommonCodeDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonCodeGroup() As String
            Get
                Return Me.ACommonCodeGroupField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonCodeGroupField, value) <> true) Then
                    Me.ACommonCodeGroupField = value
                    Me.RaisePropertyChanged("ACommonCodeGroup")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonCodeID() As String
            Get
                Return Me.ACommonCodeIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonCodeIDField, value) <> true) Then
                    Me.ACommonCodeIDField = value
                    Me.RaisePropertyChanged("ACommonCodeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonCreateDte() As Date
            Get
                Return Me.ACommonCreateDteField
            End Get
            Set
                If (Me.ACommonCreateDteField.Equals(value) <> true) Then
                    Me.ACommonCreateDteField = value
                    Me.RaisePropertyChanged("ACommonCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonCreateUserID() As String
            Get
                Return Me.ACommonCreateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonCreateUserIDField, value) <> true) Then
                    Me.ACommonCreateUserIDField = value
                    Me.RaisePropertyChanged("ACommonCreateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonID() As String
            Get
                Return Me.ACommonIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonIDField, value) <> true) Then
                    Me.ACommonIDField = value
                    Me.RaisePropertyChanged("ACommonID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonStatus() As String
            Get
                Return Me.ACommonStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonStatusField, value) <> true) Then
                    Me.ACommonStatusField = value
                    Me.RaisePropertyChanged("ACommonStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonStoreID() As String
            Get
                Return Me.ACommonStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonStoreIDField, value) <> true) Then
                    Me.ACommonStoreIDField = value
                    Me.RaisePropertyChanged("ACommonStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonUpdateDte() As Date
            Get
                Return Me.ACommonUpdateDteField
            End Get
            Set
                If (Me.ACommonUpdateDteField.Equals(value) <> true) Then
                    Me.ACommonUpdateDteField = value
                    Me.RaisePropertyChanged("ACommonUpdateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACommonUpdateUserID() As String
            Get
                Return Me.ACommonUpdateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACommonUpdateUserIDField, value) <> true) Then
                    Me.ACommonUpdateUserIDField = value
                    Me.RaisePropertyChanged("ACommonUpdateUserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AConsumer", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AConsumer
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerCreateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerUpdateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AConsumerUpdateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerStoreRefUserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerAuditType() As String
            Get
                Return Me.AConsumerAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AConsumerAuditTypeField, value) <> true) Then
                    Me.AConsumerAuditTypeField = value
                    Me.RaisePropertyChanged("AConsumerAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerCreateDte() As Date
            Get
                Return Me.AConsumerCreateDteField
            End Get
            Set
                If (Me.AConsumerCreateDteField.Equals(value) <> true) Then
                    Me.AConsumerCreateDteField = value
                    Me.RaisePropertyChanged("AConsumerCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerCreateUserID() As String
            Get
                Return Me.AConsumerCreateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AConsumerCreateUserIDField, value) <> true) Then
                    Me.AConsumerCreateUserIDField = value
                    Me.RaisePropertyChanged("AConsumerCreateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerDescription() As String
            Get
                Return Me.AConsumerDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AConsumerDescriptionField, value) <> true) Then
                    Me.AConsumerDescriptionField = value
                    Me.RaisePropertyChanged("AConsumerDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerID() As String
            Get
                Return Me.AConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AConsumerIDField, value) <> true) Then
                    Me.AConsumerIDField = value
                    Me.RaisePropertyChanged("AConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerStatus() As String
            Get
                Return Me.AConsumerStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AConsumerStatusField, value) <> true) Then
                    Me.AConsumerStatusField = value
                    Me.RaisePropertyChanged("AConsumerStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerStoreID() As String
            Get
                Return Me.AConsumerStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AConsumerStoreIDField, value) <> true) Then
                    Me.AConsumerStoreIDField = value
                    Me.RaisePropertyChanged("AConsumerStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerUpdateDte() As Date
            Get
                Return Me.AConsumerUpdateDteField
            End Get
            Set
                If (Me.AConsumerUpdateDteField.Equals(value) <> true) Then
                    Me.AConsumerUpdateDteField = value
                    Me.RaisePropertyChanged("AConsumerUpdateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AConsumerUpdateUserID() As String
            Get
                Return Me.AConsumerUpdateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AConsumerUpdateUserIDField, value) <> true) Then
                    Me.AConsumerUpdateUserIDField = value
                    Me.RaisePropertyChanged("AConsumerUpdateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerStoreRefUserID() As String
            Get
                Return Me.ConsumerStoreRefUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerStoreRefUserIDField, value) <> true) Then
                    Me.ConsumerStoreRefUserIDField = value
                    Me.RaisePropertyChanged("ConsumerStoreRefUserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AEquipment", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AEquipment
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentCreateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentUpdateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AEquipmentUpdateUserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentAuditType() As String
            Get
                Return Me.AEquipmentAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentAuditTypeField, value) <> true) Then
                    Me.AEquipmentAuditTypeField = value
                    Me.RaisePropertyChanged("AEquipmentAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentCreateDte() As Date
            Get
                Return Me.AEquipmentCreateDteField
            End Get
            Set
                If (Me.AEquipmentCreateDteField.Equals(value) <> true) Then
                    Me.AEquipmentCreateDteField = value
                    Me.RaisePropertyChanged("AEquipmentCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentCreateUserID() As String
            Get
                Return Me.AEquipmentCreateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentCreateUserIDField, value) <> true) Then
                    Me.AEquipmentCreateUserIDField = value
                    Me.RaisePropertyChanged("AEquipmentCreateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentDescription() As String
            Get
                Return Me.AEquipmentDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentDescriptionField, value) <> true) Then
                    Me.AEquipmentDescriptionField = value
                    Me.RaisePropertyChanged("AEquipmentDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentID() As String
            Get
                Return Me.AEquipmentIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentIDField, value) <> true) Then
                    Me.AEquipmentIDField = value
                    Me.RaisePropertyChanged("AEquipmentID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentStatus() As String
            Get
                Return Me.AEquipmentStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentStatusField, value) <> true) Then
                    Me.AEquipmentStatusField = value
                    Me.RaisePropertyChanged("AEquipmentStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentStoreID() As String
            Get
                Return Me.AEquipmentStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentStoreIDField, value) <> true) Then
                    Me.AEquipmentStoreIDField = value
                    Me.RaisePropertyChanged("AEquipmentStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentType() As String
            Get
                Return Me.AEquipmentTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentTypeField, value) <> true) Then
                    Me.AEquipmentTypeField = value
                    Me.RaisePropertyChanged("AEquipmentType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentUpdateDte() As Date
            Get
                Return Me.AEquipmentUpdateDteField
            End Get
            Set
                If (Me.AEquipmentUpdateDteField.Equals(value) <> true) Then
                    Me.AEquipmentUpdateDteField = value
                    Me.RaisePropertyChanged("AEquipmentUpdateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AEquipmentUpdateUserID() As String
            Get
                Return Me.AEquipmentUpdateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AEquipmentUpdateUserIDField, value) <> true) Then
                    Me.AEquipmentUpdateUserIDField = value
                    Me.RaisePropertyChanged("AEquipmentUpdateUserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AStore", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AStore
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreAddressTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreBlockHouseNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreBuildingNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreContactPersonNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreCreateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreFaxNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreFloorNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreOtherInfoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStorePostalCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreStreetNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreTelephoneNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreUnitNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreUpdateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AStoreUpdateUserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreAddressType() As String
            Get
                Return Me.AStoreAddressTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreAddressTypeField, value) <> true) Then
                    Me.AStoreAddressTypeField = value
                    Me.RaisePropertyChanged("AStoreAddressType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreAuditType() As String
            Get
                Return Me.AStoreAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreAuditTypeField, value) <> true) Then
                    Me.AStoreAuditTypeField = value
                    Me.RaisePropertyChanged("AStoreAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreBlockHouseNo() As String
            Get
                Return Me.AStoreBlockHouseNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreBlockHouseNoField, value) <> true) Then
                    Me.AStoreBlockHouseNoField = value
                    Me.RaisePropertyChanged("AStoreBlockHouseNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreBuildingName() As String
            Get
                Return Me.AStoreBuildingNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreBuildingNameField, value) <> true) Then
                    Me.AStoreBuildingNameField = value
                    Me.RaisePropertyChanged("AStoreBuildingName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreContactPersonName() As String
            Get
                Return Me.AStoreContactPersonNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreContactPersonNameField, value) <> true) Then
                    Me.AStoreContactPersonNameField = value
                    Me.RaisePropertyChanged("AStoreContactPersonName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreCreateDte() As Date
            Get
                Return Me.AStoreCreateDteField
            End Get
            Set
                If (Me.AStoreCreateDteField.Equals(value) <> true) Then
                    Me.AStoreCreateDteField = value
                    Me.RaisePropertyChanged("AStoreCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreCreateUserID() As String
            Get
                Return Me.AStoreCreateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreCreateUserIDField, value) <> true) Then
                    Me.AStoreCreateUserIDField = value
                    Me.RaisePropertyChanged("AStoreCreateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreFaxNo() As String
            Get
                Return Me.AStoreFaxNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreFaxNoField, value) <> true) Then
                    Me.AStoreFaxNoField = value
                    Me.RaisePropertyChanged("AStoreFaxNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreFloorNo() As String
            Get
                Return Me.AStoreFloorNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreFloorNoField, value) <> true) Then
                    Me.AStoreFloorNoField = value
                    Me.RaisePropertyChanged("AStoreFloorNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreID() As String
            Get
                Return Me.AStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreIDField, value) <> true) Then
                    Me.AStoreIDField = value
                    Me.RaisePropertyChanged("AStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreName() As String
            Get
                Return Me.AStoreNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreNameField, value) <> true) Then
                    Me.AStoreNameField = value
                    Me.RaisePropertyChanged("AStoreName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreOtherInfo() As String
            Get
                Return Me.AStoreOtherInfoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreOtherInfoField, value) <> true) Then
                    Me.AStoreOtherInfoField = value
                    Me.RaisePropertyChanged("AStoreOtherInfo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStorePostalCode() As String
            Get
                Return Me.AStorePostalCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStorePostalCodeField, value) <> true) Then
                    Me.AStorePostalCodeField = value
                    Me.RaisePropertyChanged("AStorePostalCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreStatus() As String
            Get
                Return Me.AStoreStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreStatusField, value) <> true) Then
                    Me.AStoreStatusField = value
                    Me.RaisePropertyChanged("AStoreStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreStreetName() As String
            Get
                Return Me.AStoreStreetNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreStreetNameField, value) <> true) Then
                    Me.AStoreStreetNameField = value
                    Me.RaisePropertyChanged("AStoreStreetName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreTelephoneNo() As String
            Get
                Return Me.AStoreTelephoneNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreTelephoneNoField, value) <> true) Then
                    Me.AStoreTelephoneNoField = value
                    Me.RaisePropertyChanged("AStoreTelephoneNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreUnitNo() As String
            Get
                Return Me.AStoreUnitNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreUnitNoField, value) <> true) Then
                    Me.AStoreUnitNoField = value
                    Me.RaisePropertyChanged("AStoreUnitNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreUpdateDte() As Date
            Get
                Return Me.AStoreUpdateDteField
            End Get
            Set
                If (Me.AStoreUpdateDteField.Equals(value) <> true) Then
                    Me.AStoreUpdateDteField = value
                    Me.RaisePropertyChanged("AStoreUpdateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AStoreUpdateUserID() As String
            Get
                Return Me.AStoreUpdateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AStoreUpdateUserIDField, value) <> true) Then
                    Me.AStoreUpdateUserIDField = value
                    Me.RaisePropertyChanged("AStoreUpdateUserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ASupplier", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ASupplier
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierAddressTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierBlockHouseNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierBuildingNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierCompanyNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierContactPersonNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierCreateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierFaxNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierFloorNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierOtherInfoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierPostalCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierStreetNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierTelephonenoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierUENField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierUnitNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierUpdateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASupplierUpdateUserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierAddressType() As String
            Get
                Return Me.ASupplierAddressTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierAddressTypeField, value) <> true) Then
                    Me.ASupplierAddressTypeField = value
                    Me.RaisePropertyChanged("ASupplierAddressType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierAuditType() As String
            Get
                Return Me.ASupplierAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierAuditTypeField, value) <> true) Then
                    Me.ASupplierAuditTypeField = value
                    Me.RaisePropertyChanged("ASupplierAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierBlockHouseNo() As String
            Get
                Return Me.ASupplierBlockHouseNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierBlockHouseNoField, value) <> true) Then
                    Me.ASupplierBlockHouseNoField = value
                    Me.RaisePropertyChanged("ASupplierBlockHouseNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierBuildingName() As String
            Get
                Return Me.ASupplierBuildingNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierBuildingNameField, value) <> true) Then
                    Me.ASupplierBuildingNameField = value
                    Me.RaisePropertyChanged("ASupplierBuildingName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierCompanyName() As String
            Get
                Return Me.ASupplierCompanyNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierCompanyNameField, value) <> true) Then
                    Me.ASupplierCompanyNameField = value
                    Me.RaisePropertyChanged("ASupplierCompanyName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierContactPersonName() As String
            Get
                Return Me.ASupplierContactPersonNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierContactPersonNameField, value) <> true) Then
                    Me.ASupplierContactPersonNameField = value
                    Me.RaisePropertyChanged("ASupplierContactPersonName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierCreateDte() As Date
            Get
                Return Me.ASupplierCreateDteField
            End Get
            Set
                If (Me.ASupplierCreateDteField.Equals(value) <> true) Then
                    Me.ASupplierCreateDteField = value
                    Me.RaisePropertyChanged("ASupplierCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierCreateUserID() As String
            Get
                Return Me.ASupplierCreateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierCreateUserIDField, value) <> true) Then
                    Me.ASupplierCreateUserIDField = value
                    Me.RaisePropertyChanged("ASupplierCreateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierFaxNo() As String
            Get
                Return Me.ASupplierFaxNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierFaxNoField, value) <> true) Then
                    Me.ASupplierFaxNoField = value
                    Me.RaisePropertyChanged("ASupplierFaxNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierFloorNo() As String
            Get
                Return Me.ASupplierFloorNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierFloorNoField, value) <> true) Then
                    Me.ASupplierFloorNoField = value
                    Me.RaisePropertyChanged("ASupplierFloorNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierID() As String
            Get
                Return Me.ASupplierIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierIDField, value) <> true) Then
                    Me.ASupplierIDField = value
                    Me.RaisePropertyChanged("ASupplierID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierOtherInfo() As String
            Get
                Return Me.ASupplierOtherInfoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierOtherInfoField, value) <> true) Then
                    Me.ASupplierOtherInfoField = value
                    Me.RaisePropertyChanged("ASupplierOtherInfo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierPostalCode() As String
            Get
                Return Me.ASupplierPostalCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierPostalCodeField, value) <> true) Then
                    Me.ASupplierPostalCodeField = value
                    Me.RaisePropertyChanged("ASupplierPostalCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierStatus() As String
            Get
                Return Me.ASupplierStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierStatusField, value) <> true) Then
                    Me.ASupplierStatusField = value
                    Me.RaisePropertyChanged("ASupplierStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierStoreID() As String
            Get
                Return Me.ASupplierStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierStoreIDField, value) <> true) Then
                    Me.ASupplierStoreIDField = value
                    Me.RaisePropertyChanged("ASupplierStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierStreetName() As String
            Get
                Return Me.ASupplierStreetNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierStreetNameField, value) <> true) Then
                    Me.ASupplierStreetNameField = value
                    Me.RaisePropertyChanged("ASupplierStreetName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierTelephoneno() As String
            Get
                Return Me.ASupplierTelephonenoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierTelephonenoField, value) <> true) Then
                    Me.ASupplierTelephonenoField = value
                    Me.RaisePropertyChanged("ASupplierTelephoneno")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierUEN() As String
            Get
                Return Me.ASupplierUENField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierUENField, value) <> true) Then
                    Me.ASupplierUENField = value
                    Me.RaisePropertyChanged("ASupplierUEN")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierUnitNo() As String
            Get
                Return Me.ASupplierUnitNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierUnitNoField, value) <> true) Then
                    Me.ASupplierUnitNoField = value
                    Me.RaisePropertyChanged("ASupplierUnitNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierUpdateDte() As Date
            Get
                Return Me.ASupplierUpdateDteField
            End Get
            Set
                If (Me.ASupplierUpdateDteField.Equals(value) <> true) Then
                    Me.ASupplierUpdateDteField = value
                    Me.RaisePropertyChanged("ASupplierUpdateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASupplierUpdateUserID() As String
            Get
                Return Me.ASupplierUpdateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASupplierUpdateUserIDField, value) <> true) Then
                    Me.ASupplierUpdateUserIDField = value
                    Me.RaisePropertyChanged("ASupplierUpdateUserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AUserRole", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AUserRole
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AChangeStatusReasonField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AIsUserDeletedField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleAuditTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleCreateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleCreateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleDepartCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleDesignationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleDivisionCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleInstallCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleSectionCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleUpdateDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleUpdateUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUserRoleUserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerDescriptionField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AChangeStatusReason() As String
            Get
                Return Me.AChangeStatusReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AChangeStatusReasonField, value) <> true) Then
                    Me.AChangeStatusReasonField = value
                    Me.RaisePropertyChanged("AChangeStatusReason")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AIsUserDeleted() As String
            Get
                Return Me.AIsUserDeletedField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AIsUserDeletedField, value) <> true) Then
                    Me.AIsUserDeletedField = value
                    Me.RaisePropertyChanged("AIsUserDeleted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleAuditType() As String
            Get
                Return Me.AUserRoleAuditTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleAuditTypeField, value) <> true) Then
                    Me.AUserRoleAuditTypeField = value
                    Me.RaisePropertyChanged("AUserRoleAuditType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleCode() As String
            Get
                Return Me.AUserRoleCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleCodeField, value) <> true) Then
                    Me.AUserRoleCodeField = value
                    Me.RaisePropertyChanged("AUserRoleCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleCreateDte() As Date
            Get
                Return Me.AUserRoleCreateDteField
            End Get
            Set
                If (Me.AUserRoleCreateDteField.Equals(value) <> true) Then
                    Me.AUserRoleCreateDteField = value
                    Me.RaisePropertyChanged("AUserRoleCreateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleCreateUserID() As String
            Get
                Return Me.AUserRoleCreateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleCreateUserIDField, value) <> true) Then
                    Me.AUserRoleCreateUserIDField = value
                    Me.RaisePropertyChanged("AUserRoleCreateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleDepartCode() As String
            Get
                Return Me.AUserRoleDepartCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleDepartCodeField, value) <> true) Then
                    Me.AUserRoleDepartCodeField = value
                    Me.RaisePropertyChanged("AUserRoleDepartCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleDescription() As String
            Get
                Return Me.AUserRoleDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleDescriptionField, value) <> true) Then
                    Me.AUserRoleDescriptionField = value
                    Me.RaisePropertyChanged("AUserRoleDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleDesignation() As String
            Get
                Return Me.AUserRoleDesignationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleDesignationField, value) <> true) Then
                    Me.AUserRoleDesignationField = value
                    Me.RaisePropertyChanged("AUserRoleDesignation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleDivisionCode() As String
            Get
                Return Me.AUserRoleDivisionCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleDivisionCodeField, value) <> true) Then
                    Me.AUserRoleDivisionCodeField = value
                    Me.RaisePropertyChanged("AUserRoleDivisionCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleInstallCode() As String
            Get
                Return Me.AUserRoleInstallCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleInstallCodeField, value) <> true) Then
                    Me.AUserRoleInstallCodeField = value
                    Me.RaisePropertyChanged("AUserRoleInstallCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleSectionCode() As String
            Get
                Return Me.AUserRoleSectionCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleSectionCodeField, value) <> true) Then
                    Me.AUserRoleSectionCodeField = value
                    Me.RaisePropertyChanged("AUserRoleSectionCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleStatus() As String
            Get
                Return Me.AUserRoleStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleStatusField, value) <> true) Then
                    Me.AUserRoleStatusField = value
                    Me.RaisePropertyChanged("AUserRoleStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleStoreID() As String
            Get
                Return Me.AUserRoleStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleStoreIDField, value) <> true) Then
                    Me.AUserRoleStoreIDField = value
                    Me.RaisePropertyChanged("AUserRoleStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleUpdateDte() As Date
            Get
                Return Me.AUserRoleUpdateDteField
            End Get
            Set
                If (Me.AUserRoleUpdateDteField.Equals(value) <> true) Then
                    Me.AUserRoleUpdateDteField = value
                    Me.RaisePropertyChanged("AUserRoleUpdateDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleUpdateUserID() As String
            Get
                Return Me.AUserRoleUpdateUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleUpdateUserIDField, value) <> true) Then
                    Me.AUserRoleUpdateUserIDField = value
                    Me.RaisePropertyChanged("AUserRoleUpdateUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUserRoleUserID() As String
            Get
                Return Me.AUserRoleUserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUserRoleUserIDField, value) <> true) Then
                    Me.AUserRoleUserIDField = value
                    Me.RaisePropertyChanged("AUserRoleUserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerDescription() As String
            Get
                Return Me.ConsumerDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerDescriptionField, value) <> true) Then
                    Me.ConsumerDescriptionField = value
                    Me.RaisePropertyChanged("ConsumerDescription")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="RackItemBalanceDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class RackItemBalanceDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Location2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockBalanceField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location() As String
            Get
                Return Me.LocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocationField, value) <> true) Then
                    Me.LocationField = value
                    Me.RaisePropertyChanged("Location")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location2() As String
            Get
                Return Me.Location2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Location2Field, value) <> true) Then
                    Me.Location2Field = value
                    Me.RaisePropertyChanged("Location2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockBalance() As Decimal
            Get
                Return Me.StockBalanceField
            End Get
            Set
                If (Me.StockBalanceField.Equals(value) <> true) Then
                    Me.StockBalanceField = value
                    Me.RaisePropertyChanged("StockBalance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockID() As String
            Get
                Return Me.StockIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockIDField, value) <> true) Then
                    Me.StockIDField = value
                    Me.RaisePropertyChanged("StockID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="TransactionListDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class TransactionListDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BalanceQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocReturnField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssuesQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemRefField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiptsQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ToOrFromField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalValueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UnitCostField As Decimal
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUCost() As Decimal
            Get
                Return Me.AUCostField
            End Get
            Set
                If (Me.AUCostField.Equals(value) <> true) Then
                    Me.AUCostField = value
                    Me.RaisePropertyChanged("AUCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BalanceQty() As Decimal
            Get
                Return Me.BalanceQtyField
            End Get
            Set
                If (Me.BalanceQtyField.Equals(value) <> true) Then
                    Me.BalanceQtyField = value
                    Me.RaisePropertyChanged("BalanceQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocNo() As String
            Get
                Return Me.DocNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocNoField, value) <> true) Then
                    Me.DocNoField = value
                    Me.RaisePropertyChanged("DocNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocReturn() As String
            Get
                Return Me.DocReturnField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocReturnField, value) <> true) Then
                    Me.DocReturnField = value
                    Me.RaisePropertyChanged("DocReturn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssuesQty() As Decimal
            Get
                Return Me.IssuesQtyField
            End Get
            Set
                If (Me.IssuesQtyField.Equals(value) <> true) Then
                    Me.IssuesQtyField = value
                    Me.RaisePropertyChanged("IssuesQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemRef() As Integer
            Get
                Return Me.ItemRefField
            End Get
            Set
                If (Me.ItemRefField.Equals(value) <> true) Then
                    Me.ItemRefField = value
                    Me.RaisePropertyChanged("ItemRef")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiptsQty() As Decimal
            Get
                Return Me.ReceiptsQtyField
            End Get
            Set
                If (Me.ReceiptsQtyField.Equals(value) <> true) Then
                    Me.ReceiptsQtyField = value
                    Me.RaisePropertyChanged("ReceiptsQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SerialNo() As String
            Get
                Return Me.SerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SerialNoField, value) <> true) Then
                    Me.SerialNoField = value
                    Me.RaisePropertyChanged("SerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockID() As String
            Get
                Return Me.StockIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockIDField, value) <> true) Then
                    Me.StockIDField = value
                    Me.RaisePropertyChanged("StockID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ToOrFrom() As String
            Get
                Return Me.ToOrFromField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ToOrFromField, value) <> true) Then
                    Me.ToOrFromField = value
                    Me.RaisePropertyChanged("ToOrFrom")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Decimal
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalQty() As Decimal
            Get
                Return Me.TotalQtyField
            End Get
            Set
                If (Me.TotalQtyField.Equals(value) <> true) Then
                    Me.TotalQtyField = value
                    Me.RaisePropertyChanged("TotalQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalValue() As Decimal
            Get
                Return Me.TotalValueField
            End Get
            Set
                If (Me.TotalValueField.Equals(value) <> true) Then
                    Me.TotalValueField = value
                    Me.RaisePropertyChanged("TotalValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransDate() As Date
            Get
                Return Me.TransDateField
            End Get
            Set
                If (Me.TransDateField.Equals(value) <> true) Then
                    Me.TransDateField = value
                    Me.RaisePropertyChanged("TransDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransID() As String
            Get
                Return Me.TransIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TransIDField, value) <> true) Then
                    Me.TransIDField = value
                    Me.RaisePropertyChanged("TransID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransType() As String
            Get
                Return Me.TransTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TransTypeField, value) <> true) Then
                    Me.TransTypeField = value
                    Me.RaisePropertyChanged("TransType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UnitCost() As Decimal
            Get
                Return Me.UnitCostField
            End Get
            Set
                If (Me.UnitCostField.Equals(value) <> true) Then
                    Me.UnitCostField = value
                    Me.RaisePropertyChanged("UnitCost")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR001GetRackItemBalanceDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR001GetRackItemBalanceDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockBalanceField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemLocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemLocation2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockBalance() As Decimal
            Get
                Return Me.StockBalanceField
            End Get
            Set
                If (Me.StockBalanceField.Equals(value) <> true) Then
                    Me.StockBalanceField = value
                    Me.RaisePropertyChanged("StockBalance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemLocation() As String
            Get
                Return Me.StockItemLocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemLocationField, value) <> true) Then
                    Me.StockItemLocationField = value
                    Me.RaisePropertyChanged("StockItemLocation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemLocation2() As String
            Get
                Return Me.StockItemLocation2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemLocation2Field, value) <> true) Then
                    Me.StockItemLocation2Field = value
                    Me.RaisePropertyChanged("StockItemLocation2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemStoreID() As String
            Get
                Return Me.StockItemStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemStoreIDField, value) <> true) Then
                    Me.StockItemStoreIDField = value
                    Me.RaisePropertyChanged("StockItemStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUOM() As String
            Get
                Return Me.StockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemUOMField, value) <> true) Then
                    Me.StockItemUOMField = value
                    Me.RaisePropertyChanged("StockItemUOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR002GetTransactionListDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR002GetTransactionListDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BalanceQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocReturnField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssuesQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiptsQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemStoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTransactionDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTransactionIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTransactionItemRefField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTransactionTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ToOrFromField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalValueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UnitCostField As Decimal
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUCost() As Decimal
            Get
                Return Me.AUCostField
            End Get
            Set
                If (Me.AUCostField.Equals(value) <> true) Then
                    Me.AUCostField = value
                    Me.RaisePropertyChanged("AUCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BalanceQty() As Decimal
            Get
                Return Me.BalanceQtyField
            End Get
            Set
                If (Me.BalanceQtyField.Equals(value) <> true) Then
                    Me.BalanceQtyField = value
                    Me.RaisePropertyChanged("BalanceQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocNo() As String
            Get
                Return Me.DocNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocNoField, value) <> true) Then
                    Me.DocNoField = value
                    Me.RaisePropertyChanged("DocNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocReturn() As String
            Get
                Return Me.DocReturnField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocReturnField, value) <> true) Then
                    Me.DocReturnField = value
                    Me.RaisePropertyChanged("DocReturn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssuesQty() As Decimal
            Get
                Return Me.IssuesQtyField
            End Get
            Set
                If (Me.IssuesQtyField.Equals(value) <> true) Then
                    Me.IssuesQtyField = value
                    Me.RaisePropertyChanged("IssuesQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiptsQty() As Decimal
            Get
                Return Me.ReceiptsQtyField
            End Get
            Set
                If (Me.ReceiptsQtyField.Equals(value) <> true) Then
                    Me.ReceiptsQtyField = value
                    Me.RaisePropertyChanged("ReceiptsQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SerialNo() As String
            Get
                Return Me.SerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SerialNoField, value) <> true) Then
                    Me.SerialNoField = value
                    Me.RaisePropertyChanged("SerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemStoreID() As String
            Get
                Return Me.StockItemStoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemStoreIDField, value) <> true) Then
                    Me.StockItemStoreIDField = value
                    Me.RaisePropertyChanged("StockItemStoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUOM() As String
            Get
                Return Me.StockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemUOMField, value) <> true) Then
                    Me.StockItemUOMField = value
                    Me.RaisePropertyChanged("StockItemUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTransactionDte() As Date
            Get
                Return Me.StockTransactionDteField
            End Get
            Set
                If (Me.StockTransactionDteField.Equals(value) <> true) Then
                    Me.StockTransactionDteField = value
                    Me.RaisePropertyChanged("StockTransactionDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTransactionID() As Integer
            Get
                Return Me.StockTransactionIDField
            End Get
            Set
                If (Me.StockTransactionIDField.Equals(value) <> true) Then
                    Me.StockTransactionIDField = value
                    Me.RaisePropertyChanged("StockTransactionID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTransactionItemRef() As Integer
            Get
                Return Me.StockTransactionItemRefField
            End Get
            Set
                If (Me.StockTransactionItemRefField.Equals(value) <> true) Then
                    Me.StockTransactionItemRefField = value
                    Me.RaisePropertyChanged("StockTransactionItemRef")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTransactionType() As String
            Get
                Return Me.StockTransactionTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTransactionTypeField, value) <> true) Then
                    Me.StockTransactionTypeField = value
                    Me.RaisePropertyChanged("StockTransactionType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ToOrFrom() As String
            Get
                Return Me.ToOrFromField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ToOrFromField, value) <> true) Then
                    Me.ToOrFromField = value
                    Me.RaisePropertyChanged("ToOrFrom")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Decimal
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalQty() As Decimal
            Get
                Return Me.TotalQtyField
            End Get
            Set
                If (Me.TotalQtyField.Equals(value) <> true) Then
                    Me.TotalQtyField = value
                    Me.RaisePropertyChanged("TotalQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalValue() As Decimal
            Get
                Return Me.TotalValueField
            End Get
            Set
                If (Me.TotalValueField.Equals(value) <> true) Then
                    Me.TotalValueField = value
                    Me.RaisePropertyChanged("TotalValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UnitCost() As Decimal
            Get
                Return Me.UnitCostField
            End Get
            Set
                If (Me.UnitCostField.Equals(value) <> true) Then
                    Me.UnitCostField = value
                    Me.RaisePropertyChanged("UnitCost")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR003IssueDocumentDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR003IssueDocumentDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueSerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueStockItemDescField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueStockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueUnitCostField As Decimal
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueConsumerID() As String
            Get
                Return Me.IssueConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueConsumerIDField, value) <> true) Then
                    Me.IssueConsumerIDField = value
                    Me.RaisePropertyChanged("IssueConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueDte() As Date
            Get
                Return Me.IssueDteField
            End Get
            Set
                If (Me.IssueDteField.Equals(value) <> true) Then
                    Me.IssueDteField = value
                    Me.RaisePropertyChanged("IssueDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueID() As String
            Get
                Return Me.IssueIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueIDField, value) <> true) Then
                    Me.IssueIDField = value
                    Me.RaisePropertyChanged("IssueID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueQty() As Decimal
            Get
                Return Me.IssueQtyField
            End Get
            Set
                If (Me.IssueQtyField.Equals(value) <> true) Then
                    Me.IssueQtyField = value
                    Me.RaisePropertyChanged("IssueQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueSerialNo() As String
            Get
                Return Me.IssueSerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueSerialNoField, value) <> true) Then
                    Me.IssueSerialNoField = value
                    Me.RaisePropertyChanged("IssueSerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueStockItemDesc() As String
            Get
                Return Me.IssueStockItemDescField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueStockItemDescField, value) <> true) Then
                    Me.IssueStockItemDescField = value
                    Me.RaisePropertyChanged("IssueStockItemDesc")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueStockItemID() As String
            Get
                Return Me.IssueStockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueStockItemIDField, value) <> true) Then
                    Me.IssueStockItemIDField = value
                    Me.RaisePropertyChanged("IssueStockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueTotalCost() As Decimal
            Get
                Return Me.IssueTotalCostField
            End Get
            Set
                If (Me.IssueTotalCostField.Equals(value) <> true) Then
                    Me.IssueTotalCostField = value
                    Me.RaisePropertyChanged("IssueTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueType() As String
            Get
                Return Me.IssueTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueTypeField, value) <> true) Then
                    Me.IssueTypeField = value
                    Me.RaisePropertyChanged("IssueType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueUOM() As String
            Get
                Return Me.IssueUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueUOMField, value) <> true) Then
                    Me.IssueUOMField = value
                    Me.RaisePropertyChanged("IssueUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueUnitCost() As Decimal
            Get
                Return Me.IssueUnitCostField
            End Get
            Set
                If (Me.IssueUnitCostField.Equals(value) <> true) Then
                    Me.IssueUnitCostField = value
                    Me.RaisePropertyChanged("IssueUnitCost")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR004StockReviewListDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR004StockReviewListDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AvgIssueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AvgIssuePerMthField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DesireMaxlevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DesireOrderlevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HighestIssueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NoOfIssueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NoOfOrderField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemBalanceQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemMaxLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemMinLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemReorderLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalIssueQtyField As Decimal
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AvgIssue() As Decimal
            Get
                Return Me.AvgIssueField
            End Get
            Set
                If (Me.AvgIssueField.Equals(value) <> true) Then
                    Me.AvgIssueField = value
                    Me.RaisePropertyChanged("AvgIssue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AvgIssuePerMth() As Decimal
            Get
                Return Me.AvgIssuePerMthField
            End Get
            Set
                If (Me.AvgIssuePerMthField.Equals(value) <> true) Then
                    Me.AvgIssuePerMthField = value
                    Me.RaisePropertyChanged("AvgIssuePerMth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DesireMaxlevel() As Decimal
            Get
                Return Me.DesireMaxlevelField
            End Get
            Set
                If (Me.DesireMaxlevelField.Equals(value) <> true) Then
                    Me.DesireMaxlevelField = value
                    Me.RaisePropertyChanged("DesireMaxlevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DesireOrderlevel() As Decimal
            Get
                Return Me.DesireOrderlevelField
            End Get
            Set
                If (Me.DesireOrderlevelField.Equals(value) <> true) Then
                    Me.DesireOrderlevelField = value
                    Me.RaisePropertyChanged("DesireOrderlevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HighestIssue() As Decimal
            Get
                Return Me.HighestIssueField
            End Get
            Set
                If (Me.HighestIssueField.Equals(value) <> true) Then
                    Me.HighestIssueField = value
                    Me.RaisePropertyChanged("HighestIssue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NoOfIssue() As Decimal
            Get
                Return Me.NoOfIssueField
            End Get
            Set
                If (Me.NoOfIssueField.Equals(value) <> true) Then
                    Me.NoOfIssueField = value
                    Me.RaisePropertyChanged("NoOfIssue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NoOfOrder() As Decimal
            Get
                Return Me.NoOfOrderField
            End Get
            Set
                If (Me.NoOfOrderField.Equals(value) <> true) Then
                    Me.NoOfOrderField = value
                    Me.RaisePropertyChanged("NoOfOrder")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemBalanceQty() As Decimal
            Get
                Return Me.StockItemBalanceQtyField
            End Get
            Set
                If (Me.StockItemBalanceQtyField.Equals(value) <> true) Then
                    Me.StockItemBalanceQtyField = value
                    Me.RaisePropertyChanged("StockItemBalanceQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemMaxLevel() As Decimal
            Get
                Return Me.StockItemMaxLevelField
            End Get
            Set
                If (Me.StockItemMaxLevelField.Equals(value) <> true) Then
                    Me.StockItemMaxLevelField = value
                    Me.RaisePropertyChanged("StockItemMaxLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemMinLevel() As Decimal
            Get
                Return Me.StockItemMinLevelField
            End Get
            Set
                If (Me.StockItemMinLevelField.Equals(value) <> true) Then
                    Me.StockItemMinLevelField = value
                    Me.RaisePropertyChanged("StockItemMinLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemReorderLevel() As Decimal
            Get
                Return Me.StockItemReorderLevelField
            End Get
            Set
                If (Me.StockItemReorderLevelField.Equals(value) <> true) Then
                    Me.StockItemReorderLevelField = value
                    Me.RaisePropertyChanged("StockItemReorderLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUnitCost() As Decimal
            Get
                Return Me.StockItemUnitCostField
            End Get
            Set
                If (Me.StockItemUnitCostField.Equals(value) <> true) Then
                    Me.StockItemUnitCostField = value
                    Me.RaisePropertyChanged("StockItemUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalIssueQty() As Decimal
            Get
                Return Me.TotalIssueQtyField
            End Get
            Set
                If (Me.TotalIssueQtyField.Equals(value) <> true) Then
                    Me.TotalIssueQtyField = value
                    Me.RaisePropertyChanged("TotalIssueQty")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR005StockReturnDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR005StockReturnDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustIssueTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EndBalanceTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartBalanceTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeDescField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustIssueTotalCost() As Decimal
            Get
                Return Me.AdjustIssueTotalCostField
            End Get
            Set
                If (Me.AdjustIssueTotalCostField.Equals(value) <> true) Then
                    Me.AdjustIssueTotalCostField = value
                    Me.RaisePropertyChanged("AdjustIssueTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustTotalCost() As Decimal
            Get
                Return Me.AdjustTotalCostField
            End Get
            Set
                If (Me.AdjustTotalCostField.Equals(value) <> true) Then
                    Me.AdjustTotalCostField = value
                    Me.RaisePropertyChanged("AdjustTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndBalanceTotalCost() As Decimal
            Get
                Return Me.EndBalanceTotalCostField
            End Get
            Set
                If (Me.EndBalanceTotalCostField.Equals(value) <> true) Then
                    Me.EndBalanceTotalCostField = value
                    Me.RaisePropertyChanged("EndBalanceTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueTotalCost() As Decimal
            Get
                Return Me.IssueTotalCostField
            End Get
            Set
                If (Me.IssueTotalCostField.Equals(value) <> true) Then
                    Me.IssueTotalCostField = value
                    Me.RaisePropertyChanged("IssueTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveTotalCost() As Decimal
            Get
                Return Me.ReceiveTotalCostField
            End Get
            Set
                If (Me.ReceiveTotalCostField.Equals(value) <> true) Then
                    Me.ReceiveTotalCostField = value
                    Me.RaisePropertyChanged("ReceiveTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartBalanceTotalCost() As Decimal
            Get
                Return Me.StartBalanceTotalCostField
            End Get
            Set
                If (Me.StartBalanceTotalCostField.Equals(value) <> true) Then
                    Me.StartBalanceTotalCostField = value
                    Me.RaisePropertyChanged("StartBalanceTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTypeDesc() As String
            Get
                Return Me.StockTypeDescField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeDescField, value) <> true) Then
                    Me.StockTypeDescField = value
                    Me.RaisePropertyChanged("StockTypeDesc")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR006StockReturnCheckListAdjustDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR006StockReturnCheckListAdjustDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustRemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustSerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustDte() As Date
            Get
                Return Me.AdjustDteField
            End Get
            Set
                If (Me.AdjustDteField.Equals(value) <> true) Then
                    Me.AdjustDteField = value
                    Me.RaisePropertyChanged("AdjustDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustID() As String
            Get
                Return Me.AdjustIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustIDField, value) <> true) Then
                    Me.AdjustIDField = value
                    Me.RaisePropertyChanged("AdjustID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustQty() As Decimal
            Get
                Return Me.AdjustQtyField
            End Get
            Set
                If (Me.AdjustQtyField.Equals(value) <> true) Then
                    Me.AdjustQtyField = value
                    Me.RaisePropertyChanged("AdjustQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustRemarks() As String
            Get
                Return Me.AdjustRemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustRemarksField, value) <> true) Then
                    Me.AdjustRemarksField = value
                    Me.RaisePropertyChanged("AdjustRemarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustSerialNo() As String
            Get
                Return Me.AdjustSerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustSerialNoField, value) <> true) Then
                    Me.AdjustSerialNoField = value
                    Me.RaisePropertyChanged("AdjustSerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustTotalCost() As Decimal
            Get
                Return Me.AdjustTotalCostField
            End Get
            Set
                If (Me.AdjustTotalCostField.Equals(value) <> true) Then
                    Me.AdjustTotalCostField = value
                    Me.RaisePropertyChanged("AdjustTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustType() As String
            Get
                Return Me.AdjustTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustTypeField, value) <> true) Then
                    Me.AdjustTypeField = value
                    Me.RaisePropertyChanged("AdjustType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustUOM() As String
            Get
                Return Me.AdjustUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustUOMField, value) <> true) Then
                    Me.AdjustUOMField = value
                    Me.RaisePropertyChanged("AdjustUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustUnitCost() As Decimal
            Get
                Return Me.AdjustUnitCostField
            End Get
            Set
                If (Me.AdjustUnitCostField.Equals(value) <> true) Then
                    Me.AdjustUnitCostField = value
                    Me.RaisePropertyChanged("AdjustUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR006StockReturnCheckListIssueDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR006StockReturnCheckListIssueDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerDescription() As String
            Get
                Return Me.ConsumerDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerDescriptionField, value) <> true) Then
                    Me.ConsumerDescriptionField = value
                    Me.RaisePropertyChanged("ConsumerDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerID() As String
            Get
                Return Me.ConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerIDField, value) <> true) Then
                    Me.ConsumerIDField = value
                    Me.RaisePropertyChanged("ConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueDte() As Date
            Get
                Return Me.IssueDteField
            End Get
            Set
                If (Me.IssueDteField.Equals(value) <> true) Then
                    Me.IssueDteField = value
                    Me.RaisePropertyChanged("IssueDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueQty() As Decimal
            Get
                Return Me.IssueQtyField
            End Get
            Set
                If (Me.IssueQtyField.Equals(value) <> true) Then
                    Me.IssueQtyField = value
                    Me.RaisePropertyChanged("IssueQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueTotalCost() As Decimal
            Get
                Return Me.IssueTotalCostField
            End Get
            Set
                If (Me.IssueTotalCostField.Equals(value) <> true) Then
                    Me.IssueTotalCostField = value
                    Me.RaisePropertyChanged("IssueTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueType() As String
            Get
                Return Me.IssueTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueTypeField, value) <> true) Then
                    Me.IssueTypeField = value
                    Me.RaisePropertyChanged("IssueType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueUOM() As String
            Get
                Return Me.IssueUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueUOMField, value) <> true) Then
                    Me.IssueUOMField = value
                    Me.RaisePropertyChanged("IssueUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueUnitCost() As Decimal
            Get
                Return Me.IssueUnitCostField
            End Get
            Set
                If (Me.IssueUnitCostField.Equals(value) <> true) Then
                    Me.IssueUnitCostField = value
                    Me.RaisePropertyChanged("IssueUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestID() As String
            Get
                Return Me.RequestIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestIDField, value) <> true) Then
                    Me.RequestIDField = value
                    Me.RaisePropertyChanged("RequestID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR006StockReturnCheckListReceiveDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR006StockReturnCheckListReceiveDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveDocNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveRemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveDocNo() As String
            Get
                Return Me.ReceiveDocNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReceiveDocNoField, value) <> true) Then
                    Me.ReceiveDocNoField = value
                    Me.RaisePropertyChanged("ReceiveDocNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveDte() As Date
            Get
                Return Me.ReceiveDteField
            End Get
            Set
                If (Me.ReceiveDteField.Equals(value) <> true) Then
                    Me.ReceiveDteField = value
                    Me.RaisePropertyChanged("ReceiveDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveQty() As Decimal
            Get
                Return Me.ReceiveQtyField
            End Get
            Set
                If (Me.ReceiveQtyField.Equals(value) <> true) Then
                    Me.ReceiveQtyField = value
                    Me.RaisePropertyChanged("ReceiveQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveRemarks() As String
            Get
                Return Me.ReceiveRemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReceiveRemarksField, value) <> true) Then
                    Me.ReceiveRemarksField = value
                    Me.RaisePropertyChanged("ReceiveRemarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveTotalCost() As Decimal
            Get
                Return Me.ReceiveTotalCostField
            End Get
            Set
                If (Me.ReceiveTotalCostField.Equals(value) <> true) Then
                    Me.ReceiveTotalCostField = value
                    Me.RaisePropertyChanged("ReceiveTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveType() As String
            Get
                Return Me.ReceiveTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReceiveTypeField, value) <> true) Then
                    Me.ReceiveTypeField = value
                    Me.RaisePropertyChanged("ReceiveType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveUOM() As String
            Get
                Return Me.ReceiveUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReceiveUOMField, value) <> true) Then
                    Me.ReceiveUOMField = value
                    Me.RaisePropertyChanged("ReceiveUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveUnitCost() As Decimal
            Get
                Return Me.ReceiveUnitCostField
            End Get
            Set
                If (Me.ReceiveUnitCostField.Equals(value) <> true) Then
                    Me.ReceiveUnitCostField = value
                    Me.RaisePropertyChanged("ReceiveUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR006StockReturnCheckListStockItemDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR006StockReturnCheckListStockItemDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExcludeZeroField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemLocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemLocation2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemPartNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemStockBalField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExcludeZero() As Boolean
            Get
                Return Me.ExcludeZeroField
            End Get
            Set
                If (Me.ExcludeZeroField.Equals(value) <> true) Then
                    Me.ExcludeZeroField = value
                    Me.RaisePropertyChanged("ExcludeZero")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemLocation() As String
            Get
                Return Me.StockItemLocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemLocationField, value) <> true) Then
                    Me.StockItemLocationField = value
                    Me.RaisePropertyChanged("StockItemLocation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemLocation2() As String
            Get
                Return Me.StockItemLocation2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemLocation2Field, value) <> true) Then
                    Me.StockItemLocation2Field = value
                    Me.RaisePropertyChanged("StockItemLocation2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemPartNo() As String
            Get
                Return Me.StockItemPartNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemPartNoField, value) <> true) Then
                    Me.StockItemPartNoField = value
                    Me.RaisePropertyChanged("StockItemPartNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemStockBal() As Decimal
            Get
                Return Me.StockItemStockBalField
            End Get
            Set
                If (Me.StockItemStockBalField.Equals(value) <> true) Then
                    Me.StockItemStockBalField = value
                    Me.RaisePropertyChanged("StockItemStockBal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemTotalCost() As Decimal
            Get
                Return Me.StockItemTotalCostField
            End Get
            Set
                If (Me.StockItemTotalCostField.Equals(value) <> true) Then
                    Me.StockItemTotalCostField = value
                    Me.RaisePropertyChanged("StockItemTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUOM() As String
            Get
                Return Me.StockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemUOMField, value) <> true) Then
                    Me.StockItemUOMField = value
                    Me.RaisePropertyChanged("StockItemUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUnitCost() As Decimal
            Get
                Return Me.StockItemUnitCostField
            End Get
            Set
                If (Me.StockItemUnitCostField.Equals(value) <> true) Then
                    Me.StockItemUnitCostField = value
                    Me.RaisePropertyChanged("StockItemUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR007PeriodIssuesDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR007PeriodIssuesDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueSerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueUnitCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerDescription() As String
            Get
                Return Me.ConsumerDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerDescriptionField, value) <> true) Then
                    Me.ConsumerDescriptionField = value
                    Me.RaisePropertyChanged("ConsumerDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerID() As String
            Get
                Return Me.ConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerIDField, value) <> true) Then
                    Me.ConsumerIDField = value
                    Me.RaisePropertyChanged("ConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueDte() As Date
            Get
                Return Me.IssueDteField
            End Get
            Set
                If (Me.IssueDteField.Equals(value) <> true) Then
                    Me.IssueDteField = value
                    Me.RaisePropertyChanged("IssueDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueQty() As Decimal
            Get
                Return Me.IssueQtyField
            End Get
            Set
                If (Me.IssueQtyField.Equals(value) <> true) Then
                    Me.IssueQtyField = value
                    Me.RaisePropertyChanged("IssueQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueSerialNo() As String
            Get
                Return Me.IssueSerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueSerialNoField, value) <> true) Then
                    Me.IssueSerialNoField = value
                    Me.RaisePropertyChanged("IssueSerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueTotalCost() As Decimal
            Get
                Return Me.IssueTotalCostField
            End Get
            Set
                If (Me.IssueTotalCostField.Equals(value) <> true) Then
                    Me.IssueTotalCostField = value
                    Me.RaisePropertyChanged("IssueTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueType() As String
            Get
                Return Me.IssueTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueTypeField, value) <> true) Then
                    Me.IssueTypeField = value
                    Me.RaisePropertyChanged("IssueType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueUOM() As String
            Get
                Return Me.IssueUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueUOMField, value) <> true) Then
                    Me.IssueUOMField = value
                    Me.RaisePropertyChanged("IssueUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueUnitCost() As Decimal
            Get
                Return Me.IssueUnitCostField
            End Get
            Set
                If (Me.IssueUnitCostField.Equals(value) <> true) Then
                    Me.IssueUnitCostField = value
                    Me.RaisePropertyChanged("IssueUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RequestID() As String
            Get
                Return Me.RequestIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestIDField, value) <> true) Then
                    Me.RequestIDField = value
                    Me.RaisePropertyChanged("RequestID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR008QuantityIssueSummaryDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR008QuantityIssueSummaryDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FIssueConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemStockBalField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SumIssueQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SumIssueTotalCostField As Decimal
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FIssueConsumerID() As String
            Get
                Return Me.FIssueConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FIssueConsumerIDField, value) <> true) Then
                    Me.FIssueConsumerIDField = value
                    Me.RaisePropertyChanged("FIssueConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemStockBal() As Decimal
            Get
                Return Me.StockItemStockBalField
            End Get
            Set
                If (Me.StockItemStockBalField.Equals(value) <> true) Then
                    Me.StockItemStockBalField = value
                    Me.RaisePropertyChanged("StockItemStockBal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemTotalCost() As Decimal
            Get
                Return Me.StockItemTotalCostField
            End Get
            Set
                If (Me.StockItemTotalCostField.Equals(value) <> true) Then
                    Me.StockItemTotalCostField = value
                    Me.RaisePropertyChanged("StockItemTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUOM() As String
            Get
                Return Me.StockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemUOMField, value) <> true) Then
                    Me.StockItemUOMField = value
                    Me.RaisePropertyChanged("StockItemUOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SumIssueQty() As Decimal
            Get
                Return Me.SumIssueQtyField
            End Get
            Set
                If (Me.SumIssueQtyField.Equals(value) <> true) Then
                    Me.SumIssueQtyField = value
                    Me.RaisePropertyChanged("SumIssueQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SumIssueTotalCost() As Decimal
            Get
                Return Me.SumIssueTotalCostField
            End Get
            Set
                If (Me.SumIssueTotalCostField.Equals(value) <> true) Then
                    Me.SumIssueTotalCostField = value
                    Me.RaisePropertyChanged("SumIssueTotalCost")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR009ReorderStockItemListDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR009ReorderStockItemListDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemOrderIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemRemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemMaxLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemMinLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemReorderLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemStockBalField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemOrderID() As String
            Get
                Return Me.OrderItemOrderIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OrderItemOrderIDField, value) <> true) Then
                    Me.OrderItemOrderIDField = value
                    Me.RaisePropertyChanged("OrderItemOrderID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemQty() As Decimal
            Get
                Return Me.OrderItemQtyField
            End Get
            Set
                If (Me.OrderItemQtyField.Equals(value) <> true) Then
                    Me.OrderItemQtyField = value
                    Me.RaisePropertyChanged("OrderItemQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemRemarks() As String
            Get
                Return Me.OrderItemRemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OrderItemRemarksField, value) <> true) Then
                    Me.OrderItemRemarksField = value
                    Me.RaisePropertyChanged("OrderItemRemarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemTotalCost() As Decimal
            Get
                Return Me.OrderItemTotalCostField
            End Get
            Set
                If (Me.OrderItemTotalCostField.Equals(value) <> true) Then
                    Me.OrderItemTotalCostField = value
                    Me.RaisePropertyChanged("OrderItemTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemMaxLevel() As Decimal
            Get
                Return Me.StockItemMaxLevelField
            End Get
            Set
                If (Me.StockItemMaxLevelField.Equals(value) <> true) Then
                    Me.StockItemMaxLevelField = value
                    Me.RaisePropertyChanged("StockItemMaxLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemMinLevel() As Decimal
            Get
                Return Me.StockItemMinLevelField
            End Get
            Set
                If (Me.StockItemMinLevelField.Equals(value) <> true) Then
                    Me.StockItemMinLevelField = value
                    Me.RaisePropertyChanged("StockItemMinLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemReorderLevel() As Decimal
            Get
                Return Me.StockItemReorderLevelField
            End Get
            Set
                If (Me.StockItemReorderLevelField.Equals(value) <> true) Then
                    Me.StockItemReorderLevelField = value
                    Me.RaisePropertyChanged("StockItemReorderLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemStockBal() As Decimal
            Get
                Return Me.StockItemStockBalField
            End Get
            Set
                If (Me.StockItemStockBalField.Equals(value) <> true) Then
                    Me.StockItemStockBalField = value
                    Me.RaisePropertyChanged("StockItemStockBal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemTotalCost() As Decimal
            Get
                Return Me.StockItemTotalCostField
            End Get
            Set
                If (Me.StockItemTotalCostField.Equals(value) <> true) Then
                    Me.StockItemTotalCostField = value
                    Me.RaisePropertyChanged("StockItemTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUOM() As String
            Get
                Return Me.StockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemUOMField, value) <> true) Then
                    Me.StockItemUOMField = value
                    Me.RaisePropertyChanged("StockItemUOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MR010StockAdjustmentEntriesDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MR010StockAdjustmentEntriesDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustAdjustIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustDocReturnField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustRemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdjustTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemStockBalField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemTotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemUOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustAdjustID() As String
            Get
                Return Me.AdjustAdjustIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustAdjustIDField, value) <> true) Then
                    Me.AdjustAdjustIDField = value
                    Me.RaisePropertyChanged("AdjustAdjustID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustDocReturn() As String
            Get
                Return Me.AdjustDocReturnField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustDocReturnField, value) <> true) Then
                    Me.AdjustDocReturnField = value
                    Me.RaisePropertyChanged("AdjustDocReturn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustDte() As Date
            Get
                Return Me.AdjustDteField
            End Get
            Set
                If (Me.AdjustDteField.Equals(value) <> true) Then
                    Me.AdjustDteField = value
                    Me.RaisePropertyChanged("AdjustDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustQty() As Decimal
            Get
                Return Me.AdjustQtyField
            End Get
            Set
                If (Me.AdjustQtyField.Equals(value) <> true) Then
                    Me.AdjustQtyField = value
                    Me.RaisePropertyChanged("AdjustQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustRemarks() As String
            Get
                Return Me.AdjustRemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustRemarksField, value) <> true) Then
                    Me.AdjustRemarksField = value
                    Me.RaisePropertyChanged("AdjustRemarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustTotalCost() As Decimal
            Get
                Return Me.AdjustTotalCostField
            End Get
            Set
                If (Me.AdjustTotalCostField.Equals(value) <> true) Then
                    Me.AdjustTotalCostField = value
                    Me.RaisePropertyChanged("AdjustTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdjustType() As String
            Get
                Return Me.AdjustTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdjustTypeField, value) <> true) Then
                    Me.AdjustTypeField = value
                    Me.RaisePropertyChanged("AdjustType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemDescription() As String
            Get
                Return Me.StockItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemDescriptionField, value) <> true) Then
                    Me.StockItemDescriptionField = value
                    Me.RaisePropertyChanged("StockItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemStockBal() As Decimal
            Get
                Return Me.StockItemStockBalField
            End Get
            Set
                If (Me.StockItemStockBalField.Equals(value) <> true) Then
                    Me.StockItemStockBalField = value
                    Me.RaisePropertyChanged("StockItemStockBal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemTotalCost() As Decimal
            Get
                Return Me.StockItemTotalCostField
            End Get
            Set
                If (Me.StockItemTotalCostField.Equals(value) <> true) Then
                    Me.StockItemTotalCostField = value
                    Me.RaisePropertyChanged("StockItemTotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemUOM() As String
            Get
                Return Me.StockItemUOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemUOMField, value) <> true) Then
                    Me.StockItemUOMField = value
                    Me.RaisePropertyChanged("StockItemUOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AdHocReportDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AdHocReportDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_1Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_10Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_11Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_12Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_13Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_14Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_15Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_16Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_17Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_18Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_3Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_4Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_5Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_6Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_7Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_8Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdHoc_9Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SQLStatementField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_1() As String
            Get
                Return Me.AdHoc_1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_1Field, value) <> true) Then
                    Me.AdHoc_1Field = value
                    Me.RaisePropertyChanged("AdHoc_1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_10() As String
            Get
                Return Me.AdHoc_10Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_10Field, value) <> true) Then
                    Me.AdHoc_10Field = value
                    Me.RaisePropertyChanged("AdHoc_10")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_11() As String
            Get
                Return Me.AdHoc_11Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_11Field, value) <> true) Then
                    Me.AdHoc_11Field = value
                    Me.RaisePropertyChanged("AdHoc_11")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_12() As String
            Get
                Return Me.AdHoc_12Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_12Field, value) <> true) Then
                    Me.AdHoc_12Field = value
                    Me.RaisePropertyChanged("AdHoc_12")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_13() As String
            Get
                Return Me.AdHoc_13Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_13Field, value) <> true) Then
                    Me.AdHoc_13Field = value
                    Me.RaisePropertyChanged("AdHoc_13")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_14() As String
            Get
                Return Me.AdHoc_14Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_14Field, value) <> true) Then
                    Me.AdHoc_14Field = value
                    Me.RaisePropertyChanged("AdHoc_14")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_15() As String
            Get
                Return Me.AdHoc_15Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_15Field, value) <> true) Then
                    Me.AdHoc_15Field = value
                    Me.RaisePropertyChanged("AdHoc_15")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_16() As String
            Get
                Return Me.AdHoc_16Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_16Field, value) <> true) Then
                    Me.AdHoc_16Field = value
                    Me.RaisePropertyChanged("AdHoc_16")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_17() As String
            Get
                Return Me.AdHoc_17Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_17Field, value) <> true) Then
                    Me.AdHoc_17Field = value
                    Me.RaisePropertyChanged("AdHoc_17")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_18() As String
            Get
                Return Me.AdHoc_18Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_18Field, value) <> true) Then
                    Me.AdHoc_18Field = value
                    Me.RaisePropertyChanged("AdHoc_18")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_2() As String
            Get
                Return Me.AdHoc_2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_2Field, value) <> true) Then
                    Me.AdHoc_2Field = value
                    Me.RaisePropertyChanged("AdHoc_2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_3() As String
            Get
                Return Me.AdHoc_3Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_3Field, value) <> true) Then
                    Me.AdHoc_3Field = value
                    Me.RaisePropertyChanged("AdHoc_3")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_4() As String
            Get
                Return Me.AdHoc_4Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_4Field, value) <> true) Then
                    Me.AdHoc_4Field = value
                    Me.RaisePropertyChanged("AdHoc_4")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_5() As String
            Get
                Return Me.AdHoc_5Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_5Field, value) <> true) Then
                    Me.AdHoc_5Field = value
                    Me.RaisePropertyChanged("AdHoc_5")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_6() As String
            Get
                Return Me.AdHoc_6Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_6Field, value) <> true) Then
                    Me.AdHoc_6Field = value
                    Me.RaisePropertyChanged("AdHoc_6")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_7() As String
            Get
                Return Me.AdHoc_7Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_7Field, value) <> true) Then
                    Me.AdHoc_7Field = value
                    Me.RaisePropertyChanged("AdHoc_7")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_8() As String
            Get
                Return Me.AdHoc_8Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_8Field, value) <> true) Then
                    Me.AdHoc_8Field = value
                    Me.RaisePropertyChanged("AdHoc_8")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdHoc_9() As String
            Get
                Return Me.AdHoc_9Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdHoc_9Field, value) <> true) Then
                    Me.AdHoc_9Field = value
                    Me.RaisePropertyChanged("AdHoc_9")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SQLStatement() As String
            Get
                Return Me.SQLStatementField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SQLStatementField, value) <> true) Then
                    Me.SQLStatementField = value
                    Me.RaisePropertyChanged("SQLStatement")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EmailContent", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class EmailContent
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CCAddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailFormatField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FirstRemainderField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SecondRemainderField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIdField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubjectField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ToAddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private msgFormatField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CCAddress() As String
            Get
                Return Me.CCAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CCAddressField, value) <> true) Then
                    Me.CCAddressField = value
                    Me.RaisePropertyChanged("CCAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailFormat() As String
            Get
                Return Me.EmailFormatField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailFormatField, value) <> true) Then
                    Me.EmailFormatField = value
                    Me.RaisePropertyChanged("EmailFormat")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FirstRemainder() As String
            Get
                Return Me.FirstRemainderField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FirstRemainderField, value) <> true) Then
                    Me.FirstRemainderField = value
                    Me.RaisePropertyChanged("FirstRemainder")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SecondRemainder() As String
            Get
                Return Me.SecondRemainderField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SecondRemainderField, value) <> true) Then
                    Me.SecondRemainderField = value
                    Me.RaisePropertyChanged("SecondRemainder")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreId() As String
            Get
                Return Me.StoreIdField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIdField, value) <> true) Then
                    Me.StoreIdField = value
                    Me.RaisePropertyChanged("StoreId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Subject() As String
            Get
                Return Me.SubjectField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubjectField, value) <> true) Then
                    Me.SubjectField = value
                    Me.RaisePropertyChanged("Subject")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ToAddress() As String
            Get
                Return Me.ToAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ToAddressField, value) <> true) Then
                    Me.ToAddressField = value
                    Me.RaisePropertyChanged("ToAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property msgFormat() As String
            Get
                Return Me.msgFormatField
            End Get
            Set
                If (Object.ReferenceEquals(Me.msgFormatField, value) <> true) Then
                    Me.msgFormatField = value
                    Me.RaisePropertyChanged("msgFormat")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CommonDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CommonDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeGroupField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CodeIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CommonIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CodeDescription() As String
            Get
                Return Me.CodeDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeDescriptionField, value) <> true) Then
                    Me.CodeDescriptionField = value
                    Me.RaisePropertyChanged("CodeDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CodeGroup() As String
            Get
                Return Me.CodeGroupField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeGroupField, value) <> true) Then
                    Me.CodeGroupField = value
                    Me.RaisePropertyChanged("CodeGroup")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CodeID() As String
            Get
                Return Me.CodeIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CodeIDField, value) <> true) Then
                    Me.CodeIDField = value
                    Me.RaisePropertyChanged("CodeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CommonID() As Integer
            Get
                Return Me.CommonIDField
            End Get
            Set
                If (Me.CommonIDField.Equals(value) <> true) Then
                    Me.CommonIDField = value
                    Me.RaisePropertyChanged("CommonID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="RoleDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class RoleDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ChangeStatusReasonField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CreatedByField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CreatedDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DeleteRightField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DepartmentField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DesignationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DivisionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InsertRightField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InstallationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsUserDeletedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastLoginField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastLogoutField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MasterIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModuleIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModuleSourceField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModuleTitleField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModuleTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParentIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SectionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SelectRightField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SoeIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UpdateRightField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UpdatedDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIPField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserRoleField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserStatusField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeStatusReason() As String
            Get
                Return Me.ChangeStatusReasonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeStatusReasonField, value) <> true) Then
                    Me.ChangeStatusReasonField = value
                    Me.RaisePropertyChanged("ChangeStatusReason")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CreatedBy() As String
            Get
                Return Me.CreatedByField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CreatedByField, value) <> true) Then
                    Me.CreatedByField = value
                    Me.RaisePropertyChanged("CreatedBy")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CreatedDate() As Date
            Get
                Return Me.CreatedDateField
            End Get
            Set
                If (Me.CreatedDateField.Equals(value) <> true) Then
                    Me.CreatedDateField = value
                    Me.RaisePropertyChanged("CreatedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DeleteRight() As Boolean
            Get
                Return Me.DeleteRightField
            End Get
            Set
                If (Me.DeleteRightField.Equals(value) <> true) Then
                    Me.DeleteRightField = value
                    Me.RaisePropertyChanged("DeleteRight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Department() As String
            Get
                Return Me.DepartmentField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DepartmentField, value) <> true) Then
                    Me.DepartmentField = value
                    Me.RaisePropertyChanged("Department")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Designation() As String
            Get
                Return Me.DesignationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DesignationField, value) <> true) Then
                    Me.DesignationField = value
                    Me.RaisePropertyChanged("Designation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Division() As String
            Get
                Return Me.DivisionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DivisionField, value) <> true) Then
                    Me.DivisionField = value
                    Me.RaisePropertyChanged("Division")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property InsertRight() As Boolean
            Get
                Return Me.InsertRightField
            End Get
            Set
                If (Me.InsertRightField.Equals(value) <> true) Then
                    Me.InsertRightField = value
                    Me.RaisePropertyChanged("InsertRight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Installation() As String
            Get
                Return Me.InstallationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.InstallationField, value) <> true) Then
                    Me.InstallationField = value
                    Me.RaisePropertyChanged("Installation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsUserDeleted() As Boolean
            Get
                Return Me.IsUserDeletedField
            End Get
            Set
                If (Me.IsUserDeletedField.Equals(value) <> true) Then
                    Me.IsUserDeletedField = value
                    Me.RaisePropertyChanged("IsUserDeleted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastLogin() As Date
            Get
                Return Me.LastLoginField
            End Get
            Set
                If (Me.LastLoginField.Equals(value) <> true) Then
                    Me.LastLoginField = value
                    Me.RaisePropertyChanged("LastLogin")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastLogout() As Date
            Get
                Return Me.LastLogoutField
            End Get
            Set
                If (Me.LastLogoutField.Equals(value) <> true) Then
                    Me.LastLogoutField = value
                    Me.RaisePropertyChanged("LastLogout")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MasterID() As Integer
            Get
                Return Me.MasterIDField
            End Get
            Set
                If (Me.MasterIDField.Equals(value) <> true) Then
                    Me.MasterIDField = value
                    Me.RaisePropertyChanged("MasterID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModuleID() As Integer
            Get
                Return Me.ModuleIDField
            End Get
            Set
                If (Me.ModuleIDField.Equals(value) <> true) Then
                    Me.ModuleIDField = value
                    Me.RaisePropertyChanged("ModuleID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModuleSource() As String
            Get
                Return Me.ModuleSourceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModuleSourceField, value) <> true) Then
                    Me.ModuleSourceField = value
                    Me.RaisePropertyChanged("ModuleSource")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModuleTitle() As String
            Get
                Return Me.ModuleTitleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModuleTitleField, value) <> true) Then
                    Me.ModuleTitleField = value
                    Me.RaisePropertyChanged("ModuleTitle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModuleType() As String
            Get
                Return Me.ModuleTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModuleTypeField, value) <> true) Then
                    Me.ModuleTypeField = value
                    Me.RaisePropertyChanged("ModuleType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParentID() As Integer
            Get
                Return Me.ParentIDField
            End Get
            Set
                If (Me.ParentIDField.Equals(value) <> true) Then
                    Me.ParentIDField = value
                    Me.RaisePropertyChanged("ParentID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Section() As String
            Get
                Return Me.SectionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SectionField, value) <> true) Then
                    Me.SectionField = value
                    Me.RaisePropertyChanged("Section")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SelectRight() As Boolean
            Get
                Return Me.SelectRightField
            End Get
            Set
                If (Me.SelectRightField.Equals(value) <> true) Then
                    Me.SelectRightField = value
                    Me.RaisePropertyChanged("SelectRight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SoeID() As String
            Get
                Return Me.SoeIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SoeIDField, value) <> true) Then
                    Me.SoeIDField = value
                    Me.RaisePropertyChanged("SoeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UpdateRight() As Boolean
            Get
                Return Me.UpdateRightField
            End Get
            Set
                If (Me.UpdateRightField.Equals(value) <> true) Then
                    Me.UpdateRightField = value
                    Me.RaisePropertyChanged("UpdateRight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UpdatedDate() As Date
            Get
                Return Me.UpdatedDateField
            End Get
            Set
                If (Me.UpdatedDateField.Equals(value) <> true) Then
                    Me.UpdatedDateField = value
                    Me.RaisePropertyChanged("UpdatedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserIP() As String
            Get
                Return Me.UserIPField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIPField, value) <> true) Then
                    Me.UserIPField = value
                    Me.RaisePropertyChanged("UserIP")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserRole() As String
            Get
                Return Me.UserRoleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserRoleField, value) <> true) Then
                    Me.UserRoleField = value
                    Me.RaisePropertyChanged("UserRole")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserStatus() As String
            Get
                Return Me.UserStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserStatusField, value) <> true) Then
                    Me.UserStatusField = value
                    Me.RaisePropertyChanged("UserStatus")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="StoreDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class StoreDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressBlockHouseNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressBuildingNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressFloorNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressPostalCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressStreetNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressUnitNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ContactPersonField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FaxNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OriginalStoreNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OtherInfoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIdField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TelephoneNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserRolesField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressBlockHouseNo() As String
            Get
                Return Me.AddressBlockHouseNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressBlockHouseNoField, value) <> true) Then
                    Me.AddressBlockHouseNoField = value
                    Me.RaisePropertyChanged("AddressBlockHouseNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressBuildingName() As String
            Get
                Return Me.AddressBuildingNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressBuildingNameField, value) <> true) Then
                    Me.AddressBuildingNameField = value
                    Me.RaisePropertyChanged("AddressBuildingName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressFloorNo() As String
            Get
                Return Me.AddressFloorNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressFloorNoField, value) <> true) Then
                    Me.AddressFloorNoField = value
                    Me.RaisePropertyChanged("AddressFloorNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressPostalCode() As String
            Get
                Return Me.AddressPostalCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressPostalCodeField, value) <> true) Then
                    Me.AddressPostalCodeField = value
                    Me.RaisePropertyChanged("AddressPostalCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressStreetName() As String
            Get
                Return Me.AddressStreetNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressStreetNameField, value) <> true) Then
                    Me.AddressStreetNameField = value
                    Me.RaisePropertyChanged("AddressStreetName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressType() As String
            Get
                Return Me.AddressTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressTypeField, value) <> true) Then
                    Me.AddressTypeField = value
                    Me.RaisePropertyChanged("AddressType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressUnitNo() As String
            Get
                Return Me.AddressUnitNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressUnitNoField, value) <> true) Then
                    Me.AddressUnitNoField = value
                    Me.RaisePropertyChanged("AddressUnitNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ContactPerson() As String
            Get
                Return Me.ContactPersonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ContactPersonField, value) <> true) Then
                    Me.ContactPersonField = value
                    Me.RaisePropertyChanged("ContactPerson")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FaxNo() As String
            Get
                Return Me.FaxNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FaxNoField, value) <> true) Then
                    Me.FaxNoField = value
                    Me.RaisePropertyChanged("FaxNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OriginalStoreName() As String
            Get
                Return Me.OriginalStoreNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OriginalStoreNameField, value) <> true) Then
                    Me.OriginalStoreNameField = value
                    Me.RaisePropertyChanged("OriginalStoreName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OtherInfo() As String
            Get
                Return Me.OtherInfoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OtherInfoField, value) <> true) Then
                    Me.OtherInfoField = value
                    Me.RaisePropertyChanged("OtherInfo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreDescription() As String
            Get
                Return Me.StoreDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreDescriptionField, value) <> true) Then
                    Me.StoreDescriptionField = value
                    Me.RaisePropertyChanged("StoreDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreId() As String
            Get
                Return Me.StoreIdField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIdField, value) <> true) Then
                    Me.StoreIdField = value
                    Me.RaisePropertyChanged("StoreId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreName() As String
            Get
                Return Me.StoreNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreNameField, value) <> true) Then
                    Me.StoreNameField = value
                    Me.RaisePropertyChanged("StoreName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TelephoneNo() As String
            Get
                Return Me.TelephoneNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TelephoneNoField, value) <> true) Then
                    Me.TelephoneNoField = value
                    Me.RaisePropertyChanged("TelephoneNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserRoles() As String
            Get
                Return Me.UserRolesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserRolesField, value) <> true) Then
                    Me.UserRolesField = value
                    Me.RaisePropertyChanged("UserRoles")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SupplierDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SupplierDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressBlockHouseNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressBuildingNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressFloorNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressPostalCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressStreetNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AddressUnitNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompanyNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ContactPersonField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FaxNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OriginalCompanyNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OtherInfoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIdField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SupplierIdField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TelephoneNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UENField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressBlockHouseNo() As String
            Get
                Return Me.AddressBlockHouseNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressBlockHouseNoField, value) <> true) Then
                    Me.AddressBlockHouseNoField = value
                    Me.RaisePropertyChanged("AddressBlockHouseNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressBuildingName() As String
            Get
                Return Me.AddressBuildingNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressBuildingNameField, value) <> true) Then
                    Me.AddressBuildingNameField = value
                    Me.RaisePropertyChanged("AddressBuildingName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressFloorNo() As String
            Get
                Return Me.AddressFloorNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressFloorNoField, value) <> true) Then
                    Me.AddressFloorNoField = value
                    Me.RaisePropertyChanged("AddressFloorNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressPostalCode() As String
            Get
                Return Me.AddressPostalCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressPostalCodeField, value) <> true) Then
                    Me.AddressPostalCodeField = value
                    Me.RaisePropertyChanged("AddressPostalCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressStreetName() As String
            Get
                Return Me.AddressStreetNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressStreetNameField, value) <> true) Then
                    Me.AddressStreetNameField = value
                    Me.RaisePropertyChanged("AddressStreetName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressType() As String
            Get
                Return Me.AddressTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressTypeField, value) <> true) Then
                    Me.AddressTypeField = value
                    Me.RaisePropertyChanged("AddressType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressUnitNo() As String
            Get
                Return Me.AddressUnitNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressUnitNoField, value) <> true) Then
                    Me.AddressUnitNoField = value
                    Me.RaisePropertyChanged("AddressUnitNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CompanyName() As String
            Get
                Return Me.CompanyNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyNameField, value) <> true) Then
                    Me.CompanyNameField = value
                    Me.RaisePropertyChanged("CompanyName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ContactPerson() As String
            Get
                Return Me.ContactPersonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ContactPersonField, value) <> true) Then
                    Me.ContactPersonField = value
                    Me.RaisePropertyChanged("ContactPerson")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FaxNo() As String
            Get
                Return Me.FaxNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FaxNoField, value) <> true) Then
                    Me.FaxNoField = value
                    Me.RaisePropertyChanged("FaxNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OriginalCompanyName() As String
            Get
                Return Me.OriginalCompanyNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OriginalCompanyNameField, value) <> true) Then
                    Me.OriginalCompanyNameField = value
                    Me.RaisePropertyChanged("OriginalCompanyName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OtherInfo() As String
            Get
                Return Me.OtherInfoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OtherInfoField, value) <> true) Then
                    Me.OtherInfoField = value
                    Me.RaisePropertyChanged("OtherInfo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreId() As String
            Get
                Return Me.StoreIdField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIdField, value) <> true) Then
                    Me.StoreIdField = value
                    Me.RaisePropertyChanged("StoreId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SupplierId() As String
            Get
                Return Me.SupplierIdField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SupplierIdField, value) <> true) Then
                    Me.SupplierIdField = value
                    Me.RaisePropertyChanged("SupplierId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TelephoneNo() As String
            Get
                Return Me.TelephoneNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TelephoneNoField, value) <> true) Then
                    Me.TelephoneNoField = value
                    Me.RaisePropertyChanged("TelephoneNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UEN() As String
            Get
                Return Me.UENField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UENField, value) <> true) Then
                    Me.UENField = value
                    Me.RaisePropertyChanged("UEN")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EquipmentDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class EquipmentDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EquipmentDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EquipmentIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EquipmentID_DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EquipmentTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EquipmentDescription() As String
            Get
                Return Me.EquipmentDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EquipmentDescriptionField, value) <> true) Then
                    Me.EquipmentDescriptionField = value
                    Me.RaisePropertyChanged("EquipmentDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EquipmentID() As String
            Get
                Return Me.EquipmentIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EquipmentIDField, value) <> true) Then
                    Me.EquipmentIDField = value
                    Me.RaisePropertyChanged("EquipmentID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EquipmentID_Description() As String
            Get
                Return Me.EquipmentID_DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EquipmentID_DescriptionField, value) <> true) Then
                    Me.EquipmentID_DescriptionField = value
                    Me.RaisePropertyChanged("EquipmentID_Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EquipmentType() As String
            Get
                Return Me.EquipmentTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EquipmentTypeField, value) <> true) Then
                    Me.EquipmentTypeField = value
                    Me.RaisePropertyChanged("EquipmentType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ItemDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ItemDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EquipmentIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemID_DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Location2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaxLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MinLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OpeningBalanceField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OpeningTotalValueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PartNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReorderLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransactionDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUCost() As Decimal
            Get
                Return Me.AUCostField
            End Get
            Set
                If (Me.AUCostField.Equals(value) <> true) Then
                    Me.AUCostField = value
                    Me.RaisePropertyChanged("AUCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EquipmentID() As String
            Get
                Return Me.EquipmentIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EquipmentIDField, value) <> true) Then
                    Me.EquipmentIDField = value
                    Me.RaisePropertyChanged("EquipmentID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemDescription() As String
            Get
                Return Me.ItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemDescriptionField, value) <> true) Then
                    Me.ItemDescriptionField = value
                    Me.RaisePropertyChanged("ItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemID() As String
            Get
                Return Me.ItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemIDField, value) <> true) Then
                    Me.ItemIDField = value
                    Me.RaisePropertyChanged("ItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemID_Description() As String
            Get
                Return Me.ItemID_DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemID_DescriptionField, value) <> true) Then
                    Me.ItemID_DescriptionField = value
                    Me.RaisePropertyChanged("ItemID_Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location() As String
            Get
                Return Me.LocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocationField, value) <> true) Then
                    Me.LocationField = value
                    Me.RaisePropertyChanged("Location")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location2() As String
            Get
                Return Me.Location2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Location2Field, value) <> true) Then
                    Me.Location2Field = value
                    Me.RaisePropertyChanged("Location2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaxLevel() As Decimal
            Get
                Return Me.MaxLevelField
            End Get
            Set
                If (Me.MaxLevelField.Equals(value) <> true) Then
                    Me.MaxLevelField = value
                    Me.RaisePropertyChanged("MaxLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MinLevel() As Decimal
            Get
                Return Me.MinLevelField
            End Get
            Set
                If (Me.MinLevelField.Equals(value) <> true) Then
                    Me.MinLevelField = value
                    Me.RaisePropertyChanged("MinLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OpeningBalance() As Decimal
            Get
                Return Me.OpeningBalanceField
            End Get
            Set
                If (Me.OpeningBalanceField.Equals(value) <> true) Then
                    Me.OpeningBalanceField = value
                    Me.RaisePropertyChanged("OpeningBalance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OpeningTotalValue() As Decimal
            Get
                Return Me.OpeningTotalValueField
            End Get
            Set
                If (Me.OpeningTotalValueField.Equals(value) <> true) Then
                    Me.OpeningTotalValueField = value
                    Me.RaisePropertyChanged("OpeningTotalValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PartNo() As String
            Get
                Return Me.PartNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PartNoField, value) <> true) Then
                    Me.PartNoField = value
                    Me.RaisePropertyChanged("PartNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReorderLevel() As Decimal
            Get
                Return Me.ReorderLevelField
            End Get
            Set
                If (Me.ReorderLevelField.Equals(value) <> true) Then
                    Me.ReorderLevelField = value
                    Me.RaisePropertyChanged("ReorderLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubType() As String
            Get
                Return Me.SubTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubTypeField, value) <> true) Then
                    Me.SubTypeField = value
                    Me.RaisePropertyChanged("SubType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransactionDate() As Date
            Get
                Return Me.TransactionDateField
            End Get
            Set
                If (Me.TransactionDateField.Equals(value) <> true) Then
                    Me.TransactionDateField = value
                    Me.RaisePropertyChanged("TransactionDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ConsumerDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ConsumerDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerID_DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerRefStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserRoleField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerDescription() As String
            Get
                Return Me.ConsumerDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerDescriptionField, value) <> true) Then
                    Me.ConsumerDescriptionField = value
                    Me.RaisePropertyChanged("ConsumerDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerID() As String
            Get
                Return Me.ConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerIDField, value) <> true) Then
                    Me.ConsumerIDField = value
                    Me.RaisePropertyChanged("ConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerID_Description() As String
            Get
                Return Me.ConsumerID_DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerID_DescriptionField, value) <> true) Then
                    Me.ConsumerID_DescriptionField = value
                    Me.RaisePropertyChanged("ConsumerID_Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerRefStatus() As String
            Get
                Return Me.ConsumerRefStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerRefStatusField, value) <> true) Then
                    Me.ConsumerRefStatusField = value
                    Me.RaisePropertyChanged("ConsumerRefStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerStatus() As String
            Get
                Return Me.ConsumerStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerStatusField, value) <> true) Then
                    Me.ConsumerStatusField = value
                    Me.RaisePropertyChanged("ConsumerStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserName() As String
            Get
                Return Me.UserNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserNameField, value) <> true) Then
                    Me.UserNameField = value
                    Me.RaisePropertyChanged("UserName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserRole() As String
            Get
                Return Me.UserRoleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserRoleField, value) <> true) Then
                    Me.UserRoleField = value
                    Me.RaisePropertyChanged("UserRole")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="WorksheetDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class WorksheetDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApproveDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApproverNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CheckDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CheckerNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EquipmentIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Location2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockCodeFromField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockCodeToField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalValueField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VerifierNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VerifyDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WorkSheetIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WorkSheetItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WorkSheetStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WorksheetGeneratedDateField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApproveDate() As Date
            Get
                Return Me.ApproveDateField
            End Get
            Set
                If (Me.ApproveDateField.Equals(value) <> true) Then
                    Me.ApproveDateField = value
                    Me.RaisePropertyChanged("ApproveDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApproverName() As String
            Get
                Return Me.ApproverNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ApproverNameField, value) <> true) Then
                    Me.ApproverNameField = value
                    Me.RaisePropertyChanged("ApproverName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CheckDate() As Date
            Get
                Return Me.CheckDateField
            End Get
            Set
                If (Me.CheckDateField.Equals(value) <> true) Then
                    Me.CheckDateField = value
                    Me.RaisePropertyChanged("CheckDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CheckerName() As String
            Get
                Return Me.CheckerNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CheckerNameField, value) <> true) Then
                    Me.CheckerNameField = value
                    Me.RaisePropertyChanged("CheckerName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EquipmentID() As String
            Get
                Return Me.EquipmentIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EquipmentIDField, value) <> true) Then
                    Me.EquipmentIDField = value
                    Me.RaisePropertyChanged("EquipmentID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemDescription() As String
            Get
                Return Me.ItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemDescriptionField, value) <> true) Then
                    Me.ItemDescriptionField = value
                    Me.RaisePropertyChanged("ItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemID() As String
            Get
                Return Me.ItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemIDField, value) <> true) Then
                    Me.ItemIDField = value
                    Me.RaisePropertyChanged("ItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location() As String
            Get
                Return Me.LocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocationField, value) <> true) Then
                    Me.LocationField = value
                    Me.RaisePropertyChanged("Location")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location2() As String
            Get
                Return Me.Location2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Location2Field, value) <> true) Then
                    Me.Location2Field = value
                    Me.RaisePropertyChanged("Location2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockCodeFrom() As String
            Get
                Return Me.StockCodeFromField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockCodeFromField, value) <> true) Then
                    Me.StockCodeFromField = value
                    Me.RaisePropertyChanged("StockCodeFrom")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockCodeTo() As String
            Get
                Return Me.StockCodeToField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockCodeToField, value) <> true) Then
                    Me.StockCodeToField = value
                    Me.RaisePropertyChanged("StockCodeTo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockQty() As Decimal
            Get
                Return Me.StockQtyField
            End Get
            Set
                If (Me.StockQtyField.Equals(value) <> true) Then
                    Me.StockQtyField = value
                    Me.RaisePropertyChanged("StockQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockTypeDescription() As String
            Get
                Return Me.StockTypeDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeDescriptionField, value) <> true) Then
                    Me.StockTypeDescriptionField = value
                    Me.RaisePropertyChanged("StockTypeDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubType() As String
            Get
                Return Me.SubTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubTypeField, value) <> true) Then
                    Me.SubTypeField = value
                    Me.RaisePropertyChanged("SubType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalValue() As Decimal
            Get
                Return Me.TotalValueField
            End Get
            Set
                If (Me.TotalValueField.Equals(value) <> true) Then
                    Me.TotalValueField = value
                    Me.RaisePropertyChanged("TotalValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VerifierName() As String
            Get
                Return Me.VerifierNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.VerifierNameField, value) <> true) Then
                    Me.VerifierNameField = value
                    Me.RaisePropertyChanged("VerifierName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VerifyDate() As Date
            Get
                Return Me.VerifyDateField
            End Get
            Set
                If (Me.VerifyDateField.Equals(value) <> true) Then
                    Me.VerifyDateField = value
                    Me.RaisePropertyChanged("VerifyDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WorkSheetID() As Integer
            Get
                Return Me.WorkSheetIDField
            End Get
            Set
                If (Me.WorkSheetIDField.Equals(value) <> true) Then
                    Me.WorkSheetIDField = value
                    Me.RaisePropertyChanged("WorkSheetID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WorkSheetItemID() As String
            Get
                Return Me.WorkSheetItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WorkSheetItemIDField, value) <> true) Then
                    Me.WorkSheetItemIDField = value
                    Me.RaisePropertyChanged("WorkSheetItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WorkSheetStatus() As String
            Get
                Return Me.WorkSheetStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WorkSheetStatusField, value) <> true) Then
                    Me.WorkSheetStatusField = value
                    Me.RaisePropertyChanged("WorkSheetStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WorksheetGeneratedDate() As String
            Get
                Return Me.WorksheetGeneratedDateField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WorksheetGeneratedDateField, value) <> true) Then
                    Me.WorksheetGeneratedDateField = value
                    Me.RaisePropertyChanged("WorksheetGeneratedDate")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MoreItemInfoDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MoreItemInfoDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AvgUnitCostField As Single
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BalanceField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaxLevelField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OnOrderCountField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OnOrderQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalValueField As Single
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AvgUnitCost() As Single
            Get
                Return Me.AvgUnitCostField
            End Get
            Set
                If (Me.AvgUnitCostField.Equals(value) <> true) Then
                    Me.AvgUnitCostField = value
                    Me.RaisePropertyChanged("AvgUnitCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Balance() As Decimal
            Get
                Return Me.BalanceField
            End Get
            Set
                If (Me.BalanceField.Equals(value) <> true) Then
                    Me.BalanceField = value
                    Me.RaisePropertyChanged("Balance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemID() As String
            Get
                Return Me.ItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemIDField, value) <> true) Then
                    Me.ItemIDField = value
                    Me.RaisePropertyChanged("ItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaxLevel() As Decimal
            Get
                Return Me.MaxLevelField
            End Get
            Set
                If (Me.MaxLevelField.Equals(value) <> true) Then
                    Me.MaxLevelField = value
                    Me.RaisePropertyChanged("MaxLevel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OnOrderCount() As Integer
            Get
                Return Me.OnOrderCountField
            End Get
            Set
                If (Me.OnOrderCountField.Equals(value) <> true) Then
                    Me.OnOrderCountField = value
                    Me.RaisePropertyChanged("OnOrderCount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OnOrderQty() As Decimal
            Get
                Return Me.OnOrderQtyField
            End Get
            Set
                If (Me.OnOrderQtyField.Equals(value) <> true) Then
                    Me.OnOrderQtyField = value
                    Me.RaisePropertyChanged("OnOrderQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalValue() As Single
            Get
                Return Me.TotalValueField
            End Get
            Set
                If (Me.TotalValueField.Equals(value) <> true) Then
                    Me.TotalValueField = value
                    Me.RaisePropertyChanged("TotalValue")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Service.ModuleName", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
    Public Enum ServiceModuleName As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Receive = 202
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Request = 203
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        DirectIssue = 204
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AdjustIn = 301
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AdjustOut = 302
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OrderDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class OrderDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private GebizPONoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SupplierIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Dte() As Date
            Get
                Return Me.DteField
            End Get
            Set
                If (Me.DteField.Equals(value) <> true) Then
                    Me.DteField = value
                    Me.RaisePropertyChanged("Dte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property GebizPONo() As String
            Get
                Return Me.GebizPONoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.GebizPONoField, value) <> true) Then
                    Me.GebizPONoField = value
                    Me.RaisePropertyChanged("GebizPONo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Mode() As String
            Get
                Return Me.ModeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModeField, value) <> true) Then
                    Me.ModeField = value
                    Me.RaisePropertyChanged("Mode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderID() As String
            Get
                Return Me.OrderIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OrderIDField, value) <> true) Then
                    Me.OrderIDField = value
                    Me.RaisePropertyChanged("OrderID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SupplierID() As String
            Get
                Return Me.SupplierIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SupplierIDField, value) <> true) Then
                    Me.SupplierIDField = value
                    Me.RaisePropertyChanged("SupplierID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Type() As String
            Get
                Return Me.TypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TypeField, value) <> true) Then
                    Me.TypeField = value
                    Me.RaisePropertyChanged("Type")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OrderItemDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class OrderItemDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExpectedDeliveryDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderItemIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReceiveItemQtyReceivedField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WarrantyDteField As Date
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExpectedDeliveryDte() As Date
            Get
                Return Me.ExpectedDeliveryDteField
            End Get
            Set
                If (Me.ExpectedDeliveryDteField.Equals(value) <> true) Then
                    Me.ExpectedDeliveryDteField = value
                    Me.RaisePropertyChanged("ExpectedDeliveryDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Mode() As String
            Get
                Return Me.ModeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModeField, value) <> true) Then
                    Me.ModeField = value
                    Me.RaisePropertyChanged("Mode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderItemID() As Integer
            Get
                Return Me.OrderItemIDField
            End Get
            Set
                If (Me.OrderItemIDField.Equals(value) <> true) Then
                    Me.OrderItemIDField = value
                    Me.RaisePropertyChanged("OrderItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Qty() As Decimal
            Get
                Return Me.QtyField
            End Get
            Set
                If (Me.QtyField.Equals(value) <> true) Then
                    Me.QtyField = value
                    Me.RaisePropertyChanged("Qty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReceiveItemQtyReceived() As Decimal
            Get
                Return Me.ReceiveItemQtyReceivedField
            End Get
            Set
                If (Me.ReceiveItemQtyReceivedField.Equals(value) <> true) Then
                    Me.ReceiveItemQtyReceivedField = value
                    Me.RaisePropertyChanged("ReceiveItemQtyReceived")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WarrantyDte() As Date
            Get
                Return Me.WarrantyDteField
            End Get
            Set
                If (Me.WarrantyDteField.Equals(value) <> true) Then
                    Me.WarrantyDteField = value
                    Me.RaisePropertyChanged("WarrantyDte")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OrderList", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class OrderList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastReceiveDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastReceiveQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderDteField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OrderQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SupplierIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalReceiveQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastReceiveDte() As Date
            Get
                Return Me.LastReceiveDteField
            End Get
            Set
                If (Me.LastReceiveDteField.Equals(value) <> true) Then
                    Me.LastReceiveDteField = value
                    Me.RaisePropertyChanged("LastReceiveDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastReceiveQty() As Decimal
            Get
                Return Me.LastReceiveQtyField
            End Get
            Set
                If (Me.LastReceiveQtyField.Equals(value) <> true) Then
                    Me.LastReceiveQtyField = value
                    Me.RaisePropertyChanged("LastReceiveQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDte() As Date
            Get
                Return Me.OrderDteField
            End Get
            Set
                If (Me.OrderDteField.Equals(value) <> true) Then
                    Me.OrderDteField = value
                    Me.RaisePropertyChanged("OrderDte")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderID() As String
            Get
                Return Me.OrderIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OrderIDField, value) <> true) Then
                    Me.OrderIDField = value
                    Me.RaisePropertyChanged("OrderID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderQty() As Decimal
            Get
                Return Me.OrderQtyField
            End Get
            Set
                If (Me.OrderQtyField.Equals(value) <> true) Then
                    Me.OrderQtyField = value
                    Me.RaisePropertyChanged("OrderQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockItemID() As String
            Get
                Return Me.StockItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockItemIDField, value) <> true) Then
                    Me.StockItemIDField = value
                    Me.RaisePropertyChanged("StockItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SupplierID() As String
            Get
                Return Me.SupplierIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SupplierIDField, value) <> true) Then
                    Me.SupplierIDField = value
                    Me.RaisePropertyChanged("SupplierID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Double
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalReceiveQty() As Decimal
            Get
                Return Me.TotalReceiveQtyField
            End Get
            Set
                If (Me.TotalReceiveQtyField.Equals(value) <> true) Then
                    Me.TotalReceiveQtyField = value
                    Me.RaisePropertyChanged("TotalReceiveQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DirectIssueDetails", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DirectIssueDetails
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConsumerIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DirectIssueDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DirectIssueIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DocumentNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IssueTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemDescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemQtyField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LoginUserField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ModeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RemarksField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SerialNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StockTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StoreIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalCostField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UOMField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConsumerID() As String
            Get
                Return Me.ConsumerIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConsumerIDField, value) <> true) Then
                    Me.ConsumerIDField = value
                    Me.RaisePropertyChanged("ConsumerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DirectIssueDate() As Date
            Get
                Return Me.DirectIssueDateField
            End Get
            Set
                If (Me.DirectIssueDateField.Equals(value) <> true) Then
                    Me.DirectIssueDateField = value
                    Me.RaisePropertyChanged("DirectIssueDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DirectIssueID() As Integer
            Get
                Return Me.DirectIssueIDField
            End Get
            Set
                If (Me.DirectIssueIDField.Equals(value) <> true) Then
                    Me.DirectIssueIDField = value
                    Me.RaisePropertyChanged("DirectIssueID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DocumentNo() As String
            Get
                Return Me.DocumentNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DocumentNoField, value) <> true) Then
                    Me.DocumentNoField = value
                    Me.RaisePropertyChanged("DocumentNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IssueType() As String
            Get
                Return Me.IssueTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IssueTypeField, value) <> true) Then
                    Me.IssueTypeField = value
                    Me.RaisePropertyChanged("IssueType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemDescription() As String
            Get
                Return Me.ItemDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemDescriptionField, value) <> true) Then
                    Me.ItemDescriptionField = value
                    Me.RaisePropertyChanged("ItemDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemID() As String
            Get
                Return Me.ItemIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemIDField, value) <> true) Then
                    Me.ItemIDField = value
                    Me.RaisePropertyChanged("ItemID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ItemQty() As Decimal
            Get
                Return Me.ItemQtyField
            End Get
            Set
                If (Me.ItemQtyField.Equals(value) <> true) Then
                    Me.ItemQtyField = value
                    Me.RaisePropertyChanged("ItemQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LoginUser() As String
            Get
                Return Me.LoginUserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LoginUserField, value) <> true) Then
                    Me.LoginUserField = value
                    Me.RaisePropertyChanged("LoginUser")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Mode() As String
            Get
                Return Me.ModeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ModeField, value) <> true) Then
                    Me.ModeField = value
                    Me.RaisePropertyChanged("Mode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Remarks() As String
            Get
                Return Me.RemarksField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RemarksField, value) <> true) Then
                    Me.RemarksField = value
                    Me.RaisePropertyChanged("Remarks")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SerialNo() As String
            Get
                Return Me.SerialNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SerialNoField, value) <> true) Then
                    Me.SerialNoField = value
                    Me.RaisePropertyChanged("SerialNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StockType() As String
            Get
                Return Me.StockTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StockTypeField, value) <> true) Then
                    Me.StockTypeField = value
                    Me.RaisePropertyChanged("StockType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StoreID() As String
            Get
                Return Me.StoreIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StoreIDField, value) <> true) Then
                    Me.StoreIDField = value
                    Me.RaisePropertyChanged("StoreID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalCost() As Decimal
            Get
                Return Me.TotalCostField
            End Get
            Set
                If (Me.TotalCostField.Equals(value) <> true) Then
                    Me.TotalCostField = value
                    Me.RaisePropertyChanged("TotalCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UOM() As String
            Get
                Return Me.UOMField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UOMField, value) <> true) Then
                    Me.UOMField = value
                    Me.RaisePropertyChanged("UOM")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="NEA_ICS.WcfService.IService")>  _
    Public Interface IService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateReceiveItem", ReplyAction:="http://tempuri.org/IService/UpdateReceiveItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateReceiveItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateReceiveItem(ByVal storeID As String, ByVal type As String, ByVal dte As Date, ByVal loginUser As String, ByVal receiveDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateReceiveItem", ReplyAction:="http://tempuri.org/IService/UpdateReceiveItemResponse")>  _
        Function UpdateReceiveItemAsync(ByVal storeID As String, ByVal type As String, ByVal dte As Date, ByVal loginUser As String, ByVal receiveDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetReceiveList", ReplyAction:="http://tempuri.org/IService/GetReceiveListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetReceiveListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetReceiveList(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetReceiveList", ReplyAction:="http://tempuri.org/IService/GetReceiveListResponse")>  _
        Function GetReceiveListAsync(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveList))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddRequest", ReplyAction:="http://tempuri.org/IService/AddRequestResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddRequestServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddRequest(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddRequest", ReplyAction:="http://tempuri.org/IService/AddRequestResponse")>  _
        Function AddRequestAsync(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRequest", ReplyAction:="http://tempuri.org/IService/GetRequestResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetRequestServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetRequest(ByVal storeID As String, ByVal status As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRequest", ReplyAction:="http://tempuri.org/IService/GetRequestResponse")>  _
        Function GetRequestAsync(ByVal storeID As String, ByVal status As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRequestBySearch", ReplyAction:="http://tempuri.org/IService/GetRequestBySearchResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetRequestBySearchServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetRequestBySearch(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRequestBySearch", ReplyAction:="http://tempuri.org/IService/GetRequestBySearchResponse")>  _
        Function GetRequestBySearchAsync(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRequestItem", ReplyAction:="http://tempuri.org/IService/GetRequestItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetRequestItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetRequestItem(ByVal storeId As String, ByVal requestId As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRequestItem", ReplyAction:="http://tempuri.org/IService/GetRequestItemResponse")>  _
        Function GetRequestItemAsync(ByVal storeId As String, ByVal requestId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateRequest", ReplyAction:="http://tempuri.org/IService/UpdateRequestResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateRequestServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateRequest(ByVal storeID As String, ByVal requestID As String, ByVal loginUser As String, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateRequest", ReplyAction:="http://tempuri.org/IService/UpdateRequestResponse")>  _
        Function UpdateRequestAsync(ByVal storeID As String, ByVal requestID As String, ByVal loginUser As String, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteRequest", ReplyAction:="http://tempuri.org/IService/DeleteRequestResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/DeleteRequestServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function DeleteRequest(ByVal storeId As String, ByVal requestId As String, ByVal status As String, ByVal loginUser As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteRequest", ReplyAction:="http://tempuri.org/IService/DeleteRequestResponse")>  _
        Function DeleteRequestAsync(ByVal storeId As String, ByVal requestId As String, ByVal status As String, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateRequestStatus", ReplyAction:="http://tempuri.org/IService/UpdateRequestStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateRequestStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateRequestStatus(ByVal storeID As String, ByVal requestID As String, ByVal status As String, ByVal loginUser As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateRequestStatus", ReplyAction:="http://tempuri.org/IService/UpdateRequestStatusResponse")>  _
        Function UpdateRequestStatusAsync(ByVal storeID As String, ByVal requestID As String, ByVal status As String, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateAdjustStatus", ReplyAction:="http://tempuri.org/IService/UpdateAdjustStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateAdjustStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateAdjustStatus(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal status As String, ByVal loginUser As String, ByVal returnBy As String, ByVal returnDte As Date, ByVal approveBy As String, ByVal approveDte As Date, ByVal receiveBy As String, ByVal receiveDte As Date) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateAdjustStatus", ReplyAction:="http://tempuri.org/IService/UpdateAdjustStatusResponse")>  _
        Function UpdateAdjustStatusAsync(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal status As String, ByVal loginUser As String, ByVal returnBy As String, ByVal returnDte As Date, ByVal approveBy As String, ByVal approveDte As Date, ByVal receiveBy As String, ByVal receiveDte As Date) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateIssueItem", ReplyAction:="http://tempuri.org/IService/UpdateIssueItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateIssueItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateIssueItem(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal issueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateIssueItem", ReplyAction:="http://tempuri.org/IService/UpdateIssueItemResponse")>  _
        Function UpdateIssueItemAsync(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal issueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetIssueList", ReplyAction:="http://tempuri.org/IService/GetIssueListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetIssueListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetIssueList(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal requestID As String, ByVal consumerID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetIssueList", ReplyAction:="http://tempuri.org/IService/GetIssueListResponse")>  _
        Function GetIssueListAsync(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal requestID As String, ByVal consumerID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueList))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddAdjust", ReplyAction:="http://tempuri.org/IService/AddAdjustResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddAdjustServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddAdjust(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddAdjust", ReplyAction:="http://tempuri.org/IService/AddAdjustResponse")>  _
        Function AddAdjustAsync(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjust", ReplyAction:="http://tempuri.org/IService/GetAdjustResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAdjustServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAdjust(ByVal storeID As String, ByVal type As String, ByVal status As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjust", ReplyAction:="http://tempuri.org/IService/GetAdjustResponse")>  _
        Function GetAdjustAsync(ByVal storeID As String, ByVal type As String, ByVal status As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjustItem", ReplyAction:="http://tempuri.org/IService/GetAdjustItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAdjustItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAdjustItem(ByVal storeID As String, ByVal adjustID As String, ByVal type As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjustItem", ReplyAction:="http://tempuri.org/IService/GetAdjustItemResponse")>  _
        Function GetAdjustItemAsync(ByVal storeID As String, ByVal adjustID As String, ByVal type As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjustBySearch", ReplyAction:="http://tempuri.org/IService/GetAdjustBySearchResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAdjustBySearchServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAdjustBySearch(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjustBySearch", ReplyAction:="http://tempuri.org/IService/GetAdjustBySearchResponse")>  _
        Function GetAdjustBySearchAsync(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateAdjust", ReplyAction:="http://tempuri.org/IService/UpdateAdjustResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateAdjustServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateAdjust(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateAdjust", ReplyAction:="http://tempuri.org/IService/UpdateAdjustResponse")>  _
        Function UpdateAdjustAsync(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteAdjust", ReplyAction:="http://tempuri.org/IService/DeleteAdjustResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/DeleteAdjustServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function DeleteAdjust(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal originalDte As Date, ByVal loginUser As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteAdjust", ReplyAction:="http://tempuri.org/IService/DeleteAdjustResponse")>  _
        Function DeleteAdjustAsync(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal originalDte As Date, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjustList", ReplyAction:="http://tempuri.org/IService/GetAdjustListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAdjustListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAdjustList(ByVal storeID As String, ByVal type As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal adjustID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdjustList", ReplyAction:="http://tempuri.org/IService/GetAdjustListResponse")>  _
        Function GetAdjustListAsync(ByVal storeID As String, ByVal type As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal adjustID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustList))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailStockItem", ReplyAction:="http://tempuri.org/IService/GetAuditTrailStockItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailStockItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailStockItem(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal itemStatus As Boolean, ByVal orderBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailStockItem", ReplyAction:="http://tempuri.org/IService/GetAuditTrailStockItemResponse")>  _
        Function GetAuditTrailStockItemAsync(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal itemStatus As Boolean, ByVal orderBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailOrder", ReplyAction:="http://tempuri.org/IService/GetAuditTrailOrderResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailOrderServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailOrder(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal orderBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AOrderDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailOrder", ReplyAction:="http://tempuri.org/IService/GetAuditTrailOrderResponse")>  _
        Function GetAuditTrailOrderAsync(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal orderBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AOrderDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailStockTransaction", ReplyAction:="http://tempuri.org/IService/GetAuditTrailStockTransactionResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailStockTransactionServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailStockTransaction(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal transType As String, ByVal orderBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockTransactionDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailStockTransaction", ReplyAction:="http://tempuri.org/IService/GetAuditTrailStockTransactionResponse")>  _
        Function GetAuditTrailStockTransactionAsync(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal transType As String, ByVal orderBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockTransactionDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailResidue", ReplyAction:="http://tempuri.org/IService/GetAuditTrailResidueResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailResidueServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailResidue(ByVal storeID As String, ByVal month As Integer, ByVal year As Integer) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AResidueDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailResidue", ReplyAction:="http://tempuri.org/IService/GetAuditTrailResidueResponse")>  _
        Function GetAuditTrailResidueAsync(ByVal storeID As String, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AResidueDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailACommon", ReplyAction:="http://tempuri.org/IService/GetAuditTrailACommonResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailACommonServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailACommon(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ACommon)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailACommon", ReplyAction:="http://tempuri.org/IService/GetAuditTrailACommonResponse")>  _
        Function GetAuditTrailACommonAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ACommon))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAConsumer", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAConsumerResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailAConsumerServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailAConsumer(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AConsumer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAConsumer", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAConsumerResponse")>  _
        Function GetAuditTrailAConsumerAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AConsumer))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAEquipment", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAEquipmentResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailAEquipmentServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailAEquipment(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AEquipment)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAEquipment", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAEquipmentResponse")>  _
        Function GetAuditTrailAEquipmentAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AEquipment))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAStore", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAStoreResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailAStoreServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailAStore(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AStore)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAStore", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAStoreResponse")>  _
        Function GetAuditTrailAStoreAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AStore))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailASupplier", ReplyAction:="http://tempuri.org/IService/GetAuditTrailASupplierResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailASupplierServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailASupplier(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ASupplier)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailASupplier", ReplyAction:="http://tempuri.org/IService/GetAuditTrailASupplierResponse")>  _
        Function GetAuditTrailASupplierAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ASupplier))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAUserRole", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAUserRoleResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAuditTrailAUserRoleServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAuditTrailAUserRole(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AUserRole)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAuditTrailAUserRole", ReplyAction:="http://tempuri.org/IService/GetAuditTrailAUserRoleResponse")>  _
        Function GetAuditTrailAUserRoleAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AUserRole))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRackItemBalance", ReplyAction:="http://tempuri.org/IService/GetRackItemBalanceResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetRackItemBalanceServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetRackItemBalance(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RackItemBalanceDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRackItemBalance", ReplyAction:="http://tempuri.org/IService/GetRackItemBalanceResponse")>  _
        Function GetRackItemBalanceAsync(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RackItemBalanceDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStockCode", ReplyAction:="http://tempuri.org/IService/GetStockCodeResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetStockCodeServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetStockCode(ByVal storeId As String) As System.Collections.Generic.List(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStockCode", ReplyAction:="http://tempuri.org/IService/GetStockCodeResponse")>  _
        Function GetStockCodeAsync(ByVal storeId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRackLocation", ReplyAction:="http://tempuri.org/IService/GetRackLocationResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetRackLocationServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetRackLocation(ByVal storeId As String) As System.Collections.Generic.List(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetRackLocation", ReplyAction:="http://tempuri.org/IService/GetRackLocationResponse")>  _
        Function GetRackLocationAsync(ByVal storeId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetTransactionList", ReplyAction:="http://tempuri.org/IService/GetTransactionListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetTransactionListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetTransactionList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.TransactionListDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetTransactionList", ReplyAction:="http://tempuri.org/IService/GetTransactionListResponse")>  _
        Function GetTransactionListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.TransactionListDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR001GetRackItemBalance", ReplyAction:="http://tempuri.org/IService/GetMR001GetRackItemBalanceResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR001GetRackItemBalanceServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR001GetRackItemBalance(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR001GetRackItemBalanceDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR001GetRackItemBalance", ReplyAction:="http://tempuri.org/IService/GetMR001GetRackItemBalanceResponse")>  _
        Function GetMR001GetRackItemBalanceAsync(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR001GetRackItemBalanceDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR002GetTransactionList", ReplyAction:="http://tempuri.org/IService/GetMR002GetTransactionListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR002GetTransactionListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR002GetTransactionList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String, ByVal equipmentID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR002GetTransactionListDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR002GetTransactionList", ReplyAction:="http://tempuri.org/IService/GetMR002GetTransactionListResponse")>  _
        Function GetMR002GetTransactionListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String, ByVal equipmentID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR002GetTransactionListDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR003IssueDocumentDetails", ReplyAction:="http://tempuri.org/IService/GetMR003IssueDocumentDetailsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR003IssueDocumentDetailsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR003IssueDocumentDetails(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR003IssueDocumentDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR003IssueDocumentDetails", ReplyAction:="http://tempuri.org/IService/GetMR003IssueDocumentDetailsResponse")>  _
        Function GetMR003IssueDocumentDetailsAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR003IssueDocumentDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR004StockReviewList", ReplyAction:="http://tempuri.org/IService/GetMR004StockReviewListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR004StockReviewListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR004StockReviewList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR004StockReviewListDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR004StockReviewList", ReplyAction:="http://tempuri.org/IService/GetMR004StockReviewListResponse")>  _
        Function GetMR004StockReviewListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR004StockReviewListDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR005StockReturn", ReplyAction:="http://tempuri.org/IService/GetMR005StockReturnResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR005StockReturnServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR005StockReturn(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR005StockReturnDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR005StockReturn", ReplyAction:="http://tempuri.org/IService/GetMR005StockReturnResponse")>  _
        Function GetMR005StockReturnAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR005StockReturnDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListAdjust", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListAdjustResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListAdjustServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR006StockReturnCheckListAdjust(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListAdjustDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListAdjust", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListAdjustResponse")>  _
        Function GetMR006StockReturnCheckListAdjustAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListAdjustDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListIssue", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListIssueResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListIssueServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR006StockReturnCheckListIssue(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListIssueDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListIssue", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListIssueResponse")>  _
        Function GetMR006StockReturnCheckListIssueAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListIssueDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListReceive", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListReceiveResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListReceiveServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR006StockReturnCheckListReceive(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListReceiveDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListReceive", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListReceiveResponse")>  _
        Function GetMR006StockReturnCheckListReceiveAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListReceiveDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListStockItem", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListStockItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListStockItemServiceFaultFaul"& _ 
            "t", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR006StockReturnCheckListStockItem(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal excludeZero As Boolean) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListStockItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR006StockReturnCheckListStockItem", ReplyAction:="http://tempuri.org/IService/GetMR006StockReturnCheckListStockItemResponse")>  _
        Function GetMR006StockReturnCheckListStockItemAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal excludeZero As Boolean) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListStockItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR007PeriodIssues", ReplyAction:="http://tempuri.org/IService/GetMR007PeriodIssuesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR007PeriodIssuesServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR007PeriodIssues(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal consumerID As String, ByVal directIssue As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR007PeriodIssuesDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR007PeriodIssues", ReplyAction:="http://tempuri.org/IService/GetMR007PeriodIssuesResponse")>  _
        Function GetMR007PeriodIssuesAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal consumerID As String, ByVal directIssue As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR007PeriodIssuesDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR008QuantityIssueSummary", ReplyAction:="http://tempuri.org/IService/GetMR008QuantityIssueSummaryResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR008QuantityIssueSummaryServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR008QuantityIssueSummary(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR008QuantityIssueSummaryDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR008QuantityIssueSummary", ReplyAction:="http://tempuri.org/IService/GetMR008QuantityIssueSummaryResponse")>  _
        Function GetMR008QuantityIssueSummaryAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR008QuantityIssueSummaryDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR009ReorderStockItemList", ReplyAction:="http://tempuri.org/IService/GetMR009ReorderStockItemListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR009ReorderStockItemListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR009ReorderStockItemList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR009ReorderStockItemListDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR009ReorderStockItemList", ReplyAction:="http://tempuri.org/IService/GetMR009ReorderStockItemListResponse")>  _
        Function GetMR009ReorderStockItemListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR009ReorderStockItemListDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR010StockAdjustmentEntries", ReplyAction:="http://tempuri.org/IService/GetMR010StockAdjustmentEntriesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMR010StockAdjustmentEntriesServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMR010StockAdjustmentEntries(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR010StockAdjustmentEntriesDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMR010StockAdjustmentEntries", ReplyAction:="http://tempuri.org/IService/GetMR010StockAdjustmentEntriesResponse")>  _
        Function GetMR010StockAdjustmentEntriesAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR010StockAdjustmentEntriesDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdHocReport", ReplyAction:="http://tempuri.org/IService/GetAdHocReportResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetAdHocReportServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetAdHocReport(ByVal request As NEA_ICS.WcfService.GetAdHocReportRequest) As NEA_ICS.WcfService.GetAdHocReportResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAdHocReport", ReplyAction:="http://tempuri.org/IService/GetAdHocReportResponse")>  _
        Function GetAdHocReportAsync(ByVal request As NEA_ICS.WcfService.GetAdHocReportRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.GetAdHocReportResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddEmailContent", ReplyAction:="http://tempuri.org/IService/AddEmailContentResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddEmailContentServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddEmailContent(ByVal emailContent As NEA_ICS.WcfService.EmailContent) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddEmailContent", ReplyAction:="http://tempuri.org/IService/AddEmailContentResponse")>  _
        Function AddEmailContentAsync(ByVal emailContent As NEA_ICS.WcfService.EmailContent) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetEmailContent", ReplyAction:="http://tempuri.org/IService/GetEmailContentResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetEmailContentServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetEmailContent(ByVal storeID As String, ByVal emailFormat As String) As System.Collections.Generic.List(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetEmailContent", ReplyAction:="http://tempuri.org/IService/GetEmailContentResponse")>  _
        Function GetEmailContentAsync(ByVal storeID As String, ByVal emailFormat As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetCommon", ReplyAction:="http://tempuri.org/IService/GetCommonResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetCommonServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetCommon", ReplyAction:="http://tempuri.org/IService/GetCommonResponse")>  _
        Function GetCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDistinctCommon", ReplyAction:="http://tempuri.org/IService/GetDistinctCommonResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetDistinctCommonServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetDistinctCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDistinctCommon", ReplyAction:="http://tempuri.org/IService/GetDistinctCommonResponse")>  _
        Function GetDistinctCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddCommon", ReplyAction:="http://tempuri.org/IService/AddCommonResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddCommonServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddCommon", ReplyAction:="http://tempuri.org/IService/AddCommonResponse")>  _
        Function AddCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateCommon", ReplyAction:="http://tempuri.org/IService/UpdateCommonResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateCommonServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateCommon", ReplyAction:="http://tempuri.org/IService/UpdateCommonResponse")>  _
        Function UpdateCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStoreAccess", ReplyAction:="http://tempuri.org/IService/GetStoreAccessResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetStoreAccessServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetStoreAccess(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStoreAccess", ReplyAction:="http://tempuri.org/IService/GetStoreAccessResponse")>  _
        Function GetStoreAccessAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserProfile", ReplyAction:="http://tempuri.org/IService/GetUserProfileResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserProfileServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserProfile(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserProfile", ReplyAction:="http://tempuri.org/IService/GetUserProfileResponse")>  _
        Function GetUserProfileAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserStoreCodes", ReplyAction:="http://tempuri.org/IService/GetUserStoreCodesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserStoreCodesServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserStoreCodes(ByVal userId As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserStoreCodes", ReplyAction:="http://tempuri.org/IService/GetUserStoreCodesResponse")>  _
        Function GetUserStoreCodesAsync(ByVal userId As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserLogins", ReplyAction:="http://tempuri.org/IService/GetUserLoginsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserLoginsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserLogins(ByVal userID As String, ByVal sessionId As String, ByVal checkIfLogout As Boolean) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserLogins", ReplyAction:="http://tempuri.org/IService/GetUserLoginsResponse")>  _
        Function GetUserLoginsAsync(ByVal userID As String, ByVal sessionId As String, ByVal checkIfLogout As Boolean) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/CheckUserIdExist", ReplyAction:="http://tempuri.org/IService/CheckUserIdExistResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/CheckUserIdExistServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function CheckUserIdExist(ByVal userID As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/CheckUserIdExist", ReplyAction:="http://tempuri.org/IService/CheckUserIdExistResponse")>  _
        Function CheckUserIdExistAsync(ByVal userID As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRoleStatus", ReplyAction:="http://tempuri.org/IService/GetUserRoleStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserRoleStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserRoleStatus(ByVal storeID As String, ByVal userID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRoleStatus", ReplyAction:="http://tempuri.org/IService/GetUserRoleStatusResponse")>  _
        Function GetUserRoleStatusAsync(ByVal storeID As String, ByVal userID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserActivityList", ReplyAction:="http://tempuri.org/IService/GetUserActivityListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserActivityListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserActivityList(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal byTimeStamp As Boolean, ByVal filterBy As String, ByVal sortBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserActivityList", ReplyAction:="http://tempuri.org/IService/GetUserActivityListResponse")>  _
        Function GetUserActivityListAsync(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal byTimeStamp As Boolean, ByVal filterBy As String, ByVal sortBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserUnsuccessfulLoginList", ReplyAction:="http://tempuri.org/IService/GetUserUnsuccessfulLoginListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserUnsuccessfulLoginListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserUnsuccessfulLoginList(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserUnsuccessfulLoginList", ReplyAction:="http://tempuri.org/IService/GetUserUnsuccessfulLoginListResponse")>  _
        Function GetUserUnsuccessfulLoginListAsync(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetNewUserAccountList", ReplyAction:="http://tempuri.org/IService/GetNewUserAccountListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetNewUserAccountListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetNewUserAccountList(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetNewUserAccountList", ReplyAction:="http://tempuri.org/IService/GetNewUserAccountListResponse")>  _
        Function GetNewUserAccountListAsync(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetNonIcsUserUnsuccessfulLogin", ReplyAction:="http://tempuri.org/IService/GetNonIcsUserUnsuccessfulLoginResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetNonIcsUserUnsuccessfulLoginServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetNonIcsUserUnsuccessfulLogin(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetNonIcsUserUnsuccessfulLogin", ReplyAction:="http://tempuri.org/IService/GetNonIcsUserUnsuccessfulLoginResponse")>  _
        Function GetNonIcsUserUnsuccessfulLoginAsync(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetInactiveUsers", ReplyAction:="http://tempuri.org/IService/GetInactiveUsersResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetInactiveUsersServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetInactiveUsers(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetInactiveUsers", ReplyAction:="http://tempuri.org/IService/GetInactiveUsersResponse")>  _
        Function GetInactiveUsersAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddUserAudit", ReplyAction:="http://tempuri.org/IService/AddUserAuditResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddUserAuditServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddUserAudit(ByVal storeId As String, ByVal userId As String, ByVal userIP As String, ByVal sessionID As String, ByVal isNonIcsUser As Boolean, ByVal isInactiveUser As Boolean, ByVal isUnsuccessfulLogin As Boolean) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddUserAudit", ReplyAction:="http://tempuri.org/IService/AddUserAuditResponse")>  _
        Function AddUserAuditAsync(ByVal storeId As String, ByVal userId As String, ByVal userIP As String, ByVal sessionID As String, ByVal isNonIcsUser As Boolean, ByVal isInactiveUser As Boolean, ByVal isUnsuccessfulLogin As Boolean) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateUserAudit", ReplyAction:="http://tempuri.org/IService/UpdateUserAuditResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateUserAuditServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateUserAudit(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sessionId As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateUserAudit", ReplyAction:="http://tempuri.org/IService/UpdateUserAuditResponse")>  _
        Function UpdateUserAuditAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sessionId As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/ManageInactiveUser", ReplyAction:="http://tempuri.org/IService/ManageInactiveUserResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/ManageInactiveUserServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function ManageInactiveUser(ByVal storeID As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/ManageInactiveUser", ReplyAction:="http://tempuri.org/IService/ManageInactiveUserResponse")>  _
        Function ManageInactiveUserAsync(ByVal storeID As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/ManageFinancialClosing", ReplyAction:="http://tempuri.org/IService/ManageFinancialClosingResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/ManageFinancialClosingServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Sub ManageFinancialClosing(ByVal storeID As String, ByVal loginUser As String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/ManageFinancialClosing", ReplyAction:="http://tempuri.org/IService/ManageFinancialClosingResponse")>  _
        Function ManageFinancialClosingAsync(ByVal storeID As String, ByVal loginUser As String) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetSuppliers", ReplyAction:="http://tempuri.org/IService/GetSuppliersResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetSuppliersServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetSuppliers(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.SupplierDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetSuppliers", ReplyAction:="http://tempuri.org/IService/GetSuppliersResponse")>  _
        Function GetSuppliersAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.SupplierDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddSupplier", ReplyAction:="http://tempuri.org/IService/AddSupplierResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddSupplierServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddSupplier(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddSupplier", ReplyAction:="http://tempuri.org/IService/AddSupplierResponse")>  _
        Function AddSupplierAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateSupplier", ReplyAction:="http://tempuri.org/IService/UpdateSupplierResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateSupplierServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateSupplier(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateSupplier", ReplyAction:="http://tempuri.org/IService/UpdateSupplierResponse")>  _
        Function UpdateSupplierAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateSupplierStatus", ReplyAction:="http://tempuri.org/IService/UpdateSupplierStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateSupplierStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateSupplierStatus(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateSupplierStatus", ReplyAction:="http://tempuri.org/IService/UpdateSupplierStatusResponse")>  _
        Function UpdateSupplierStatusAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddEquipment", ReplyAction:="http://tempuri.org/IService/AddEquipmentResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddEquipmentServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddEquipment(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddEquipment", ReplyAction:="http://tempuri.org/IService/AddEquipmentResponse")>  _
        Function AddEquipmentAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetEquipments", ReplyAction:="http://tempuri.org/IService/GetEquipmentsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetEquipmentsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetEquipments(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.EquipmentDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetEquipments", ReplyAction:="http://tempuri.org/IService/GetEquipmentsResponse")>  _
        Function GetEquipmentsAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.EquipmentDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateEquipment", ReplyAction:="http://tempuri.org/IService/UpdateEquipmentResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateEquipmentServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateEquipment(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateEquipment", ReplyAction:="http://tempuri.org/IService/UpdateEquipmentResponse")>  _
        Function UpdateEquipmentAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateEquipmentStatus", ReplyAction:="http://tempuri.org/IService/UpdateEquipmentStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateEquipmentStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateEquipmentStatus(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateEquipmentStatus", ReplyAction:="http://tempuri.org/IService/UpdateEquipmentStatusResponse")>  _
        Function UpdateEquipmentStatusAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddStore", ReplyAction:="http://tempuri.org/IService/AddStoreResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddStoreServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddStore(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddStore", ReplyAction:="http://tempuri.org/IService/AddStoreResponse")>  _
        Function AddStoreAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStores", ReplyAction:="http://tempuri.org/IService/GetStoresResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetStoresServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetStores(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStores", ReplyAction:="http://tempuri.org/IService/GetStoresResponse")>  _
        Function GetStoresAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateStore", ReplyAction:="http://tempuri.org/IService/UpdateStoreResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateStoreServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateStore(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateStore", ReplyAction:="http://tempuri.org/IService/UpdateStoreResponse")>  _
        Function UpdateStoreAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateStoreStatus", ReplyAction:="http://tempuri.org/IService/UpdateStoreStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateStoreStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateStoreStatus(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateStoreStatus", ReplyAction:="http://tempuri.org/IService/UpdateStoreStatusResponse")>  _
        Function UpdateStoreStatusAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GenerateItemID", ReplyAction:="http://tempuri.org/IService/GenerateItemIDResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GenerateItemIDServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GenerateItemID(ByVal request As NEA_ICS.WcfService.GenerateItemIDRequest) As NEA_ICS.WcfService.GenerateItemIDResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GenerateItemID", ReplyAction:="http://tempuri.org/IService/GenerateItemIDResponse")>  _
        Function GenerateItemIDAsync(ByVal request As NEA_ICS.WcfService.GenerateItemIDRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.GenerateItemIDResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddItem", ReplyAction:="http://tempuri.org/IService/AddItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddItem(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddItem", ReplyAction:="http://tempuri.org/IService/AddItemResponse")>  _
        Function AddItemAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetItems", ReplyAction:="http://tempuri.org/IService/GetItemsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetItemsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetItems(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetItems", ReplyAction:="http://tempuri.org/IService/GetItemsResponse")>  _
        Function GetItemsAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetItemsMasterList", ReplyAction:="http://tempuri.org/IService/GetItemsMasterListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetItemsMasterListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetItemsMasterList(ByVal storeID As String, ByVal printOption As String, ByVal sortBy As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal excludeStockCodeTypes As String, ByVal itemStatus As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetItemsMasterList", ReplyAction:="http://tempuri.org/IService/GetItemsMasterListResponse")>  _
        Function GetItemsMasterListAsync(ByVal storeID As String, ByVal printOption As String, ByVal sortBy As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal excludeStockCodeTypes As String, ByVal itemStatus As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStockTransaction", ReplyAction:="http://tempuri.org/IService/GetStockTransactionResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetStockTransactionServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetStockTransaction(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal transactionType As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetStockTransaction", ReplyAction:="http://tempuri.org/IService/GetStockTransactionResponse")>  _
        Function GetStockTransactionAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal transactionType As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateItem", ReplyAction:="http://tempuri.org/IService/UpdateItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateItem(ByVal request As NEA_ICS.WcfService.UpdateItemRequest) As NEA_ICS.WcfService.UpdateItemResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateItem", ReplyAction:="http://tempuri.org/IService/UpdateItemResponse")>  _
        Function UpdateItemAsync(ByVal request As NEA_ICS.WcfService.UpdateItemRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.UpdateItemResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateItemStatus", ReplyAction:="http://tempuri.org/IService/UpdateItemStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateItemStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateItemStatus(ByVal request As NEA_ICS.WcfService.UpdateItemStatusRequest) As NEA_ICS.WcfService.UpdateItemStatusResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateItemStatus", ReplyAction:="http://tempuri.org/IService/UpdateItemStatusResponse")>  _
        Function UpdateItemStatusAsync(ByVal request As NEA_ICS.WcfService.UpdateItemStatusRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.UpdateItemStatusResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetItemSearch", ReplyAction:="http://tempuri.org/IService/GetItemSearchResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetItemSearchServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetItemSearch(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Collections.Generic.List(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetItemSearch", ReplyAction:="http://tempuri.org/IService/GetItemSearchResponse")>  _
        Function GetItemSearchAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsValidStockCode", ReplyAction:="http://tempuri.org/IService/IsValidStockCodeResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/IsValidStockCodeServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function IsValidStockCode(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsValidStockCode", ReplyAction:="http://tempuri.org/IService/IsValidStockCodeResponse")>  _
        Function IsValidStockCodeAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsValidStatus", ReplyAction:="http://tempuri.org/IService/IsValidStatusResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/IsValidStatusServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function IsValidStatus(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsValidStatus", ReplyAction:="http://tempuri.org/IService/IsValidStatusResponse")>  _
        Function IsValidStatusAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetModuleRoles", ReplyAction:="http://tempuri.org/IService/GetModuleRolesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetModuleRolesServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetModuleRoles(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetModuleRoles", ReplyAction:="http://tempuri.org/IService/GetModuleRolesResponse")>  _
        Function GetModuleRolesAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRoles", ReplyAction:="http://tempuri.org/IService/GetUserRolesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserRolesServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserRoles(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRoles", ReplyAction:="http://tempuri.org/IService/GetUserRolesResponse")>  _
        Function GetUserRolesAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateModuleRole", ReplyAction:="http://tempuri.org/IService/UpdateModuleRoleResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateModuleRoleServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateModuleRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateModuleRole", ReplyAction:="http://tempuri.org/IService/UpdateModuleRoleResponse")>  _
        Function UpdateModuleRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateUserRole", ReplyAction:="http://tempuri.org/IService/UpdateUserRoleResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateUserRoleServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateUserRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateUserRole", ReplyAction:="http://tempuri.org/IService/UpdateUserRoleResponse")>  _
        Function UpdateUserRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/CheckNRIC", ReplyAction:="http://tempuri.org/IService/CheckNRICResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/CheckNRICServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function CheckNRIC(ByVal roledetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/CheckNRIC", ReplyAction:="http://tempuri.org/IService/CheckNRICResponse")>  _
        Function CheckNRICAsync(ByVal roledetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddUserRole", ReplyAction:="http://tempuri.org/IService/AddUserRoleResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddUserRoleServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddUserRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddUserRole", ReplyAction:="http://tempuri.org/IService/AddUserRoleResponse")>  _
        Function AddUserRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteUserRole", ReplyAction:="http://tempuri.org/IService/DeleteUserRoleResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/DeleteUserRoleServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function DeleteUserRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteUserRole", ReplyAction:="http://tempuri.org/IService/DeleteUserRoleResponse")>  _
        Function DeleteUserRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRoleIDBySoeID", ReplyAction:="http://tempuri.org/IService/GetUserRoleIDBySoeIDResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserRoleIDBySoeIDServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserRoleIDBySoeID(ByVal soeID As String) As System.Data.DataSet
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRoleIDBySoeID", ReplyAction:="http://tempuri.org/IService/GetUserRoleIDBySoeIDResponse")>  _
        Function GetUserRoleIDBySoeIDAsync(ByVal soeID As String) As System.Threading.Tasks.Task(Of System.Data.DataSet)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetConsumers", ReplyAction:="http://tempuri.org/IService/GetConsumersResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetConsumersServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetConsumers(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetConsumers", ReplyAction:="http://tempuri.org/IService/GetConsumersResponse")>  _
        Function GetConsumersAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddConsumer", ReplyAction:="http://tempuri.org/IService/AddConsumerResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddConsumerServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddConsumer(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddConsumer", ReplyAction:="http://tempuri.org/IService/AddConsumerResponse")>  _
        Function AddConsumerAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetConsumerRef", ReplyAction:="http://tempuri.org/IService/GetConsumerRefResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetConsumerRefServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetConsumerRef(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetConsumerRef", ReplyAction:="http://tempuri.org/IService/GetConsumerRefResponse")>  _
        Function GetConsumerRefAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetConsumerRefByUserID", ReplyAction:="http://tempuri.org/IService/GetConsumerRefByUserIDResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetConsumerRefByUserIDServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetConsumerRefByUserID(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetConsumerRefByUserID", ReplyAction:="http://tempuri.org/IService/GetConsumerRefByUserIDResponse")>  _
        Function GetConsumerRefByUserIDAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUsers", ReplyAction:="http://tempuri.org/IService/GetUsersResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUsersServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUsers(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUsers", ReplyAction:="http://tempuri.org/IService/GetUsersResponse")>  _
        Function GetUsersAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRef", ReplyAction:="http://tempuri.org/IService/GetUserRefResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetUserRefServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetUserRef(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserRef", ReplyAction:="http://tempuri.org/IService/GetUserRefResponse")>  _
        Function GetUserRefAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateConsumer", ReplyAction:="http://tempuri.org/IService/UpdateConsumerResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateConsumerServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateConsumer(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateConsumer", ReplyAction:="http://tempuri.org/IService/UpdateConsumerResponse")>  _
        Function UpdateConsumerAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetModuleAccess", ReplyAction:="http://tempuri.org/IService/GetModuleAccessResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetModuleAccessServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetModuleAccess(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetModuleAccess", ReplyAction:="http://tempuri.org/IService/GetModuleAccessResponse")>  _
        Function GetModuleAccessAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetModuleAccessRights", ReplyAction:="http://tempuri.org/IService/GetModuleAccessRightsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetModuleAccessRightsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetModuleAccessRights(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetModuleAccessRights", ReplyAction:="http://tempuri.org/IService/GetModuleAccessRightsResponse")>  _
        Function GetModuleAccessRightsAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetWorkSheetItems", ReplyAction:="http://tempuri.org/IService/GetWorkSheetItemsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetWorkSheetItemsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetWorkSheetItems(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetWorkSheetItems", ReplyAction:="http://tempuri.org/IService/GetWorkSheetItemsResponse")>  _
        Function GetWorkSheetItemsAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddWorkSheetItem", ReplyAction:="http://tempuri.org/IService/AddWorkSheetItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddWorkSheetItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddWorkSheetItem(ByVal request As NEA_ICS.WcfService.AddWorkSheetItemRequest) As NEA_ICS.WcfService.AddWorkSheetItemResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddWorkSheetItem", ReplyAction:="http://tempuri.org/IService/AddWorkSheetItemResponse")>  _
        Function AddWorkSheetItemAsync(ByVal request As NEA_ICS.WcfService.AddWorkSheetItemRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.AddWorkSheetItemResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetWorksheetGeneratedDate", ReplyAction:="http://tempuri.org/IService/GetWorksheetGeneratedDateResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetWorksheetGeneratedDateServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetWorksheetGeneratedDate(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetWorksheetGeneratedDate", ReplyAction:="http://tempuri.org/IService/GetWorksheetGeneratedDateResponse")>  _
        Function GetWorksheetGeneratedDateAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateWorksheet", ReplyAction:="http://tempuri.org/IService/UpdateWorksheetResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateWorksheetServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateWorksheet(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateWorksheet", ReplyAction:="http://tempuri.org/IService/UpdateWorksheetResponse")>  _
        Function UpdateWorksheetAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteWorksheet", ReplyAction:="http://tempuri.org/IService/DeleteWorksheetResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/DeleteWorksheetServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function DeleteWorksheet(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteWorksheet", ReplyAction:="http://tempuri.org/IService/DeleteWorksheetResponse")>  _
        Function DeleteWorksheetAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMarkedWorksheetItems", ReplyAction:="http://tempuri.org/IService/GetMarkedWorksheetItemsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMarkedWorksheetItemsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMarkedWorksheetItems(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMarkedWorksheetItems", ReplyAction:="http://tempuri.org/IService/GetMarkedWorksheetItemsResponse")>  _
        Function GetMarkedWorksheetItemsAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/FieldIsUnique", ReplyAction:="http://tempuri.org/IService/FieldIsUniqueResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/FieldIsUniqueServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function FieldIsUnique(ByVal storeId As String, ByVal columnName As NEA_ICS.WcfService.ServiceColumnName, ByVal columnValue As String, ByVal pkColumnValue As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/FieldIsUnique", ReplyAction:="http://tempuri.org/IService/FieldIsUniqueResponse")>  _
        Function FieldIsUniqueAsync(ByVal storeId As String, ByVal columnName As NEA_ICS.WcfService.ServiceColumnName, ByVal columnValue As String, ByVal pkColumnValue As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMoreItemInfo", ReplyAction:="http://tempuri.org/IService/GetMoreItemInfoResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetMoreItemInfoServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetMoreItemInfo(ByVal storeId As String, ByVal stockItem As String, ByVal asOfDte As Date) As NEA_ICS.WcfService.MoreItemInfoDetails
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetMoreItemInfo", ReplyAction:="http://tempuri.org/IService/GetMoreItemInfoResponse")>  _
        Function GetMoreItemInfoAsync(ByVal storeId As String, ByVal stockItem As String, ByVal asOfDte As Date) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.MoreItemInfoDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetLastSerialNo", ReplyAction:="http://tempuri.org/IService/GetLastSerialNoResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetLastSerialNoServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetLastSerialNo(ByVal storeID As String, ByVal moduleName As NEA_ICS.WcfService.ServiceModuleName) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetLastSerialNo", ReplyAction:="http://tempuri.org/IService/GetLastSerialNoResponse")>  _
        Function GetLastSerialNoAsync(ByVal storeID As String, ByVal moduleName As NEA_ICS.WcfService.ServiceModuleName) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/WithinFinancialCutoff", ReplyAction:="http://tempuri.org/IService/WithinFinancialCutoffResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/WithinFinancialCutoffServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function WithinFinancialCutoff(ByVal storeID As String, ByVal tranDte As Date) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/WithinFinancialCutoff", ReplyAction:="http://tempuri.org/IService/WithinFinancialCutoffResponse")>  _
        Function WithinFinancialCutoffAsync(ByVal storeID As String, ByVal tranDte As Date) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteAllStockTransaction", ReplyAction:="http://tempuri.org/IService/DeleteAllStockTransactionResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/DeleteAllStockTransactionServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Sub DeleteAllStockTransaction(ByVal storeID As String, ByVal docNo As String, ByVal stockControlType As NEA_ICS.WcfService.ServiceModuleName, ByVal originalDte As Date, ByVal loginUser As String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteAllStockTransaction", ReplyAction:="http://tempuri.org/IService/DeleteAllStockTransactionResponse")>  _
        Function DeleteAllStockTransactionAsync(ByVal storeID As String, ByVal docNo As String, ByVal stockControlType As NEA_ICS.WcfService.ServiceModuleName, ByVal originalDte As Date, ByVal loginUser As String) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddOrder", ReplyAction:="http://tempuri.org/IService/AddOrderResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddOrderServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddOrder(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddOrder", ReplyAction:="http://tempuri.org/IService/AddOrderResponse")>  _
        Function AddOrderAsync(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOrder", ReplyAction:="http://tempuri.org/IService/GetOrderResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetOrderServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetOrder(ByVal storeID As String, ByVal status As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOrder", ReplyAction:="http://tempuri.org/IService/GetOrderResponse")>  _
        Function GetOrderAsync(ByVal storeID As String, ByVal status As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOrderItem", ReplyAction:="http://tempuri.org/IService/GetOrderItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetOrderItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetOrderItem(ByVal storeId As String, ByVal orderId As String, ByVal unfullfillOnly As Boolean) As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOrderItem", ReplyAction:="http://tempuri.org/IService/GetOrderItemResponse")>  _
        Function GetOrderItemAsync(ByVal storeId As String, ByVal orderId As String, ByVal unfullfillOnly As Boolean) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateOrder", ReplyAction:="http://tempuri.org/IService/UpdateOrderResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateOrderServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateOrder(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateOrder", ReplyAction:="http://tempuri.org/IService/UpdateOrderResponse")>  _
        Function UpdateOrderAsync(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteOrder", ReplyAction:="http://tempuri.org/IService/DeleteOrderResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/DeleteOrderServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function DeleteOrder(ByVal storeId As String, ByVal orderId As String, ByVal status As String, ByVal loginUser As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteOrder", ReplyAction:="http://tempuri.org/IService/DeleteOrderResponse")>  _
        Function DeleteOrderAsync(ByVal storeId As String, ByVal orderId As String, ByVal status As String, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOrderList", ReplyAction:="http://tempuri.org/IService/GetOrderListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetOrderListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetOrderList(ByVal storeId As String, ByVal status As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderId As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderList)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOrderList", ReplyAction:="http://tempuri.org/IService/GetOrderListResponse")>  _
        Function GetOrderListAsync(ByVal storeId As String, ByVal status As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderList))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddDirectIssue", ReplyAction:="http://tempuri.org/IService/AddDirectIssueResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/AddDirectIssueServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function AddDirectIssue(ByVal request As NEA_ICS.WcfService.AddDirectIssueRequest) As NEA_ICS.WcfService.AddDirectIssueResponse
        
        'CODEGEN: Generating message contract since the operation has multiple return values.
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddDirectIssue", ReplyAction:="http://tempuri.org/IService/AddDirectIssueResponse")>  _
        Function AddDirectIssueAsync(ByVal request As NEA_ICS.WcfService.AddDirectIssueRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.AddDirectIssueResponse)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueID", ReplyAction:="http://tempuri.org/IService/GetDirectIssueIDResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetDirectIssueIDServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetDirectIssueID(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueID", ReplyAction:="http://tempuri.org/IService/GetDirectIssueIDResponse")>  _
        Function GetDirectIssueIDAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssues", ReplyAction:="http://tempuri.org/IService/GetDirectIssuesResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetDirectIssuesServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetDirectIssues(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssues", ReplyAction:="http://tempuri.org/IService/GetDirectIssuesResponse")>  _
        Function GetDirectIssuesAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueList", ReplyAction:="http://tempuri.org/IService/GetDirectIssueListResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetDirectIssueListServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetDirectIssueList(ByVal storeID As String, ByVal dteIssueFrom As Date, ByVal dteIssueTo As Date, ByVal docNo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueList", ReplyAction:="http://tempuri.org/IService/GetDirectIssueListResponse")>  _
        Function GetDirectIssueListAsync(ByVal storeID As String, ByVal dteIssueFrom As Date, ByVal dteIssueTo As Date, ByVal docNo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueItems", ReplyAction:="http://tempuri.org/IService/GetDirectIssueItemsResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetDirectIssueItemsServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetDirectIssueItems(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueItems", ReplyAction:="http://tempuri.org/IService/GetDirectIssueItemsResponse")>  _
        Function GetDirectIssueItemsAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteDirectIssue", ReplyAction:="http://tempuri.org/IService/DeleteDirectIssueResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/DeleteDirectIssueServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function DeleteDirectIssue(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DeleteDirectIssue", ReplyAction:="http://tempuri.org/IService/DeleteDirectIssueResponse")>  _
        Function DeleteDirectIssueAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateDirectIssue", ReplyAction:="http://tempuri.org/IService/UpdateDirectIssueResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/UpdateDirectIssueServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function UpdateDirectIssue(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails, ByVal directIssueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateDirectIssue", ReplyAction:="http://tempuri.org/IService/UpdateDirectIssueResponse")>  _
        Function UpdateDirectIssueAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails, ByVal directIssueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueInfo", ReplyAction:="http://tempuri.org/IService/GetDirectIssueInfoResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetDirectIssueInfoServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetDirectIssueInfo(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDirectIssueInfo", ReplyAction:="http://tempuri.org/IService/GetDirectIssueInfoResponse")>  _
        Function GetDirectIssueInfoAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetReceiveItem", ReplyAction:="http://tempuri.org/IService/GetReceiveItemResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetReceiveItemServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetReceiveItem(ByVal storeID As String, ByVal orderID As String, ByVal dte As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetReceiveItem", ReplyAction:="http://tempuri.org/IService/GetReceiveItemResponse")>  _
        Function GetReceiveItemAsync(ByVal storeID As String, ByVal orderID As String, ByVal dte As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails))
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetReceiveDte", ReplyAction:="http://tempuri.org/IService/GetReceiveDteResponse"),  _
         System.ServiceModel.FaultContractAttribute(GetType(NEA_ICS.WcfService.ServiceFault), Action:="http://tempuri.org/IService/GetReceiveDteServiceFaultFault", Name:="ServiceFault", [Namespace]:="http://schemas.datacontract.org/2004/07/NEA_ICS.WcfService")>  _
        Function GetReceiveDte(ByVal storeID As String, ByVal orderID As String) As System.Collections.Generic.List(Of Date)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetReceiveDte", ReplyAction:="http://tempuri.org/IService/GetReceiveDteResponse")>  _
        Function GetReceiveDteAsync(ByVal storeID As String, ByVal orderID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Date))
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetAdHocReport", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetAdHocReportRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public AdHocReport As NEA_ICS.WcfService.AdHocReportDetails
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public returnMessage As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AdHocReport As NEA_ICS.WcfService.AdHocReportDetails, ByVal returnMessage As String)
            MyBase.New
            Me.AdHocReport = AdHocReport
            Me.returnMessage = returnMessage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GetAdHocReportResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GetAdHocReportResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GetAdHocReportResult As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdHocReportDetails)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public returnMessage As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GetAdHocReportResult As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdHocReportDetails), ByVal returnMessage As String)
            MyBase.New
            Me.GetAdHocReportResult = GetAdHocReportResult
            Me.returnMessage = returnMessage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenerateItemID", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenerateItemIDRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public itemDetails As NEA_ICS.WcfService.ItemDetails
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public generatedItemID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal generatedItemID As String)
            MyBase.New
            Me.itemDetails = itemDetails
            Me.generatedItemID = generatedItemID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="GenerateItemIDResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class GenerateItemIDResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public GenerateItemIDResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public generatedItemID As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal GenerateItemIDResult As String, ByVal generatedItemID As String)
            MyBase.New
            Me.GenerateItemIDResult = GenerateItemIDResult
            Me.generatedItemID = generatedItemID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UpdateItem", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UpdateItemRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public itemDetails As NEA_ICS.WcfService.ItemDetails
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public returnMessage As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal returnMessage As String)
            MyBase.New
            Me.itemDetails = itemDetails
            Me.returnMessage = returnMessage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UpdateItemResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UpdateItemResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public UpdateItemResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public returnMessage As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateItemResult As String, ByVal returnMessage As String)
            MyBase.New
            Me.UpdateItemResult = UpdateItemResult
            Me.returnMessage = returnMessage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UpdateItemStatus", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UpdateItemStatusRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public itemDetails As NEA_ICS.WcfService.ItemDetails
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public returnMessage As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal returnMessage As String)
            MyBase.New
            Me.itemDetails = itemDetails
            Me.returnMessage = returnMessage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="UpdateItemStatusResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class UpdateItemStatusResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public UpdateItemStatusResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public returnMessage As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal UpdateItemStatusResult As String, ByVal returnMessage As String)
            MyBase.New
            Me.UpdateItemStatusResult = UpdateItemStatusResult
            Me.returnMessage = returnMessage
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddWorkSheetItem", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddWorkSheetItemRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public workSheetDetails As NEA_ICS.WcfService.WorksheetDetails
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public workSheetItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public workSheetID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal workSheetItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails), ByVal workSheetID As Integer)
            MyBase.New
            Me.workSheetDetails = workSheetDetails
            Me.workSheetItemList = workSheetItemList
            Me.workSheetID = workSheetID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddWorkSheetItemResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddWorkSheetItemResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public AddWorkSheetItemResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public workSheetID As Integer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddWorkSheetItemResult As String, ByVal workSheetID As Integer)
            MyBase.New
            Me.AddWorkSheetItemResult = AddWorkSheetItemResult
            Me.workSheetID = workSheetID
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddDirectIssue", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddDirectIssueRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public directIssue As NEA_ICS.WcfService.DirectIssueDetails
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public directIssueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=2)>  _
        Public directIssueDocNo As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails, ByVal directIssueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails), ByVal directIssueDocNo As String)
            MyBase.New
            Me.directIssue = directIssue
            Me.directIssueItemList = directIssueItemList
            Me.directIssueDocNo = directIssueDocNo
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(WrapperName:="AddDirectIssueResponse", WrapperNamespace:="http://tempuri.org/", IsWrapped:=true)>  _
    Partial Public Class AddDirectIssueResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=0)>  _
        Public AddDirectIssueResult As String
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://tempuri.org/", Order:=1)>  _
        Public directIssueDocNo As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal AddDirectIssueResult As String, ByVal directIssueDocNo As String)
            MyBase.New
            Me.AddDirectIssueResult = AddDirectIssueResult
            Me.directIssueDocNo = directIssueDocNo
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IServiceChannel
        Inherits NEA_ICS.WcfService.IService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ServiceClient
        Inherits System.ServiceModel.ClientBase(Of NEA_ICS.WcfService.IService)
        Implements NEA_ICS.WcfService.IService
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function UpdateReceiveItem(ByVal storeID As String, ByVal type As String, ByVal dte As Date, ByVal loginUser As String, ByVal receiveDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails)) As String Implements NEA_ICS.WcfService.IService.UpdateReceiveItem
            Return MyBase.Channel.UpdateReceiveItem(storeID, type, dte, loginUser, receiveDetails)
        End Function
        
        Public Function UpdateReceiveItemAsync(ByVal storeID As String, ByVal type As String, ByVal dte As Date, ByVal loginUser As String, ByVal receiveDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateReceiveItemAsync
            Return MyBase.Channel.UpdateReceiveItemAsync(storeID, type, dte, loginUser, receiveDetails)
        End Function
        
        Public Function GetReceiveList(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveList) Implements NEA_ICS.WcfService.IService.GetReceiveList
            Return MyBase.Channel.GetReceiveList(storeID, fromDte, toDte, fromStockItemID, toStockItemID, orderID)
        End Function
        
        Public Function GetReceiveListAsync(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveList)) Implements NEA_ICS.WcfService.IService.GetReceiveListAsync
            Return MyBase.Channel.GetReceiveListAsync(storeID, fromDte, toDte, fromStockItemID, toStockItemID, orderID)
        End Function
        
        Public Function AddRequest(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As String Implements NEA_ICS.WcfService.IService.AddRequest
            Return MyBase.Channel.AddRequest(requestDetails, requestItemDetails)
        End Function
        
        Public Function AddRequestAsync(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddRequestAsync
            Return MyBase.Channel.AddRequestAsync(requestDetails, requestItemDetails)
        End Function
        
        Public Function GetRequest(ByVal storeID As String, ByVal status As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails) Implements NEA_ICS.WcfService.IService.GetRequest
            Return MyBase.Channel.GetRequest(storeID, status)
        End Function
        
        Public Function GetRequestAsync(ByVal storeID As String, ByVal status As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails)) Implements NEA_ICS.WcfService.IService.GetRequestAsync
            Return MyBase.Channel.GetRequestAsync(storeID, status)
        End Function
        
        Public Function GetRequestBySearch(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails) Implements NEA_ICS.WcfService.IService.GetRequestBySearch
            Return MyBase.Channel.GetRequestBySearch(requestDetails)
        End Function
        
        Public Function GetRequestBySearchAsync(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RequestDetails)) Implements NEA_ICS.WcfService.IService.GetRequestBySearchAsync
            Return MyBase.Channel.GetRequestBySearchAsync(requestDetails)
        End Function
        
        Public Function GetRequestItem(ByVal storeId As String, ByVal requestId As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails) Implements NEA_ICS.WcfService.IService.GetRequestItem
            Return MyBase.Channel.GetRequestItem(storeId, requestId)
        End Function
        
        Public Function GetRequestItemAsync(ByVal storeId As String, ByVal requestId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) Implements NEA_ICS.WcfService.IService.GetRequestItemAsync
            Return MyBase.Channel.GetRequestItemAsync(storeId, requestId)
        End Function
        
        Public Function UpdateRequest(ByVal storeID As String, ByVal requestID As String, ByVal loginUser As String, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As String Implements NEA_ICS.WcfService.IService.UpdateRequest
            Return MyBase.Channel.UpdateRequest(storeID, requestID, loginUser, requestItemDetails)
        End Function
        
        Public Function UpdateRequestAsync(ByVal storeID As String, ByVal requestID As String, ByVal loginUser As String, ByVal requestItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateRequestAsync
            Return MyBase.Channel.UpdateRequestAsync(storeID, requestID, loginUser, requestItemDetails)
        End Function
        
        Public Function DeleteRequest(ByVal storeId As String, ByVal requestId As String, ByVal status As String, ByVal loginUser As String) As String Implements NEA_ICS.WcfService.IService.DeleteRequest
            Return MyBase.Channel.DeleteRequest(storeId, requestId, status, loginUser)
        End Function
        
        Public Function DeleteRequestAsync(ByVal storeId As String, ByVal requestId As String, ByVal status As String, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.DeleteRequestAsync
            Return MyBase.Channel.DeleteRequestAsync(storeId, requestId, status, loginUser)
        End Function
        
        Public Function UpdateRequestStatus(ByVal storeID As String, ByVal requestID As String, ByVal status As String, ByVal loginUser As String) As String Implements NEA_ICS.WcfService.IService.UpdateRequestStatus
            Return MyBase.Channel.UpdateRequestStatus(storeID, requestID, status, loginUser)
        End Function
        
        Public Function UpdateRequestStatusAsync(ByVal storeID As String, ByVal requestID As String, ByVal status As String, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateRequestStatusAsync
            Return MyBase.Channel.UpdateRequestStatusAsync(storeID, requestID, status, loginUser)
        End Function
        
        Public Function UpdateAdjustStatus(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal status As String, ByVal loginUser As String, ByVal returnBy As String, ByVal returnDte As Date, ByVal approveBy As String, ByVal approveDte As Date, ByVal receiveBy As String, ByVal receiveDte As Date) As String Implements NEA_ICS.WcfService.IService.UpdateAdjustStatus
            Return MyBase.Channel.UpdateAdjustStatus(storeID, adjustID, adjustType, status, loginUser, returnBy, returnDte, approveBy, approveDte, receiveBy, receiveDte)
        End Function
        
        Public Function UpdateAdjustStatusAsync(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal status As String, ByVal loginUser As String, ByVal returnBy As String, ByVal returnDte As Date, ByVal approveBy As String, ByVal approveDte As Date, ByVal receiveBy As String, ByVal receiveDte As Date) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateAdjustStatusAsync
            Return MyBase.Channel.UpdateAdjustStatusAsync(storeID, adjustID, adjustType, status, loginUser, returnBy, returnDte, approveBy, approveDte, receiveBy, receiveDte)
        End Function
        
        Public Function UpdateIssueItem(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal issueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As String Implements NEA_ICS.WcfService.IService.UpdateIssueItem
            Return MyBase.Channel.UpdateIssueItem(requestDetails, issueItemList)
        End Function
        
        Public Function UpdateIssueItemAsync(ByVal requestDetails As NEA_ICS.WcfService.RequestDetails, ByVal issueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateIssueItemAsync
            Return MyBase.Channel.UpdateIssueItemAsync(requestDetails, issueItemList)
        End Function
        
        Public Function GetIssueList(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal requestID As String, ByVal consumerID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueList) Implements NEA_ICS.WcfService.IService.GetIssueList
            Return MyBase.Channel.GetIssueList(storeID, fromDte, toDte, fromStockItemID, toStockItemID, requestID, consumerID)
        End Function
        
        Public Function GetIssueListAsync(ByVal storeID As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal requestID As String, ByVal consumerID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.IssueList)) Implements NEA_ICS.WcfService.IService.GetIssueListAsync
            Return MyBase.Channel.GetIssueListAsync(storeID, fromDte, toDte, fromStockItemID, toStockItemID, requestID, consumerID)
        End Function
        
        Public Function AddAdjust(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As String Implements NEA_ICS.WcfService.IService.AddAdjust
            Return MyBase.Channel.AddAdjust(adjustDetails, adjustItemDetails)
        End Function
        
        Public Function AddAdjustAsync(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddAdjustAsync
            Return MyBase.Channel.AddAdjustAsync(adjustDetails, adjustItemDetails)
        End Function
        
        Public Function GetAdjust(ByVal storeID As String, ByVal type As String, ByVal status As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails) Implements NEA_ICS.WcfService.IService.GetAdjust
            Return MyBase.Channel.GetAdjust(storeID, type, status)
        End Function
        
        Public Function GetAdjustAsync(ByVal storeID As String, ByVal type As String, ByVal status As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails)) Implements NEA_ICS.WcfService.IService.GetAdjustAsync
            Return MyBase.Channel.GetAdjustAsync(storeID, type, status)
        End Function
        
        Public Function GetAdjustItem(ByVal storeID As String, ByVal adjustID As String, ByVal type As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails) Implements NEA_ICS.WcfService.IService.GetAdjustItem
            Return MyBase.Channel.GetAdjustItem(storeID, adjustID, type)
        End Function
        
        Public Function GetAdjustItemAsync(ByVal storeID As String, ByVal adjustID As String, ByVal type As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) Implements NEA_ICS.WcfService.IService.GetAdjustItemAsync
            Return MyBase.Channel.GetAdjustItemAsync(storeID, adjustID, type)
        End Function
        
        Public Function GetAdjustBySearch(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails) Implements NEA_ICS.WcfService.IService.GetAdjustBySearch
            Return MyBase.Channel.GetAdjustBySearch(adjustDetails)
        End Function
        
        Public Function GetAdjustBySearchAsync(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustDetails)) Implements NEA_ICS.WcfService.IService.GetAdjustBySearchAsync
            Return MyBase.Channel.GetAdjustBySearchAsync(adjustDetails)
        End Function
        
        Public Function UpdateAdjust(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As String Implements NEA_ICS.WcfService.IService.UpdateAdjust
            Return MyBase.Channel.UpdateAdjust(adjustDetails, adjustItemDetails)
        End Function
        
        Public Function UpdateAdjustAsync(ByVal adjustDetails As NEA_ICS.WcfService.AdjustDetails, ByVal adjustItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateAdjustAsync
            Return MyBase.Channel.UpdateAdjustAsync(adjustDetails, adjustItemDetails)
        End Function
        
        Public Function DeleteAdjust(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal originalDte As Date, ByVal loginUser As String) As String Implements NEA_ICS.WcfService.IService.DeleteAdjust
            Return MyBase.Channel.DeleteAdjust(storeID, adjustID, adjustType, originalDte, loginUser)
        End Function
        
        Public Function DeleteAdjustAsync(ByVal storeID As String, ByVal adjustID As String, ByVal adjustType As String, ByVal originalDte As Date, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.DeleteAdjustAsync
            Return MyBase.Channel.DeleteAdjustAsync(storeID, adjustID, adjustType, originalDte, loginUser)
        End Function
        
        Public Function GetAdjustList(ByVal storeID As String, ByVal type As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal adjustID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustList) Implements NEA_ICS.WcfService.IService.GetAdjustList
            Return MyBase.Channel.GetAdjustList(storeID, type, fromDte, toDte, adjustID)
        End Function
        
        Public Function GetAdjustListAsync(ByVal storeID As String, ByVal type As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal adjustID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AdjustList)) Implements NEA_ICS.WcfService.IService.GetAdjustListAsync
            Return MyBase.Channel.GetAdjustListAsync(storeID, type, fromDte, toDte, adjustID)
        End Function
        
        Public Function GetAuditTrailStockItem(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal itemStatus As Boolean, ByVal orderBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockItemDetails) Implements NEA_ICS.WcfService.IService.GetAuditTrailStockItem
            Return MyBase.Channel.GetAuditTrailStockItem(storeId, dateFrom, dateTo, auditType, itemStatus, orderBy)
        End Function
        
        Public Function GetAuditTrailStockItemAsync(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal itemStatus As Boolean, ByVal orderBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockItemDetails)) Implements NEA_ICS.WcfService.IService.GetAuditTrailStockItemAsync
            Return MyBase.Channel.GetAuditTrailStockItemAsync(storeId, dateFrom, dateTo, auditType, itemStatus, orderBy)
        End Function
        
        Public Function GetAuditTrailOrder(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal orderBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AOrderDetails) Implements NEA_ICS.WcfService.IService.GetAuditTrailOrder
            Return MyBase.Channel.GetAuditTrailOrder(storeId, dateFrom, dateTo, auditType, orderBy)
        End Function
        
        Public Function GetAuditTrailOrderAsync(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal orderBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AOrderDetails)) Implements NEA_ICS.WcfService.IService.GetAuditTrailOrderAsync
            Return MyBase.Channel.GetAuditTrailOrderAsync(storeId, dateFrom, dateTo, auditType, orderBy)
        End Function
        
        Public Function GetAuditTrailStockTransaction(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal transType As String, ByVal orderBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockTransactionDetails) Implements NEA_ICS.WcfService.IService.GetAuditTrailStockTransaction
            Return MyBase.Channel.GetAuditTrailStockTransaction(storeId, dateFrom, dateTo, auditType, transType, orderBy)
        End Function
        
        Public Function GetAuditTrailStockTransactionAsync(ByVal storeId As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal auditType As String, ByVal transType As String, ByVal orderBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AStockTransactionDetails)) Implements NEA_ICS.WcfService.IService.GetAuditTrailStockTransactionAsync
            Return MyBase.Channel.GetAuditTrailStockTransactionAsync(storeId, dateFrom, dateTo, auditType, transType, orderBy)
        End Function
        
        Public Function GetAuditTrailResidue(ByVal storeID As String, ByVal month As Integer, ByVal year As Integer) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AResidueDetails) Implements NEA_ICS.WcfService.IService.GetAuditTrailResidue
            Return MyBase.Channel.GetAuditTrailResidue(storeID, month, year)
        End Function
        
        Public Function GetAuditTrailResidueAsync(ByVal storeID As String, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AResidueDetails)) Implements NEA_ICS.WcfService.IService.GetAuditTrailResidueAsync
            Return MyBase.Channel.GetAuditTrailResidueAsync(storeID, month, year)
        End Function
        
        Public Function GetAuditTrailACommon(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ACommon) Implements NEA_ICS.WcfService.IService.GetAuditTrailACommon
            Return MyBase.Channel.GetAuditTrailACommon(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailACommonAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ACommon)) Implements NEA_ICS.WcfService.IService.GetAuditTrailACommonAsync
            Return MyBase.Channel.GetAuditTrailACommonAsync(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAConsumer(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AConsumer) Implements NEA_ICS.WcfService.IService.GetAuditTrailAConsumer
            Return MyBase.Channel.GetAuditTrailAConsumer(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAConsumerAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AConsumer)) Implements NEA_ICS.WcfService.IService.GetAuditTrailAConsumerAsync
            Return MyBase.Channel.GetAuditTrailAConsumerAsync(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAEquipment(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AEquipment) Implements NEA_ICS.WcfService.IService.GetAuditTrailAEquipment
            Return MyBase.Channel.GetAuditTrailAEquipment(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAEquipmentAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AEquipment)) Implements NEA_ICS.WcfService.IService.GetAuditTrailAEquipmentAsync
            Return MyBase.Channel.GetAuditTrailAEquipmentAsync(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAStore(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AStore) Implements NEA_ICS.WcfService.IService.GetAuditTrailAStore
            Return MyBase.Channel.GetAuditTrailAStore(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAStoreAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AStore)) Implements NEA_ICS.WcfService.IService.GetAuditTrailAStoreAsync
            Return MyBase.Channel.GetAuditTrailAStoreAsync(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailASupplier(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ASupplier) Implements NEA_ICS.WcfService.IService.GetAuditTrailASupplier
            Return MyBase.Channel.GetAuditTrailASupplier(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailASupplierAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ASupplier)) Implements NEA_ICS.WcfService.IService.GetAuditTrailASupplierAsync
            Return MyBase.Channel.GetAuditTrailASupplierAsync(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAUserRole(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AUserRole) Implements NEA_ICS.WcfService.IService.GetAuditTrailAUserRole
            Return MyBase.Channel.GetAuditTrailAUserRole(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetAuditTrailAUserRoleAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.AUserRole)) Implements NEA_ICS.WcfService.IService.GetAuditTrailAUserRoleAsync
            Return MyBase.Channel.GetAuditTrailAUserRoleAsync(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetRackItemBalance(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RackItemBalanceDetails) Implements NEA_ICS.WcfService.IService.GetRackItemBalance
            Return MyBase.Channel.GetRackItemBalance(storeId, rackLocationFrom, rackLocationTo)
        End Function
        
        Public Function GetRackItemBalanceAsync(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RackItemBalanceDetails)) Implements NEA_ICS.WcfService.IService.GetRackItemBalanceAsync
            Return MyBase.Channel.GetRackItemBalanceAsync(storeId, rackLocationFrom, rackLocationTo)
        End Function
        
        Public Function GetStockCode(ByVal storeId As String) As System.Collections.Generic.List(Of String) Implements NEA_ICS.WcfService.IService.GetStockCode
            Return MyBase.Channel.GetStockCode(storeId)
        End Function
        
        Public Function GetStockCodeAsync(ByVal storeId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String)) Implements NEA_ICS.WcfService.IService.GetStockCodeAsync
            Return MyBase.Channel.GetStockCodeAsync(storeId)
        End Function
        
        Public Function GetRackLocation(ByVal storeId As String) As System.Collections.Generic.List(Of String) Implements NEA_ICS.WcfService.IService.GetRackLocation
            Return MyBase.Channel.GetRackLocation(storeId)
        End Function
        
        Public Function GetRackLocationAsync(ByVal storeId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String)) Implements NEA_ICS.WcfService.IService.GetRackLocationAsync
            Return MyBase.Channel.GetRackLocationAsync(storeId)
        End Function
        
        Public Function GetTransactionList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.TransactionListDetails) Implements NEA_ICS.WcfService.IService.GetTransactionList
            Return MyBase.Channel.GetTransactionList(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        Public Function GetTransactionListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.TransactionListDetails)) Implements NEA_ICS.WcfService.IService.GetTransactionListAsync
            Return MyBase.Channel.GetTransactionListAsync(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR001GetRackItemBalance(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR001GetRackItemBalanceDetails) Implements NEA_ICS.WcfService.IService.GetMR001GetRackItemBalance
            Return MyBase.Channel.GetMR001GetRackItemBalance(storeId, rackLocationFrom, rackLocationTo)
        End Function
        
        Public Function GetMR001GetRackItemBalanceAsync(ByVal storeId As String, ByVal rackLocationFrom As String, ByVal rackLocationTo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR001GetRackItemBalanceDetails)) Implements NEA_ICS.WcfService.IService.GetMR001GetRackItemBalanceAsync
            Return MyBase.Channel.GetMR001GetRackItemBalanceAsync(storeId, rackLocationFrom, rackLocationTo)
        End Function
        
        Public Function GetMR002GetTransactionList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String, ByVal equipmentID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR002GetTransactionListDetails) Implements NEA_ICS.WcfService.IService.GetMR002GetTransactionList
            Return MyBase.Channel.GetMR002GetTransactionList(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo, directIssue, equipmentID)
        End Function
        
        Public Function GetMR002GetTransactionListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String, ByVal equipmentID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR002GetTransactionListDetails)) Implements NEA_ICS.WcfService.IService.GetMR002GetTransactionListAsync
            Return MyBase.Channel.GetMR002GetTransactionListAsync(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo, directIssue, equipmentID)
        End Function
        
        Public Function GetMR003IssueDocumentDetails(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR003IssueDocumentDetails) Implements NEA_ICS.WcfService.IService.GetMR003IssueDocumentDetails
            Return MyBase.Channel.GetMR003IssueDocumentDetails(storeId, transDateFrom, transDateTo, directIssue)
        End Function
        
        Public Function GetMR003IssueDocumentDetailsAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal directIssue As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR003IssueDocumentDetails)) Implements NEA_ICS.WcfService.IService.GetMR003IssueDocumentDetailsAsync
            Return MyBase.Channel.GetMR003IssueDocumentDetailsAsync(storeId, transDateFrom, transDateTo, directIssue)
        End Function
        
        Public Function GetMR004StockReviewList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR004StockReviewListDetails) Implements NEA_ICS.WcfService.IService.GetMR004StockReviewList
            Return MyBase.Channel.GetMR004StockReviewList(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR004StockReviewListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR004StockReviewListDetails)) Implements NEA_ICS.WcfService.IService.GetMR004StockReviewListAsync
            Return MyBase.Channel.GetMR004StockReviewListAsync(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR005StockReturn(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR005StockReturnDetails) Implements NEA_ICS.WcfService.IService.GetMR005StockReturn
            Return MyBase.Channel.GetMR005StockReturn(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR005StockReturnAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR005StockReturnDetails)) Implements NEA_ICS.WcfService.IService.GetMR005StockReturnAsync
            Return MyBase.Channel.GetMR005StockReturnAsync(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR006StockReturnCheckListAdjust(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListAdjustDetails) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListAdjust
            Return MyBase.Channel.GetMR006StockReturnCheckListAdjust(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR006StockReturnCheckListAdjustAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListAdjustDetails)) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListAdjustAsync
            Return MyBase.Channel.GetMR006StockReturnCheckListAdjustAsync(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR006StockReturnCheckListIssue(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListIssueDetails) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListIssue
            Return MyBase.Channel.GetMR006StockReturnCheckListIssue(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR006StockReturnCheckListIssueAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListIssueDetails)) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListIssueAsync
            Return MyBase.Channel.GetMR006StockReturnCheckListIssueAsync(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR006StockReturnCheckListReceive(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListReceiveDetails) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListReceive
            Return MyBase.Channel.GetMR006StockReturnCheckListReceive(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR006StockReturnCheckListReceiveAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListReceiveDetails)) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListReceiveAsync
            Return MyBase.Channel.GetMR006StockReturnCheckListReceiveAsync(storeId, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR006StockReturnCheckListStockItem(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal excludeZero As Boolean) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListStockItemDetails) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListStockItem
            Return MyBase.Channel.GetMR006StockReturnCheckListStockItem(storeId, transDateFrom, transDateTo, excludeZero)
        End Function
        
        Public Function GetMR006StockReturnCheckListStockItemAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal excludeZero As Boolean) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR006StockReturnCheckListStockItemDetails)) Implements NEA_ICS.WcfService.IService.GetMR006StockReturnCheckListStockItemAsync
            Return MyBase.Channel.GetMR006StockReturnCheckListStockItemAsync(storeId, transDateFrom, transDateTo, excludeZero)
        End Function
        
        Public Function GetMR007PeriodIssues(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal consumerID As String, ByVal directIssue As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR007PeriodIssuesDetails) Implements NEA_ICS.WcfService.IService.GetMR007PeriodIssues
            Return MyBase.Channel.GetMR007PeriodIssues(storeId, transDateFrom, transDateTo, consumerID, directIssue)
        End Function
        
        Public Function GetMR007PeriodIssuesAsync(ByVal storeId As String, ByVal transDateFrom As Date, ByVal transDateTo As Date, ByVal consumerID As String, ByVal directIssue As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR007PeriodIssuesDetails)) Implements NEA_ICS.WcfService.IService.GetMR007PeriodIssuesAsync
            Return MyBase.Channel.GetMR007PeriodIssuesAsync(storeId, transDateFrom, transDateTo, consumerID, directIssue)
        End Function
        
        Public Function GetMR008QuantityIssueSummary(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR008QuantityIssueSummaryDetails) Implements NEA_ICS.WcfService.IService.GetMR008QuantityIssueSummary
            Return MyBase.Channel.GetMR008QuantityIssueSummary(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR008QuantityIssueSummaryAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR008QuantityIssueSummaryDetails)) Implements NEA_ICS.WcfService.IService.GetMR008QuantityIssueSummaryAsync
            Return MyBase.Channel.GetMR008QuantityIssueSummaryAsync(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR009ReorderStockItemList(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR009ReorderStockItemListDetails) Implements NEA_ICS.WcfService.IService.GetMR009ReorderStockItemList
            Return MyBase.Channel.GetMR009ReorderStockItemList(storeId, stockCodeFrom, stockCodeTo)
        End Function
        
        Public Function GetMR009ReorderStockItemListAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR009ReorderStockItemListDetails)) Implements NEA_ICS.WcfService.IService.GetMR009ReorderStockItemListAsync
            Return MyBase.Channel.GetMR009ReorderStockItemListAsync(storeId, stockCodeFrom, stockCodeTo)
        End Function
        
        Public Function GetMR010StockAdjustmentEntries(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.MR010StockAdjustmentEntriesDetails) Implements NEA_ICS.WcfService.IService.GetMR010StockAdjustmentEntries
            Return MyBase.Channel.GetMR010StockAdjustmentEntries(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        Public Function GetMR010StockAdjustmentEntriesAsync(ByVal storeId As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal transDateFrom As Date, ByVal transDateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.MR010StockAdjustmentEntriesDetails)) Implements NEA_ICS.WcfService.IService.GetMR010StockAdjustmentEntriesAsync
            Return MyBase.Channel.GetMR010StockAdjustmentEntriesAsync(storeId, stockCodeFrom, stockCodeTo, transDateFrom, transDateTo)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function NEA_ICS_WcfService_IService_GetAdHocReport(ByVal request As NEA_ICS.WcfService.GetAdHocReportRequest) As NEA_ICS.WcfService.GetAdHocReportResponse Implements NEA_ICS.WcfService.IService.GetAdHocReport
            Return MyBase.Channel.GetAdHocReport(request)
        End Function
        
        Public Function GetAdHocReport(ByVal AdHocReport As NEA_ICS.WcfService.AdHocReportDetails, ByRef returnMessage As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.AdHocReportDetails)
            Dim inValue As NEA_ICS.WcfService.GetAdHocReportRequest = New NEA_ICS.WcfService.GetAdHocReportRequest()
            inValue.AdHocReport = AdHocReport
            inValue.returnMessage = returnMessage
            Dim retVal As NEA_ICS.WcfService.GetAdHocReportResponse = CType(Me,NEA_ICS.WcfService.IService).GetAdHocReport(inValue)
            returnMessage = retVal.returnMessage
            Return retVal.GetAdHocReportResult
        End Function
        
        Public Function GetAdHocReportAsync(ByVal request As NEA_ICS.WcfService.GetAdHocReportRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.GetAdHocReportResponse) Implements NEA_ICS.WcfService.IService.GetAdHocReportAsync
            Return MyBase.Channel.GetAdHocReportAsync(request)
        End Function
        
        Public Function AddEmailContent(ByVal emailContent As NEA_ICS.WcfService.EmailContent) As String Implements NEA_ICS.WcfService.IService.AddEmailContent
            Return MyBase.Channel.AddEmailContent(emailContent)
        End Function
        
        Public Function AddEmailContentAsync(ByVal emailContent As NEA_ICS.WcfService.EmailContent) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddEmailContentAsync
            Return MyBase.Channel.AddEmailContentAsync(emailContent)
        End Function
        
        Public Function GetEmailContent(ByVal storeID As String, ByVal emailFormat As String) As System.Collections.Generic.List(Of String) Implements NEA_ICS.WcfService.IService.GetEmailContent
            Return MyBase.Channel.GetEmailContent(storeID, emailFormat)
        End Function
        
        Public Function GetEmailContentAsync(ByVal storeID As String, ByVal emailFormat As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String)) Implements NEA_ICS.WcfService.IService.GetEmailContentAsync
            Return MyBase.Channel.GetEmailContentAsync(storeID, emailFormat)
        End Function
        
        Public Function GetCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails) Implements NEA_ICS.WcfService.IService.GetCommon
            Return MyBase.Channel.GetCommon(commonDetails)
        End Function
        
        Public Function GetCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails)) Implements NEA_ICS.WcfService.IService.GetCommonAsync
            Return MyBase.Channel.GetCommonAsync(commonDetails)
        End Function
        
        Public Function GetDistinctCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails) Implements NEA_ICS.WcfService.IService.GetDistinctCommon
            Return MyBase.Channel.GetDistinctCommon(commonDetails)
        End Function
        
        Public Function GetDistinctCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.CommonDetails)) Implements NEA_ICS.WcfService.IService.GetDistinctCommonAsync
            Return MyBase.Channel.GetDistinctCommonAsync(commonDetails)
        End Function
        
        Public Function AddCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As String Implements NEA_ICS.WcfService.IService.AddCommon
            Return MyBase.Channel.AddCommon(commonDetails)
        End Function
        
        Public Function AddCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddCommonAsync
            Return MyBase.Channel.AddCommonAsync(commonDetails)
        End Function
        
        Public Function UpdateCommon(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As String Implements NEA_ICS.WcfService.IService.UpdateCommon
            Return MyBase.Channel.UpdateCommon(commonDetails)
        End Function
        
        Public Function UpdateCommonAsync(ByVal commonDetails As NEA_ICS.WcfService.CommonDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateCommonAsync
            Return MyBase.Channel.UpdateCommonAsync(commonDetails)
        End Function
        
        Public Function GetStoreAccess(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails) Implements NEA_ICS.WcfService.IService.GetStoreAccess
            Return MyBase.Channel.GetStoreAccess(roleDetails)
        End Function
        
        Public Function GetStoreAccessAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails)) Implements NEA_ICS.WcfService.IService.GetStoreAccessAsync
            Return MyBase.Channel.GetStoreAccessAsync(roleDetails)
        End Function
        
        Public Function GetUserProfile(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetUserProfile
            Return MyBase.Channel.GetUserProfile(roleDetails)
        End Function
        
        Public Function GetUserProfileAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetUserProfileAsync
            Return MyBase.Channel.GetUserProfileAsync(roleDetails)
        End Function
        
        Public Function GetUserStoreCodes(ByVal userId As String) As String Implements NEA_ICS.WcfService.IService.GetUserStoreCodes
            Return MyBase.Channel.GetUserStoreCodes(userId)
        End Function
        
        Public Function GetUserStoreCodesAsync(ByVal userId As String) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.GetUserStoreCodesAsync
            Return MyBase.Channel.GetUserStoreCodesAsync(userId)
        End Function
        
        Public Function GetUserLogins(ByVal userID As String, ByVal sessionId As String, ByVal checkIfLogout As Boolean) As Integer Implements NEA_ICS.WcfService.IService.GetUserLogins
            Return MyBase.Channel.GetUserLogins(userID, sessionId, checkIfLogout)
        End Function
        
        Public Function GetUserLoginsAsync(ByVal userID As String, ByVal sessionId As String, ByVal checkIfLogout As Boolean) As System.Threading.Tasks.Task(Of Integer) Implements NEA_ICS.WcfService.IService.GetUserLoginsAsync
            Return MyBase.Channel.GetUserLoginsAsync(userID, sessionId, checkIfLogout)
        End Function
        
        Public Function CheckUserIdExist(ByVal userID As String) As Boolean Implements NEA_ICS.WcfService.IService.CheckUserIdExist
            Return MyBase.Channel.CheckUserIdExist(userID)
        End Function
        
        Public Function CheckUserIdExistAsync(ByVal userID As String) As System.Threading.Tasks.Task(Of Boolean) Implements NEA_ICS.WcfService.IService.CheckUserIdExistAsync
            Return MyBase.Channel.CheckUserIdExistAsync(userID)
        End Function
        
        Public Function GetUserRoleStatus(ByVal storeID As String, ByVal userID As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetUserRoleStatus
            Return MyBase.Channel.GetUserRoleStatus(storeID, userID)
        End Function
        
        Public Function GetUserRoleStatusAsync(ByVal storeID As String, ByVal userID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetUserRoleStatusAsync
            Return MyBase.Channel.GetUserRoleStatusAsync(storeID, userID)
        End Function
        
        Public Function GetUserActivityList(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal byTimeStamp As Boolean, ByVal filterBy As String, ByVal sortBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetUserActivityList
            Return MyBase.Channel.GetUserActivityList(storeId, userId, fromDte, toDte, byTimeStamp, filterBy, sortBy)
        End Function
        
        Public Function GetUserActivityListAsync(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal byTimeStamp As Boolean, ByVal filterBy As String, ByVal sortBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetUserActivityListAsync
            Return MyBase.Channel.GetUserActivityListAsync(storeId, userId, fromDte, toDte, byTimeStamp, filterBy, sortBy)
        End Function
        
        Public Function GetUserUnsuccessfulLoginList(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetUserUnsuccessfulLoginList
            Return MyBase.Channel.GetUserUnsuccessfulLoginList(storeId, userId, fromDte, toDte, sortBy)
        End Function
        
        Public Function GetUserUnsuccessfulLoginListAsync(ByVal storeId As String, ByVal userId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetUserUnsuccessfulLoginListAsync
            Return MyBase.Channel.GetUserUnsuccessfulLoginListAsync(storeId, userId, fromDte, toDte, sortBy)
        End Function
        
        Public Function GetNewUserAccountList(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetNewUserAccountList
            Return MyBase.Channel.GetNewUserAccountList(storeId, fromDte, toDte, sortBy)
        End Function
        
        Public Function GetNewUserAccountListAsync(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal sortBy As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetNewUserAccountListAsync
            Return MyBase.Channel.GetNewUserAccountListAsync(storeId, fromDte, toDte, sortBy)
        End Function
        
        Public Function GetNonIcsUserUnsuccessfulLogin(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetNonIcsUserUnsuccessfulLogin
            Return MyBase.Channel.GetNonIcsUserUnsuccessfulLogin(storeId, fromDte, toDte)
        End Function
        
        Public Function GetNonIcsUserUnsuccessfulLoginAsync(ByVal storeId As String, ByVal fromDte As Date, ByVal toDte As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetNonIcsUserUnsuccessfulLoginAsync
            Return MyBase.Channel.GetNonIcsUserUnsuccessfulLoginAsync(storeId, fromDte, toDte)
        End Function
        
        Public Function GetInactiveUsers(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetInactiveUsers
            Return MyBase.Channel.GetInactiveUsers(storeID, dateFrom, dateTo)
        End Function
        
        Public Function GetInactiveUsersAsync(ByVal storeID As String, ByVal dateFrom As Date, ByVal dateTo As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetInactiveUsersAsync
            Return MyBase.Channel.GetInactiveUsersAsync(storeID, dateFrom, dateTo)
        End Function
        
        Public Function AddUserAudit(ByVal storeId As String, ByVal userId As String, ByVal userIP As String, ByVal sessionID As String, ByVal isNonIcsUser As Boolean, ByVal isInactiveUser As Boolean, ByVal isUnsuccessfulLogin As Boolean) As String Implements NEA_ICS.WcfService.IService.AddUserAudit
            Return MyBase.Channel.AddUserAudit(storeId, userId, userIP, sessionID, isNonIcsUser, isInactiveUser, isUnsuccessfulLogin)
        End Function
        
        Public Function AddUserAuditAsync(ByVal storeId As String, ByVal userId As String, ByVal userIP As String, ByVal sessionID As String, ByVal isNonIcsUser As Boolean, ByVal isInactiveUser As Boolean, ByVal isUnsuccessfulLogin As Boolean) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddUserAuditAsync
            Return MyBase.Channel.AddUserAuditAsync(storeId, userId, userIP, sessionID, isNonIcsUser, isInactiveUser, isUnsuccessfulLogin)
        End Function
        
        Public Function UpdateUserAudit(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sessionId As String) As String Implements NEA_ICS.WcfService.IService.UpdateUserAudit
            Return MyBase.Channel.UpdateUserAudit(roleDetails, sessionId)
        End Function
        
        Public Function UpdateUserAuditAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sessionId As String) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateUserAuditAsync
            Return MyBase.Channel.UpdateUserAuditAsync(roleDetails, sessionId)
        End Function
        
        Public Function ManageInactiveUser(ByVal storeID As String) As String Implements NEA_ICS.WcfService.IService.ManageInactiveUser
            Return MyBase.Channel.ManageInactiveUser(storeID)
        End Function
        
        Public Function ManageInactiveUserAsync(ByVal storeID As String) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.ManageInactiveUserAsync
            Return MyBase.Channel.ManageInactiveUserAsync(storeID)
        End Function
        
        Public Sub ManageFinancialClosing(ByVal storeID As String, ByVal loginUser As String) Implements NEA_ICS.WcfService.IService.ManageFinancialClosing
            MyBase.Channel.ManageFinancialClosing(storeID, loginUser)
        End Sub
        
        Public Function ManageFinancialClosingAsync(ByVal storeID As String, ByVal loginUser As String) As System.Threading.Tasks.Task Implements NEA_ICS.WcfService.IService.ManageFinancialClosingAsync
            Return MyBase.Channel.ManageFinancialClosingAsync(storeID, loginUser)
        End Function
        
        Public Function GetSuppliers(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.SupplierDetails) Implements NEA_ICS.WcfService.IService.GetSuppliers
            Return MyBase.Channel.GetSuppliers(supplierDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetSuppliersAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.SupplierDetails)) Implements NEA_ICS.WcfService.IService.GetSuppliersAsync
            Return MyBase.Channel.GetSuppliersAsync(supplierDetails, sortExpression, sortDirection)
        End Function
        
        Public Function AddSupplier(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As String Implements NEA_ICS.WcfService.IService.AddSupplier
            Return MyBase.Channel.AddSupplier(supplierDetails)
        End Function
        
        Public Function AddSupplierAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddSupplierAsync
            Return MyBase.Channel.AddSupplierAsync(supplierDetails)
        End Function
        
        Public Function UpdateSupplier(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As String Implements NEA_ICS.WcfService.IService.UpdateSupplier
            Return MyBase.Channel.UpdateSupplier(supplierDetails)
        End Function
        
        Public Function UpdateSupplierAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateSupplierAsync
            Return MyBase.Channel.UpdateSupplierAsync(supplierDetails)
        End Function
        
        Public Function UpdateSupplierStatus(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As String Implements NEA_ICS.WcfService.IService.UpdateSupplierStatus
            Return MyBase.Channel.UpdateSupplierStatus(supplierDetails)
        End Function
        
        Public Function UpdateSupplierStatusAsync(ByVal supplierDetails As NEA_ICS.WcfService.SupplierDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateSupplierStatusAsync
            Return MyBase.Channel.UpdateSupplierStatusAsync(supplierDetails)
        End Function
        
        Public Function AddEquipment(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As String Implements NEA_ICS.WcfService.IService.AddEquipment
            Return MyBase.Channel.AddEquipment(equipmentDetails)
        End Function
        
        Public Function AddEquipmentAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddEquipmentAsync
            Return MyBase.Channel.AddEquipmentAsync(equipmentDetails)
        End Function
        
        Public Function GetEquipments(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.EquipmentDetails) Implements NEA_ICS.WcfService.IService.GetEquipments
            Return MyBase.Channel.GetEquipments(equipmentDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetEquipmentsAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.EquipmentDetails)) Implements NEA_ICS.WcfService.IService.GetEquipmentsAsync
            Return MyBase.Channel.GetEquipmentsAsync(equipmentDetails, sortExpression, sortDirection)
        End Function
        
        Public Function UpdateEquipment(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As String Implements NEA_ICS.WcfService.IService.UpdateEquipment
            Return MyBase.Channel.UpdateEquipment(equipmentDetails)
        End Function
        
        Public Function UpdateEquipmentAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateEquipmentAsync
            Return MyBase.Channel.UpdateEquipmentAsync(equipmentDetails)
        End Function
        
        Public Function UpdateEquipmentStatus(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As String Implements NEA_ICS.WcfService.IService.UpdateEquipmentStatus
            Return MyBase.Channel.UpdateEquipmentStatus(equipmentDetails)
        End Function
        
        Public Function UpdateEquipmentStatusAsync(ByVal equipmentDetails As NEA_ICS.WcfService.EquipmentDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateEquipmentStatusAsync
            Return MyBase.Channel.UpdateEquipmentStatusAsync(equipmentDetails)
        End Function
        
        Public Function AddStore(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As String Implements NEA_ICS.WcfService.IService.AddStore
            Return MyBase.Channel.AddStore(storeDetails)
        End Function
        
        Public Function AddStoreAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddStoreAsync
            Return MyBase.Channel.AddStoreAsync(storeDetails)
        End Function
        
        Public Function GetStores(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails) Implements NEA_ICS.WcfService.IService.GetStores
            Return MyBase.Channel.GetStores(storeDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetStoresAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.StoreDetails)) Implements NEA_ICS.WcfService.IService.GetStoresAsync
            Return MyBase.Channel.GetStoresAsync(storeDetails, sortExpression, sortDirection)
        End Function
        
        Public Function UpdateStore(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As String Implements NEA_ICS.WcfService.IService.UpdateStore
            Return MyBase.Channel.UpdateStore(storeDetails)
        End Function
        
        Public Function UpdateStoreAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateStoreAsync
            Return MyBase.Channel.UpdateStoreAsync(storeDetails)
        End Function
        
        Public Function UpdateStoreStatus(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As String Implements NEA_ICS.WcfService.IService.UpdateStoreStatus
            Return MyBase.Channel.UpdateStoreStatus(storeDetails)
        End Function
        
        Public Function UpdateStoreStatusAsync(ByVal storeDetails As NEA_ICS.WcfService.StoreDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateStoreStatusAsync
            Return MyBase.Channel.UpdateStoreStatusAsync(storeDetails)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function NEA_ICS_WcfService_IService_GenerateItemID(ByVal request As NEA_ICS.WcfService.GenerateItemIDRequest) As NEA_ICS.WcfService.GenerateItemIDResponse Implements NEA_ICS.WcfService.IService.GenerateItemID
            Return MyBase.Channel.GenerateItemID(request)
        End Function
        
        Public Function GenerateItemID(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByRef generatedItemID As String) As String
            Dim inValue As NEA_ICS.WcfService.GenerateItemIDRequest = New NEA_ICS.WcfService.GenerateItemIDRequest()
            inValue.itemDetails = itemDetails
            inValue.generatedItemID = generatedItemID
            Dim retVal As NEA_ICS.WcfService.GenerateItemIDResponse = CType(Me,NEA_ICS.WcfService.IService).GenerateItemID(inValue)
            generatedItemID = retVal.generatedItemID
            Return retVal.GenerateItemIDResult
        End Function
        
        Public Function GenerateItemIDAsync(ByVal request As NEA_ICS.WcfService.GenerateItemIDRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.GenerateItemIDResponse) Implements NEA_ICS.WcfService.IService.GenerateItemIDAsync
            Return MyBase.Channel.GenerateItemIDAsync(request)
        End Function
        
        Public Function AddItem(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As String Implements NEA_ICS.WcfService.IService.AddItem
            Return MyBase.Channel.AddItem(itemDetails)
        End Function
        
        Public Function AddItemAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddItemAsync
            Return MyBase.Channel.AddItemAsync(itemDetails)
        End Function
        
        Public Function GetItems(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails) Implements NEA_ICS.WcfService.IService.GetItems
            Return MyBase.Channel.GetItems(itemDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetItemsAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails)) Implements NEA_ICS.WcfService.IService.GetItemsAsync
            Return MyBase.Channel.GetItemsAsync(itemDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetItemsMasterList(ByVal storeID As String, ByVal printOption As String, ByVal sortBy As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal excludeStockCodeTypes As String, ByVal itemStatus As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails) Implements NEA_ICS.WcfService.IService.GetItemsMasterList
            Return MyBase.Channel.GetItemsMasterList(storeID, printOption, sortBy, stockCodeFrom, stockCodeTo, excludeStockCodeTypes, itemStatus)
        End Function
        
        Public Function GetItemsMasterListAsync(ByVal storeID As String, ByVal printOption As String, ByVal sortBy As String, ByVal stockCodeFrom As String, ByVal stockCodeTo As String, ByVal excludeStockCodeTypes As String, ByVal itemStatus As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails)) Implements NEA_ICS.WcfService.IService.GetItemsMasterListAsync
            Return MyBase.Channel.GetItemsMasterListAsync(storeID, printOption, sortBy, stockCodeFrom, stockCodeTo, excludeStockCodeTypes, itemStatus)
        End Function
        
        Public Function GetStockTransaction(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal transactionType As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails) Implements NEA_ICS.WcfService.IService.GetStockTransaction
            Return MyBase.Channel.GetStockTransaction(itemDetails, transactionType)
        End Function
        
        Public Function GetStockTransactionAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByVal transactionType As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ItemDetails)) Implements NEA_ICS.WcfService.IService.GetStockTransactionAsync
            Return MyBase.Channel.GetStockTransactionAsync(itemDetails, transactionType)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function NEA_ICS_WcfService_IService_UpdateItem(ByVal request As NEA_ICS.WcfService.UpdateItemRequest) As NEA_ICS.WcfService.UpdateItemResponse Implements NEA_ICS.WcfService.IService.UpdateItem
            Return MyBase.Channel.UpdateItem(request)
        End Function
        
        Public Function UpdateItem(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByRef returnMessage As String) As String
            Dim inValue As NEA_ICS.WcfService.UpdateItemRequest = New NEA_ICS.WcfService.UpdateItemRequest()
            inValue.itemDetails = itemDetails
            inValue.returnMessage = returnMessage
            Dim retVal As NEA_ICS.WcfService.UpdateItemResponse = CType(Me,NEA_ICS.WcfService.IService).UpdateItem(inValue)
            returnMessage = retVal.returnMessage
            Return retVal.UpdateItemResult
        End Function
        
        Public Function UpdateItemAsync(ByVal request As NEA_ICS.WcfService.UpdateItemRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.UpdateItemResponse) Implements NEA_ICS.WcfService.IService.UpdateItemAsync
            Return MyBase.Channel.UpdateItemAsync(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function NEA_ICS_WcfService_IService_UpdateItemStatus(ByVal request As NEA_ICS.WcfService.UpdateItemStatusRequest) As NEA_ICS.WcfService.UpdateItemStatusResponse Implements NEA_ICS.WcfService.IService.UpdateItemStatus
            Return MyBase.Channel.UpdateItemStatus(request)
        End Function
        
        Public Function UpdateItemStatus(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails, ByRef returnMessage As String) As String
            Dim inValue As NEA_ICS.WcfService.UpdateItemStatusRequest = New NEA_ICS.WcfService.UpdateItemStatusRequest()
            inValue.itemDetails = itemDetails
            inValue.returnMessage = returnMessage
            Dim retVal As NEA_ICS.WcfService.UpdateItemStatusResponse = CType(Me,NEA_ICS.WcfService.IService).UpdateItemStatus(inValue)
            returnMessage = retVal.returnMessage
            Return retVal.UpdateItemStatusResult
        End Function
        
        Public Function UpdateItemStatusAsync(ByVal request As NEA_ICS.WcfService.UpdateItemStatusRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.UpdateItemStatusResponse) Implements NEA_ICS.WcfService.IService.UpdateItemStatusAsync
            Return MyBase.Channel.UpdateItemStatusAsync(request)
        End Function
        
        Public Function GetItemSearch(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Collections.Generic.List(Of String) Implements NEA_ICS.WcfService.IService.GetItemSearch
            Return MyBase.Channel.GetItemSearch(itemDetails)
        End Function
        
        Public Function GetItemSearchAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String)) Implements NEA_ICS.WcfService.IService.GetItemSearchAsync
            Return MyBase.Channel.GetItemSearchAsync(itemDetails)
        End Function
        
        Public Function IsValidStockCode(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As Boolean Implements NEA_ICS.WcfService.IService.IsValidStockCode
            Return MyBase.Channel.IsValidStockCode(itemDetails)
        End Function
        
        Public Function IsValidStockCodeAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of Boolean) Implements NEA_ICS.WcfService.IService.IsValidStockCodeAsync
            Return MyBase.Channel.IsValidStockCodeAsync(itemDetails)
        End Function
        
        Public Function IsValidStatus(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As Boolean Implements NEA_ICS.WcfService.IService.IsValidStatus
            Return MyBase.Channel.IsValidStatus(itemDetails)
        End Function
        
        Public Function IsValidStatusAsync(ByVal itemDetails As NEA_ICS.WcfService.ItemDetails) As System.Threading.Tasks.Task(Of Boolean) Implements NEA_ICS.WcfService.IService.IsValidStatusAsync
            Return MyBase.Channel.IsValidStatusAsync(itemDetails)
        End Function
        
        Public Function GetModuleRoles(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetModuleRoles
            Return MyBase.Channel.GetModuleRoles(roleDetails)
        End Function
        
        Public Function GetModuleRolesAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetModuleRolesAsync
            Return MyBase.Channel.GetModuleRolesAsync(roleDetails)
        End Function
        
        Public Function GetUserRoles(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetUserRoles
            Return MyBase.Channel.GetUserRoles(roleDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetUserRolesAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetUserRolesAsync
            Return MyBase.Channel.GetUserRolesAsync(roleDetails, sortExpression, sortDirection)
        End Function
        
        Public Function UpdateModuleRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As String Implements NEA_ICS.WcfService.IService.UpdateModuleRole
            Return MyBase.Channel.UpdateModuleRole(roleDetails)
        End Function
        
        Public Function UpdateModuleRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateModuleRoleAsync
            Return MyBase.Channel.UpdateModuleRoleAsync(roleDetails)
        End Function
        
        Public Function UpdateUserRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As String Implements NEA_ICS.WcfService.IService.UpdateUserRole
            Return MyBase.Channel.UpdateUserRole(roleDetails, consumerList)
        End Function
        
        Public Function UpdateUserRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateUserRoleAsync
            Return MyBase.Channel.UpdateUserRoleAsync(roleDetails, consumerList)
        End Function
        
        Public Function CheckNRIC(ByVal roledetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.CheckNRIC
            Return MyBase.Channel.CheckNRIC(roledetails)
        End Function
        
        Public Function CheckNRICAsync(ByVal roledetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.CheckNRICAsync
            Return MyBase.Channel.CheckNRICAsync(roledetails)
        End Function
        
        Public Function AddUserRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As String Implements NEA_ICS.WcfService.IService.AddUserRole
            Return MyBase.Channel.AddUserRole(roleDetails, consumerList)
        End Function
        
        Public Function AddUserRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails, ByVal consumerList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddUserRoleAsync
            Return MyBase.Channel.AddUserRoleAsync(roleDetails, consumerList)
        End Function
        
        Public Function DeleteUserRole(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As String Implements NEA_ICS.WcfService.IService.DeleteUserRole
            Return MyBase.Channel.DeleteUserRole(roleDetails)
        End Function
        
        Public Function DeleteUserRoleAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.DeleteUserRoleAsync
            Return MyBase.Channel.DeleteUserRoleAsync(roleDetails)
        End Function
        
        Public Function GetUserRoleIDBySoeID(ByVal soeID As String) As System.Data.DataSet Implements NEA_ICS.WcfService.IService.GetUserRoleIDBySoeID
            Return MyBase.Channel.GetUserRoleIDBySoeID(soeID)
        End Function
        
        Public Function GetUserRoleIDBySoeIDAsync(ByVal soeID As String) As System.Threading.Tasks.Task(Of System.Data.DataSet) Implements NEA_ICS.WcfService.IService.GetUserRoleIDBySoeIDAsync
            Return MyBase.Channel.GetUserRoleIDBySoeIDAsync(soeID)
        End Function
        
        Public Function GetConsumers(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails) Implements NEA_ICS.WcfService.IService.GetConsumers
            Return MyBase.Channel.GetConsumers(consumerDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetConsumersAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)) Implements NEA_ICS.WcfService.IService.GetConsumersAsync
            Return MyBase.Channel.GetConsumersAsync(consumerDetails, sortExpression, sortDirection)
        End Function
        
        Public Function AddConsumer(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As String Implements NEA_ICS.WcfService.IService.AddConsumer
            Return MyBase.Channel.AddConsumer(consumerDetails, userList)
        End Function
        
        Public Function AddConsumerAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddConsumerAsync
            Return MyBase.Channel.AddConsumerAsync(consumerDetails, userList)
        End Function
        
        Public Function GetConsumerRef(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails) Implements NEA_ICS.WcfService.IService.GetConsumerRef
            Return MyBase.Channel.GetConsumerRef(consumerDetails)
        End Function
        
        Public Function GetConsumerRefAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)) Implements NEA_ICS.WcfService.IService.GetConsumerRefAsync
            Return MyBase.Channel.GetConsumerRefAsync(consumerDetails)
        End Function
        
        Public Function GetConsumerRefByUserID(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails) Implements NEA_ICS.WcfService.IService.GetConsumerRefByUserID
            Return MyBase.Channel.GetConsumerRefByUserID(consumerDetails)
        End Function
        
        Public Function GetConsumerRefByUserIDAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)) Implements NEA_ICS.WcfService.IService.GetConsumerRefByUserIDAsync
            Return MyBase.Channel.GetConsumerRefByUserIDAsync(consumerDetails)
        End Function
        
        Public Function GetUsers(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails) Implements NEA_ICS.WcfService.IService.GetUsers
            Return MyBase.Channel.GetUsers(consumerDetails)
        End Function
        
        Public Function GetUsersAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)) Implements NEA_ICS.WcfService.IService.GetUsersAsync
            Return MyBase.Channel.GetUsersAsync(consumerDetails)
        End Function
        
        Public Function GetUserRef(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails) Implements NEA_ICS.WcfService.IService.GetUserRef
            Return MyBase.Channel.GetUserRef(consumerDetails)
        End Function
        
        Public Function GetUserRefAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ConsumerDetails)) Implements NEA_ICS.WcfService.IService.GetUserRefAsync
            Return MyBase.Channel.GetUserRefAsync(consumerDetails)
        End Function
        
        Public Function UpdateConsumer(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As String Implements NEA_ICS.WcfService.IService.UpdateConsumer
            Return MyBase.Channel.UpdateConsumer(consumerDetails, userList)
        End Function
        
        Public Function UpdateConsumerAsync(ByVal consumerDetails As NEA_ICS.WcfService.ConsumerDetails, ByVal userList As System.Collections.Generic.List(Of String)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateConsumerAsync
            Return MyBase.Channel.UpdateConsumerAsync(consumerDetails, userList)
        End Function
        
        Public Function GetModuleAccess(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetModuleAccess
            Return MyBase.Channel.GetModuleAccess(roleDetails)
        End Function
        
        Public Function GetModuleAccessAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetModuleAccessAsync
            Return MyBase.Channel.GetModuleAccessAsync(roleDetails)
        End Function
        
        Public Function GetModuleAccessRights(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails) Implements NEA_ICS.WcfService.IService.GetModuleAccessRights
            Return MyBase.Channel.GetModuleAccessRights(roleDetails)
        End Function
        
        Public Function GetModuleAccessRightsAsync(ByVal roleDetails As NEA_ICS.WcfService.RoleDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.RoleDetails)) Implements NEA_ICS.WcfService.IService.GetModuleAccessRightsAsync
            Return MyBase.Channel.GetModuleAccessRightsAsync(roleDetails)
        End Function
        
        Public Function GetWorkSheetItems(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails) Implements NEA_ICS.WcfService.IService.GetWorkSheetItems
            Return MyBase.Channel.GetWorkSheetItems(workSheetDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetWorkSheetItemsAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails)) Implements NEA_ICS.WcfService.IService.GetWorkSheetItemsAsync
            Return MyBase.Channel.GetWorkSheetItemsAsync(workSheetDetails, sortExpression, sortDirection)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function NEA_ICS_WcfService_IService_AddWorkSheetItem(ByVal request As NEA_ICS.WcfService.AddWorkSheetItemRequest) As NEA_ICS.WcfService.AddWorkSheetItemResponse Implements NEA_ICS.WcfService.IService.AddWorkSheetItem
            Return MyBase.Channel.AddWorkSheetItem(request)
        End Function
        
        Public Function AddWorkSheetItem(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal workSheetItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails), ByRef workSheetID As Integer) As String
            Dim inValue As NEA_ICS.WcfService.AddWorkSheetItemRequest = New NEA_ICS.WcfService.AddWorkSheetItemRequest()
            inValue.workSheetDetails = workSheetDetails
            inValue.workSheetItemList = workSheetItemList
            inValue.workSheetID = workSheetID
            Dim retVal As NEA_ICS.WcfService.AddWorkSheetItemResponse = CType(Me,NEA_ICS.WcfService.IService).AddWorkSheetItem(inValue)
            workSheetID = retVal.workSheetID
            Return retVal.AddWorkSheetItemResult
        End Function
        
        Public Function AddWorkSheetItemAsync(ByVal request As NEA_ICS.WcfService.AddWorkSheetItemRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.AddWorkSheetItemResponse) Implements NEA_ICS.WcfService.IService.AddWorkSheetItemAsync
            Return MyBase.Channel.AddWorkSheetItemAsync(request)
        End Function
        
        Public Function GetWorksheetGeneratedDate(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As String Implements NEA_ICS.WcfService.IService.GetWorksheetGeneratedDate
            Return MyBase.Channel.GetWorksheetGeneratedDate(workSheetDetails)
        End Function
        
        Public Function GetWorksheetGeneratedDateAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.GetWorksheetGeneratedDateAsync
            Return MyBase.Channel.GetWorksheetGeneratedDateAsync(workSheetDetails)
        End Function
        
        Public Function UpdateWorksheet(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As String Implements NEA_ICS.WcfService.IService.UpdateWorksheet
            Return MyBase.Channel.UpdateWorksheet(workSheetDetails)
        End Function
        
        Public Function UpdateWorksheetAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateWorksheetAsync
            Return MyBase.Channel.UpdateWorksheetAsync(workSheetDetails)
        End Function
        
        Public Function DeleteWorksheet(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As String Implements NEA_ICS.WcfService.IService.DeleteWorksheet
            Return MyBase.Channel.DeleteWorksheet(workSheetDetails)
        End Function
        
        Public Function DeleteWorksheetAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.DeleteWorksheetAsync
            Return MyBase.Channel.DeleteWorksheetAsync(workSheetDetails)
        End Function
        
        Public Function GetMarkedWorksheetItems(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails) Implements NEA_ICS.WcfService.IService.GetMarkedWorksheetItems
            Return MyBase.Channel.GetMarkedWorksheetItems(workSheetDetails, sortExpression, sortDirection)
        End Function
        
        Public Function GetMarkedWorksheetItemsAsync(ByVal workSheetDetails As NEA_ICS.WcfService.WorksheetDetails, ByVal sortExpression As String, ByVal sortDirection As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.WorksheetDetails)) Implements NEA_ICS.WcfService.IService.GetMarkedWorksheetItemsAsync
            Return MyBase.Channel.GetMarkedWorksheetItemsAsync(workSheetDetails, sortExpression, sortDirection)
        End Function
        
        Public Function FieldIsUnique(ByVal storeId As String, ByVal columnName As NEA_ICS.WcfService.ServiceColumnName, ByVal columnValue As String, ByVal pkColumnValue As String) As Boolean Implements NEA_ICS.WcfService.IService.FieldIsUnique
            Return MyBase.Channel.FieldIsUnique(storeId, columnName, columnValue, pkColumnValue)
        End Function
        
        Public Function FieldIsUniqueAsync(ByVal storeId As String, ByVal columnName As NEA_ICS.WcfService.ServiceColumnName, ByVal columnValue As String, ByVal pkColumnValue As String) As System.Threading.Tasks.Task(Of Boolean) Implements NEA_ICS.WcfService.IService.FieldIsUniqueAsync
            Return MyBase.Channel.FieldIsUniqueAsync(storeId, columnName, columnValue, pkColumnValue)
        End Function
        
        Public Function GetMoreItemInfo(ByVal storeId As String, ByVal stockItem As String, ByVal asOfDte As Date) As NEA_ICS.WcfService.MoreItemInfoDetails Implements NEA_ICS.WcfService.IService.GetMoreItemInfo
            Return MyBase.Channel.GetMoreItemInfo(storeId, stockItem, asOfDte)
        End Function
        
        Public Function GetMoreItemInfoAsync(ByVal storeId As String, ByVal stockItem As String, ByVal asOfDte As Date) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.MoreItemInfoDetails) Implements NEA_ICS.WcfService.IService.GetMoreItemInfoAsync
            Return MyBase.Channel.GetMoreItemInfoAsync(storeId, stockItem, asOfDte)
        End Function
        
        Public Function GetLastSerialNo(ByVal storeID As String, ByVal moduleName As NEA_ICS.WcfService.ServiceModuleName) As String Implements NEA_ICS.WcfService.IService.GetLastSerialNo
            Return MyBase.Channel.GetLastSerialNo(storeID, moduleName)
        End Function
        
        Public Function GetLastSerialNoAsync(ByVal storeID As String, ByVal moduleName As NEA_ICS.WcfService.ServiceModuleName) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.GetLastSerialNoAsync
            Return MyBase.Channel.GetLastSerialNoAsync(storeID, moduleName)
        End Function
        
        Public Function WithinFinancialCutoff(ByVal storeID As String, ByVal tranDte As Date) As Boolean Implements NEA_ICS.WcfService.IService.WithinFinancialCutoff
            Return MyBase.Channel.WithinFinancialCutoff(storeID, tranDte)
        End Function
        
        Public Function WithinFinancialCutoffAsync(ByVal storeID As String, ByVal tranDte As Date) As System.Threading.Tasks.Task(Of Boolean) Implements NEA_ICS.WcfService.IService.WithinFinancialCutoffAsync
            Return MyBase.Channel.WithinFinancialCutoffAsync(storeID, tranDte)
        End Function
        
        Public Sub DeleteAllStockTransaction(ByVal storeID As String, ByVal docNo As String, ByVal stockControlType As NEA_ICS.WcfService.ServiceModuleName, ByVal originalDte As Date, ByVal loginUser As String) Implements NEA_ICS.WcfService.IService.DeleteAllStockTransaction
            MyBase.Channel.DeleteAllStockTransaction(storeID, docNo, stockControlType, originalDte, loginUser)
        End Sub
        
        Public Function DeleteAllStockTransactionAsync(ByVal storeID As String, ByVal docNo As String, ByVal stockControlType As NEA_ICS.WcfService.ServiceModuleName, ByVal originalDte As Date, ByVal loginUser As String) As System.Threading.Tasks.Task Implements NEA_ICS.WcfService.IService.DeleteAllStockTransactionAsync
            Return MyBase.Channel.DeleteAllStockTransactionAsync(storeID, docNo, stockControlType, originalDte, loginUser)
        End Function
        
        Public Function AddOrder(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As String Implements NEA_ICS.WcfService.IService.AddOrder
            Return MyBase.Channel.AddOrder(orderDetails, orderItemDetails)
        End Function
        
        Public Function AddOrderAsync(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.AddOrderAsync
            Return MyBase.Channel.AddOrderAsync(orderDetails, orderItemDetails)
        End Function
        
        Public Function GetOrder(ByVal storeID As String, ByVal status As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderDetails) Implements NEA_ICS.WcfService.IService.GetOrder
            Return MyBase.Channel.GetOrder(storeID, status)
        End Function
        
        Public Function GetOrderAsync(ByVal storeID As String, ByVal status As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderDetails)) Implements NEA_ICS.WcfService.IService.GetOrderAsync
            Return MyBase.Channel.GetOrderAsync(storeID, status)
        End Function
        
        Public Function GetOrderItem(ByVal storeId As String, ByVal orderId As String, ByVal unfullfillOnly As Boolean) As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails) Implements NEA_ICS.WcfService.IService.GetOrderItem
            Return MyBase.Channel.GetOrderItem(storeId, orderId, unfullfillOnly)
        End Function
        
        Public Function GetOrderItemAsync(ByVal storeId As String, ByVal orderId As String, ByVal unfullfillOnly As Boolean) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) Implements NEA_ICS.WcfService.IService.GetOrderItemAsync
            Return MyBase.Channel.GetOrderItemAsync(storeId, orderId, unfullfillOnly)
        End Function
        
        Public Function UpdateOrder(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As String Implements NEA_ICS.WcfService.IService.UpdateOrder
            Return MyBase.Channel.UpdateOrder(orderDetails, orderItemDetails)
        End Function
        
        Public Function UpdateOrderAsync(ByVal orderDetails As NEA_ICS.WcfService.OrderDetails, ByVal orderItemDetails As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderItemDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateOrderAsync
            Return MyBase.Channel.UpdateOrderAsync(orderDetails, orderItemDetails)
        End Function
        
        Public Function DeleteOrder(ByVal storeId As String, ByVal orderId As String, ByVal status As String, ByVal loginUser As String) As String Implements NEA_ICS.WcfService.IService.DeleteOrder
            Return MyBase.Channel.DeleteOrder(storeId, orderId, status, loginUser)
        End Function
        
        Public Function DeleteOrderAsync(ByVal storeId As String, ByVal orderId As String, ByVal status As String, ByVal loginUser As String) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.DeleteOrderAsync
            Return MyBase.Channel.DeleteOrderAsync(storeId, orderId, status, loginUser)
        End Function
        
        Public Function GetOrderList(ByVal storeId As String, ByVal status As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderId As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderList) Implements NEA_ICS.WcfService.IService.GetOrderList
            Return MyBase.Channel.GetOrderList(storeId, status, fromDte, toDte, fromStockItemID, toStockItemID, orderId)
        End Function
        
        Public Function GetOrderListAsync(ByVal storeId As String, ByVal status As String, ByVal fromDte As Date, ByVal toDte As Date, ByVal fromStockItemID As String, ByVal toStockItemID As String, ByVal orderId As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.OrderList)) Implements NEA_ICS.WcfService.IService.GetOrderListAsync
            Return MyBase.Channel.GetOrderListAsync(storeId, status, fromDte, toDte, fromStockItemID, toStockItemID, orderId)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function NEA_ICS_WcfService_IService_AddDirectIssue(ByVal request As NEA_ICS.WcfService.AddDirectIssueRequest) As NEA_ICS.WcfService.AddDirectIssueResponse Implements NEA_ICS.WcfService.IService.AddDirectIssue
            Return MyBase.Channel.AddDirectIssue(request)
        End Function
        
        Public Function AddDirectIssue(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails, ByVal directIssueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails), ByRef directIssueDocNo As String) As String
            Dim inValue As NEA_ICS.WcfService.AddDirectIssueRequest = New NEA_ICS.WcfService.AddDirectIssueRequest()
            inValue.directIssue = directIssue
            inValue.directIssueItemList = directIssueItemList
            inValue.directIssueDocNo = directIssueDocNo
            Dim retVal As NEA_ICS.WcfService.AddDirectIssueResponse = CType(Me,NEA_ICS.WcfService.IService).AddDirectIssue(inValue)
            directIssueDocNo = retVal.directIssueDocNo
            Return retVal.AddDirectIssueResult
        End Function
        
        Public Function AddDirectIssueAsync(ByVal request As NEA_ICS.WcfService.AddDirectIssueRequest) As System.Threading.Tasks.Task(Of NEA_ICS.WcfService.AddDirectIssueResponse) Implements NEA_ICS.WcfService.IService.AddDirectIssueAsync
            Return MyBase.Channel.AddDirectIssueAsync(request)
        End Function
        
        Public Function GetDirectIssueID(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails) Implements NEA_ICS.WcfService.IService.GetDirectIssueID
            Return MyBase.Channel.GetDirectIssueID(directIssue)
        End Function
        
        Public Function GetDirectIssueIDAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) Implements NEA_ICS.WcfService.IService.GetDirectIssueIDAsync
            Return MyBase.Channel.GetDirectIssueIDAsync(directIssue)
        End Function
        
        Public Function GetDirectIssues(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails) Implements NEA_ICS.WcfService.IService.GetDirectIssues
            Return MyBase.Channel.GetDirectIssues(directIssue)
        End Function
        
        Public Function GetDirectIssuesAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) Implements NEA_ICS.WcfService.IService.GetDirectIssuesAsync
            Return MyBase.Channel.GetDirectIssuesAsync(directIssue)
        End Function
        
        Public Function GetDirectIssueList(ByVal storeID As String, ByVal dteIssueFrom As Date, ByVal dteIssueTo As Date, ByVal docNo As String) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails) Implements NEA_ICS.WcfService.IService.GetDirectIssueList
            Return MyBase.Channel.GetDirectIssueList(storeID, dteIssueFrom, dteIssueTo, docNo)
        End Function
        
        Public Function GetDirectIssueListAsync(ByVal storeID As String, ByVal dteIssueFrom As Date, ByVal dteIssueTo As Date, ByVal docNo As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) Implements NEA_ICS.WcfService.IService.GetDirectIssueListAsync
            Return MyBase.Channel.GetDirectIssueListAsync(storeID, dteIssueFrom, dteIssueTo, docNo)
        End Function
        
        Public Function GetDirectIssueItems(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails) Implements NEA_ICS.WcfService.IService.GetDirectIssueItems
            Return MyBase.Channel.GetDirectIssueItems(directIssue)
        End Function
        
        Public Function GetDirectIssueItemsAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) Implements NEA_ICS.WcfService.IService.GetDirectIssueItemsAsync
            Return MyBase.Channel.GetDirectIssueItemsAsync(directIssue)
        End Function
        
        Public Function DeleteDirectIssue(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As String Implements NEA_ICS.WcfService.IService.DeleteDirectIssue
            Return MyBase.Channel.DeleteDirectIssue(directIssue)
        End Function
        
        Public Function DeleteDirectIssueAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.DeleteDirectIssueAsync
            Return MyBase.Channel.DeleteDirectIssueAsync(directIssue)
        End Function
        
        Public Function UpdateDirectIssue(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails, ByVal directIssueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) As String Implements NEA_ICS.WcfService.IService.UpdateDirectIssue
            Return MyBase.Channel.UpdateDirectIssue(directIssue, directIssueItemList)
        End Function
        
        Public Function UpdateDirectIssueAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails, ByVal directIssueItemList As System.Collections.Generic.List(Of NEA_ICS.WcfService.DirectIssueDetails)) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.UpdateDirectIssueAsync
            Return MyBase.Channel.UpdateDirectIssueAsync(directIssue, directIssueItemList)
        End Function
        
        Public Function GetDirectIssueInfo(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As String Implements NEA_ICS.WcfService.IService.GetDirectIssueInfo
            Return MyBase.Channel.GetDirectIssueInfo(directIssue)
        End Function
        
        Public Function GetDirectIssueInfoAsync(ByVal directIssue As NEA_ICS.WcfService.DirectIssueDetails) As System.Threading.Tasks.Task(Of String) Implements NEA_ICS.WcfService.IService.GetDirectIssueInfoAsync
            Return MyBase.Channel.GetDirectIssueInfoAsync(directIssue)
        End Function
        
        Public Function GetReceiveItem(ByVal storeID As String, ByVal orderID As String, ByVal dte As Date) As System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails) Implements NEA_ICS.WcfService.IService.GetReceiveItem
            Return MyBase.Channel.GetReceiveItem(storeID, orderID, dte)
        End Function
        
        Public Function GetReceiveItemAsync(ByVal storeID As String, ByVal orderID As String, ByVal dte As Date) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of NEA_ICS.WcfService.ReceiveItemDetails)) Implements NEA_ICS.WcfService.IService.GetReceiveItemAsync
            Return MyBase.Channel.GetReceiveItemAsync(storeID, orderID, dte)
        End Function
        
        Public Function GetReceiveDte(ByVal storeID As String, ByVal orderID As String) As System.Collections.Generic.List(Of Date) Implements NEA_ICS.WcfService.IService.GetReceiveDte
            Return MyBase.Channel.GetReceiveDte(storeID, orderID)
        End Function
        
        Public Function GetReceiveDteAsync(ByVal storeID As String, ByVal orderID As String) As System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Date)) Implements NEA_ICS.WcfService.IService.GetReceiveDteAsync
            Return MyBase.Channel.GetReceiveDteAsync(storeID, orderID)
        End Function
    End Class
End Namespace
